{
    "docs": [
        {
            "location": "/", 
            "text": "Jiaqi Ye\n\n\nSoftware Engineer\n\n\n\n\n\u4e00\u4e2a\u7ecf\u5e38\u5199\u524d\u7aef\u7684\u5047\u8fd0\u7ef4\n\n\n\u5199\u5199\u524d\u7aef\u4e4b\u540e\uff0c\u53c8\u5199\u5199\u540e\u7aef\u7684\u4f20\u8bf4\u4e2d\u7684\u5168\u6808\n\n\n\u4e00\u4e2a\u559c\u6b22Python\u7684\u4f18\u96c5\u7537\u4eba\n\n\n\u7b97\u6cd5\u4e0d\u662f\u5f88\u597d\uff0c\u6b63\u5728\u52aa\u529b\u8865\u4e60\n\n\n\n\nContact Me\n\n\n\n\nEmail : \n\n\nGithub: \nyejiaqi@github\n\n\n\u77e5\u4e4e: \n\u77e5\u4e4e\u4e3b\u9875", 
            "title": "\u4e3b\u9875"
        }, 
        {
            "location": "/#jiaqi_ye", 
            "text": "Software Engineer   \u4e00\u4e2a\u7ecf\u5e38\u5199\u524d\u7aef\u7684\u5047\u8fd0\u7ef4  \u5199\u5199\u524d\u7aef\u4e4b\u540e\uff0c\u53c8\u5199\u5199\u540e\u7aef\u7684\u4f20\u8bf4\u4e2d\u7684\u5168\u6808  \u4e00\u4e2a\u559c\u6b22Python\u7684\u4f18\u96c5\u7537\u4eba  \u7b97\u6cd5\u4e0d\u662f\u5f88\u597d\uff0c\u6b63\u5728\u52aa\u529b\u8865\u4e60", 
            "title": "Jiaqi Ye"
        }, 
        {
            "location": "/#contact_me", 
            "text": "Email :   Github:  yejiaqi@github  \u77e5\u4e4e:  \u77e5\u4e4e\u4e3b\u9875", 
            "title": "Contact Me"
        }, 
        {
            "location": "/posts/architecture/design-pattern/MVC\u89e3\u8bfb/", 
            "text": "Model-View-Controller\n\n\n\u7b80\u4ecb\n\n\nMVC\u662f\u4e00\u79cd\u201c\u7528\u6237\u4ea4\u4e92\u201d\u8f6f\u4ef6\u7684\u6784\u67b6\u65b9\u6cd5\u3002\u5b83\u628a\u4e00\u4e2a\u5e94\u7528\u8f6f\u4ef6\u5206\u4e3a\u4e09\u4e2a\u4e92\u76f8\u5173\u8054\u7684\u90e8\u5206\uff0c\u5206\u522b\u662fModel\u3001View\u548cController\u3002\u5982\u4eca\uff0c\u5728Web\u5e94\u7528\u5f00\u53d1\u7684\u65f6\u5019\u5f88\u7ecf\u5e38\u88ab\u4f7f\u7528\u3002\n\n\n\u7136\u800c\uff0c\u4e0d\u5c11\u4eba\u5bf9\u4e8e\u8fd9\u79cd\u8f6f\u4ef6\u8bbe\u8ba1\u7684\u65b9\u6cd5\u6709\u8bef\u89e3\u3002\u73b0\u5728\u6211\u4ee5\u4e2a\u4eba\u7684\u7406\u89e3\u65b9\u5f0f\u6765\u8c08\u4e00\u8c08\u8fd9\u79cd\u8bbe\u8ba1\u6a21\u5f0f\u3002\n\n\n\u8001\u5e08\u8bb2\u7684MVC\n\u7cfb\u7edf\u5206\u6790\u4e0e\u8bbe\u8ba1\u4e0a\u8bfe\u7684\u65f6\u5019\uff0c\u8001\u5e08\u4f1a\u8bb2MVC\u7684\u8f6f\u4ef6\u8bbe\u8ba1\u6a21\u5f0f\u3002\n\n\n\u8001\u5e08\u4f1a\u5728\u9ed1\u677f\u4e0a\u719f\u7ec3\u5730\u753b\u51fa\u8fb9\u754c\u7c7b\u3001\u63a7\u5236\u5668\u3001\u6570\u636e\u6a21\u578b\uff0c\u7136\u540e\u544a\u8bc9\u6211\u4eec\u4e0b\u9762\u8fd9\u4e2a\u56fe\u3002\n\n\n\u8001\u5e08\u8bb2\u7684\u7cfb\u7edf\u6d41\u7a0b\uff1a\n\n\n\u7528\u6237\u5728\u524d\u7aef\u64cd\u4f5cview\u89e6\u53d1\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u5047\u8bbe\u6309\u4e86\u4e00\u4e2abutton\nController\u5c06\u5904\u7406\u8fd9\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u5e76\u4e14\u4f1a\u4fee\u6539model\u5b9e\u4f53\u7684\u201c\u72b6\u6001\u201d\nModel\u7684\u4fee\u6539\u653e\u56de\u5230Controller\uff0c\u7136\u540eController\u4fee\u6539View\n\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff1a\n\n\nView: \u8d1f\u8d23\u663e\u793a\u7528\u6237\u4ea4\u4e92\u7684\u754c\u9762\nController: \u5904\u7406\u7528\u6237\u5728\u754c\u9762\u4e2d\u89e6\u53d1\u7684\u4e8b\u4ef6\uff08\u6216\u8005\u662f\u5176\u4ed6\u4e8b\u4ef6\uff0c\u6bd4\u5982\u5b9a\u65f6\u5668\u89e6\u53d1\u7684\uff09\uff0c\u7136\u540e\u6839\u636e\u8fd9\u4e2a\u4e8b\u4ef6\u7684\u7c7b\u578b\u3001\u7528\u6237\u8f93\u5165\u7684\u53c2\u6570\u3001\u7528\u6237\u672c\u8eab\u7684\u4fe1\u606f\uff0c\u5bf9model\u6570\u636e\u5b9e\u4f53\u7684\u72b6\u6001\u8fdb\u884c\u4fee\u6539\uff0c\u6700\u540e\u518d\u64cd\u4f5cView\u8fdb\u884c\u4fee\u6539\u3002\nModel: \u6570\u636e\u5b9e\u4f53\uff0c\u4fdd\u5b58\u7740\u8fd9\u4e2a\u7cfb\u7edf\u91cc\u9762\u6240\u6709\u5173\u952e\u62bd\u8c61\u7684\u5b9e\u4f53\u5bf9\u8c61\u3002\uff08\u6240\u8c13\u7684\u201c\u5b9e\u4f53\u5bf9\u8c61\u201d\u5c31\u662f\u201c\u5b9e\u4f53\u7c7b\u662f\u7528\u4e8e\u5bf9\u5fc5\u987b\u5b58\u50a8\u7684\u4fe1\u606f\u548c\u76f8\u5173\u884c\u4e3a\u5efa\u6a21\u7684\u7c7b\u7684\u5b9e\u4f8b\u201d\uff09\n\u4e09\u4e2a\u90e8\u5206\u4e4b\u95f4\u65e2\u6709\u5173\u7cfb\uff0c\u53c8\u76f8\u5bf9\u72ec\u7acb\uff0c\u662f\u4e00\u79cd\u5f88\u597d\u8bbe\u8ba1\u6a21\u5f0f\u3002\u5404\u4e2a\u90e8\u5206\u5404\u53f8\u5176\u804c\uff0c\u914d\u5408\u5de5\u4f5c\uff0c\u6784\u5efa\u51fa\u4e00\u4e2a\u903b\u8f91\u6e05\u6670\u7684\u8f6f\u4ef6\u7cfb\u7edf\u3002\n\n\n\u8001\u5e08\u4f1a\u8ddf\u4f60\u5f3a\u8c03\u4e00\u70b9\uff0cModel\u548cView\u4e4b\u95f4\u662f\u6ca1\u6709\u4e4b\u95f4\u5173\u8054\u7684\uff0c\u90a3\u6837\u753b\u56fe\u662f\u8981\u6263\u5206\u7684\u3002\n\n\n\u5b9e\u9645\u4e0a\u8fd9\u79cd\u89c2\u70b9\u5e76\u4e0d\u662f\u5b8c\u5168\u6b63\u786e\u7684\u3002\n\n\nWeb \u5e94\u7528\u4e2d\u7684MVC\nAlthough originally developed for desktop computing, model\u2013view\u2013controller has been widely adopted as an architecture for World Wide Web applications in major programming languages. Several commercial and noncommercial web frameworks have been created that enforce the pattern. These software frameworks vary in their interpretations, mainly in the way that the MVC responsibilities are divided between the client and server.[14]\n\n\nEarly web MVC frameworks took a thin client approach that placed almost the entire model, view and controller logic on the server. This is still reflected in popular frameworks such as Ruby on Rails, Django, ASP.NET MVC and Express. In this approach, the client sends either hyperlink requests or form input to the controller and then receives a complete and updated web page (or other document) from the view; the model exists entirely on the server.[14] As client technologies have matured, frameworks such as AngularJS, EmberJS, JavaScriptMVC and Backbone have been created that allow the MVC components to execute partly on the client (also see Ajax).\n\n\nFrom Wikipedia\n\n\n\u7ef4\u57fa\u767e\u79d1\u8fd9\u6bb5\u8bdd\u8bb2\u7684\u6211\u5f88\u8ba4\u540c\uff0c\u5927\u6982\u7684\u610f\u601d\u662f\uff0c\u4f20\u7edf\u7684MVC\u8bbe\u8ba1\u6a21\u5f0f\u662f\u5bf9\u4e8e\u201c\u684c\u9762\u578b\u201d\u5e94\u7528\u7684\uff0c\u4f46\u662f\u968f\u65f6Web\u7684\u53d1\u5c55\uff0c\u5f88\u591aWeb\u5e94\u7528\u4f1a\u9009\u62e9\u4f7f\u7528MVC\u4f5c\u4e3a\u5176\u67b6\u6784\u3002\n\n\n\u5728\u8ba8\u8bbaweb\u5e94\u7528\u7684MVC\u6846\u67b6\u7684\u65f6\u5019\uff0c\u5e94\u8be5\u5206\u4e3a\u201c\u670d\u52a1\u7aef\u201d\u548c\u201c\u5ba2\u6237\u7aef\u201d\u6765\u8ba8\u8bba\u3002\n\n\n\u5bf9\u4e8e\u4f20\u7edf\u7684Web\u5e94\u7528\n\u8fd9\u79cdWeb\u5e94\u7528\u53ef\u4ee5\u8bf4\u53ea\u6709\u670d\u52a1\u7aef\uff0c\u6240\u8c13\u7684\u524d\u7aef\u90fd\u662f\u4e8b\u5148\u5199\u597d\u7684html\u9875\u9762\u3002\u6574\u4e2a\u8bf7\u6c42\u8fc7\u7a0b\u5c31\u662f\uff1a\n\n\n\u7528\u6237\u5728\u6d4f\u89c8\u5668\u53d1\u8d77Http Get/Post \u8bf7\u6c42\n\u670d\u52a1\u7aef\u63a5\u53d7\u5230\u8bf7\u6c42\n\u670d\u52a1\u7aef\u6839\u636e\u7528\u6237\u8bf7\u6c42\u7684\u6570\u636e\uff0c\u201c\u8ba1\u7b97\u201d\u51fa\u8981\u8f93\u51fa\u7684html\u9875\u9762\n\u670d\u52a1\u7aef\u54cd\u5e94\u7528\u6237\u8bf7\u6c42\n\u9875\u9762\u6e32\u67d3\uff0c\u672c\u6b21\u8bf7\u6c42\u7ed3\u675f\n\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u6709\u592a\u591a\u77e5\u8bc6\u6d89\u53ca\uff0c\u6211\u4eec\u73b0\u5728\u8ba8\u8bba\u670d\u52a1\u7aef\u5904\u7406\u8bf7\u6c42\u7684\u8fc7\u7a0b\u3002\n\n\n\u4f20\u7edf\u7684Web\u5e94\u7528\u5c31\u5728\u8fd9\u5c42\u670d\u52a1\u7aef\u4e0a\u505a\u4e86MVC\u7684\u67b6\u6784\u3002Ruby on Rails, Django, ASP.NET MVC and Express \u7eb7\u7eb7\u4e2d\u67aa\u3002\n\n\n\u8fd9\u91cc\u62ff\u4e00\u4e2apython tornado\u7684\u9879\u76ee\u8389\u5b50\uff1a\n\n\n.\n\u251c\u2500\u2500 doc   \u5b58\u653e\u9879\u76ee\u9700\u6c42\u3001\u5206\u5de5\u3001\u9879\u76ee\u6c47\u62a5\u7b49\u6587\u6863\n\u251c\u2500\u2500 db    \u5b58\u653e\u6570\u636e\u5e93\u8868\u7ed3\u6784\n\u2514\u2500\u2500 src   \u9879\u76ee\u7684\u4ee3\u7801\n   \u251c\u2500\u2500 handlers   controller\n   \u251c\u2500\u2500 model      model\n   \u251c\u2500\u2500 templates  view\n   \u251c\u2500\u2500 static     \u9759\u6001\u8d44\u6e90\n   \u251c\u2500\u2500 application.py  \u7cfb\u7edf\u5e94\u7528\u8bbe\u7f6e\n   \u251c\u2500\u2500 server.py   \u670d\u52a1\u5668\u542f\u52a8\u811a\u672c\n   \u2514\u2500\u2500 urls.py     \u8def\u7531\u89c4\u5219\n\u8fd9\u4e2a\u662f\u7cfb\u7edf\u5206\u6790\u4e0e\u8bbe\u8ba1\u7684\u4f5c\u4e1a\uff0c\u5927\u6982\u7684\u529f\u80fd\u5c31\u662f\u63d0\u4f9b\u7528\u6237\u8d2d\u7968\u7684\u529f\u80fd\uff0c\u975e\u5e38\u7b80\u5355\u7684\u529f\u80fd\u3002\u4f46\u662f\u9ebb\u96c0\u867d\u5c0f\uff0c\u4e94\u810f\u4ff1\u5168\u3002\n\n\nonline ticket system\n\n\nMVC\u5404\u4e2a\u5c42\u6b21\u5728\u8fd9\u4e2a\u9879\u76ee\u7684\u5206\u5de5\uff1a\n\n\nmodel : \u5b9e\u4f53\u5bf9\u8c61\uff0c\u5b58\u50a8\u4e86user\u3001ticket\u8fd9\u4e24\u4e2a\u4e1a\u52a1\u4e2d\u7684\u5173\u952e\u5b9e\u4f53\u7c7b\uff0c\u5e76\u4e14\u63d0\u4f9b\u4e86\u5bf9\u4e8emysql\u6570\u636e\u5e93\u7684CRUD\u529f\u80fd\nview : \u89c6\u56fe\uff0c\u5728\u8fd9\u4e2a\u9879\u76ee\u4e2d\u4f7f\u7528html+tornado\u7684\u6a21\u677f\u5f15\u64ce\u6784\u6210\uff0c\u4e3b\u8981\u8d1f\u8d23\u4f20\u7ed9\u6d4f\u89c8\u5668\u8981\u6e32\u67d3\u7684html\u9875\u9762\nhandler(Controller) : \u7cfb\u7edf\u7684\u4e3b\u8981\u4e1a\u52a1\u903b\u8f91\uff0c\u5bf9\u6bcf\u4e2a\u8def\u7531\u8fc7\u6765\u7684\u8bf7\u6c42\u8fdb\u884c\u76f8\u5e94\u7684\u64cd\u4f5c\uff0c\u540c\u65f6\u8fd4\u56de\u9875\u9762\u548c\u6570\u636e\u7ed9\u8bf7\u6c42\n\u5bf9\u5e94\u4e0b\u56fe\u7684\u64cd\u4f5c\uff1a \n\n\nModel Ticket\n\n\ncoding:utf-8\n\n\nimport database\n\n\nclass Ticket(database.DataBase):\n\n    def from_id(self, ticketId):\n        try:\n            ticket = self.db.get(sql);\n            self.id = ticket.id\n            self.train = ticket.train\n            self.departure = ticket.departure\n            self.edeparture = ticket.edeparture\n            self.destination = ticket.destination\n            self.edestination = ticket.edestination\n            self.departureTime = ticket.departureTime\n            self.arrivalTime = ticket.arrivalTime\n            self.price = ticket.price\n            self.statu = ticket.statu\n        except:\n            return\n    def buy_ticket(self, userId):\n        if self.statu == \"sold\":\n            return False\n        self.db.execute(\"update ticket set ticket.statu = 'sold' where id = {0}\".format(self.id))\n        self.db.execute(\"insert into orders (userId, ticketId) values ({0}, {1})\".format(userId, self.id))\n        return True\n\n\n@staticmethod\ndef get_all_tickets():\n    db = database.DataBase.initial_data_base()\n    tickets = db.query(sql);\n    return tickets\n\n@staticmethod\ndef get_my_tickets(userId):\n    db = database.DataBase.initial_data_base()\n    tickets = db.query(sql)\n    return tickets\n\n\n\n\nController Ticket\n\n\ncoding:utf-8\n\n\nimport tornado.web\n\nimport model.ticket\n\n\nclass TicketHandler(tornado.web.RequestHandler):\n\n    def get(self, ticketId):\n        ticket = model.ticket.Ticket()\n        ticket.from_id(ticketId)\n\n\n    self.render(\nticket.html\n, ticket = ticket)\n\ndef post(self, ticketId):\n    if not self.get_secure_cookie(\nuser\n):\n        self.render(\nplease login!\n)\n\n    user = model.user.User()\n    user.from_username(self.get_secure_cookie(\nuser\n))\n\n    ticket = model.ticket.Ticket()\n    ticket.from_id(ticketId)\n\n    if ticket.buy_ticket(user.id):\n        self.render(\nerror.html\n, message = \nbuy ticket success!\n)\n    else:\n        self.render(\nerror.html\n, message = \nfailed to buy ticket!\n)\n\n\n\n\n\u8fd9\u4e2a\u662f\u4f20\u7edf\u7684web\u5f00\u53d1\u9879\u76ee\uff0cMVC\u4f53\u73b0\u5728\u5728\u6574\u4e2aserver-side\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\uff0cserver-side\u662f\u4e00\u4e2ablack box\uff0c\u8f93\u5165\u662f\u7528\u6237\u7684\u8bf7\u6c42\uff0c\u8f93\u51fa\u662fhtml\u4ee3\u7801\u3002\n\n\n\u53ea\u4f20\u8f93\u6570\u636e\u7684web\u9879\u76ee\n\u201c\u4f20\u7edf\u201d\u5f97web\u9879\u76ee\u662f\u901a\u8fc7\u4f20\u9012html\u9875\u9762\u7684\uff0c\u90a3\u4e48\u5982\u679c\u8bf7\u6c42\u7684server\u662f\u4e00\u4e2ahttp \u201c\u6570\u636e\u63a5\u53e3\u201d\u63a5\u53e3\u670d\u52a1\u5668\u5462\uff1f\n\n\n\u5b9e\u9645\u4e0a\u5f88\u591a\u65f6\u5019\uff0c\u7279\u522b\u662f\u5728\u505a\u5355\u9875\u9762\u5f00\u53d1\uff0c\u6216\u8005\u662f\u5b89\u5353\u3001IOS\u79fb\u52a8\u7aef\u5f00\u53d1\u65f6\u5019\uff0cserver-side\u4e00\u822c\u90fd\u662f\u4f20\u8f93json\u6570\u636e\uff08xml\u4e5f\u6709\uff0c\u4e0d\u8fc7\u73b0\u5728\u5927\u5bb6\u6bd4\u8f83\u559c\u6b22json\uff09\n\n\n\u6211\u4eec\u63a5\u4e0b\u6765\u770b\u4e0b\u4e0b\u9762\u8fd9\u4e2apython flask\u7684\u9879\u76ee\uff0c\u8fd9\u4e2a\u9879\u76ee\u989d\u5916\u5f15\u7528\u4e86\u4e00\u4e9b\u6280\u672f\uff1a\n\n\nGevent \uff08python \u5f02\u6b65\u7f16\u7a0b\uff09\nsqlalchemy (python ORM)\n\u9879\u76ee\u7ec4\u7ec7\u67b6\u6784\uff1a \n\n\n\u5176\u4e2d\uff0c\u6211\u4eec\u770b\u7528\u6237\u4fee\u6539\u4e2a\u4eba\u4fe1\u606f\u7684\u529f\u80fd\uff1a\n\n\nModel\n\n\ncoding: utf-8\n\n\nfrom runtob import db\n\nfrom sqlalchemy.dialects import mysql\n\n\nclass UserProfile(db.Model):\n\n\ntablename\n = 'user_profile'\n    userId = db.Column(db.Integer, primary_key=True)\n    nickname = db.Column(db.String(50), nullable=False)\n    gender = db.Column(mysql.ENUM('male', 'female', ''), nullable=False)\n    phone = db.Column(db.String(30), nullable=False)\n    email = db.Column(db.String(50), nullable=False)\n    avatar = db.Column(db.String(200), nullable=False)\n\n\ndef __init__(self, userId, nickname=\n, gender=\n, phone=\n, email=\n, avatar=\n):\n    self.userId = userId\n    self.nickname = nickname\n    self.gender = gender\n    self.phone = phone\n    self.email = email\n    self.avatar = avatar\n\n\n\n\nController\n@bp.route('/UpdateInformation', methods=['POST'])\n@permission\ndef UpdateInformation():\n\n    userId = request.form['userId']\n    gender = request.form['gender']\n    nickname = request.form['nickname']\n    phone = request.form['phone']\n    email = request.form['email']\n    avatar = request.form['avatar']\n    user = UserProfile.query.get(userId)\n    user.gender = {\n            '0':'male',\n            '1':'female',\n        }.get(gender, '')\n    user.phone = phone\n    user.nickname = nickname\n    user.email = email #todo \u6821\u9a8c\n    user.avatar = avatar\n    db.session.commit()\n    return jsonify({'state': 200, 'error': ''})\n\u5176\u4e2d\uff0c\u6211\u4eec\u5728Model\u5c42\u4f7f\u7528\u4e86ORM\u6280\u672f\n\n\nORM \u5bf9\u8c61\u5173\u7cfb\u6620\u5c04\n\n\n\u662f\u4e00\u79cd\u7a0b\u5e8f\u8bbe\u8ba1\u6280\u672f\uff0c\u7528\u4e8e\u5b9e\u73b0\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u8bed\u8a00\u91cc\u4e0d\u540c\u7c7b\u578b\u7cfb\u7edf\u7684\u6570\u636e\u4e4b\u95f4\u7684\u8f6c\u6362\u3002\u4ece\u6548\u679c\u4e0a\u8bf4\uff0c\u5b83\u5176\u5b9e\u662f\u521b\u5efa\u4e86\u4e00\u4e2a\u53ef\u5728\u7f16\u7a0b\u8bed\u8a00\u91cc\u4f7f\u7528\u7684\u201c\u865a\u62df\u5bf9\u8c61\u6570\u636e\u5e93\u201d\u3002 \u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u4f7f\u7528\u4e86sqlalchemy\uff0c\u4f7f\u5f97\u6570\u636e\u5e93\u7684userprofile\u7684\u8868\u548cpython model\u4e2d\u7684userprofile\u7c7b\u505a\u4e86\u6620\u5c04\uff0c\u4ece\u800c\u53ea\u8981\u5bf9user\u7684\u5b9e\u4f8b\u8d4b\u503c\u7136\u540e\u63d0\u4ea4\u5219\u53ef\u4ee5\u540c\u6b65\u66f4\u65b0\u6570\u636e\u5e93\u3002\u5f88\u5927\u7a0b\u5ea6\u4e0a\u51cf\u5c11\u4e86sql\u8bed\u53e5\u7684\u7f16\u5199\uff0c\u589e\u5f3a\u4e86\u4ee3\u7801\u7684\u53ef\u7ef4\u62a4\u6027\u3002\n\n\n\u5bf9\u4e8eServer Side MVC \u7684\u4e00\u4e9b\u7591\u60d1\n1. \u201c\u4e09\u5c42\u67b6\u6784\u201d\u4e0e\u201cMVC\u201d\u7684\u533a\u522b\n\u5f88\u591a\u4eba\u6709\u8fd9\u4e2a\u7591\u60d1\u3002\u6240\u8c13\u7684\u201c\u4e09\u5c42\u67b6\u6784\u201d\u662f\u8868\u793a\u5c42\u3001\u4e1a\u52a1\u903b\u8f91\u5c42\u3001\u6570\u636e\u5c42\u3002\u7f51\u4e0a\u5bf9\u4e8e\u8fd9\u4e2a\u95ee\u9898\u6709\u4e0d\u5c11\u56de\u7b54\uff0c\u6211\u89c9\u5f97\u90fd\u662f\u626f\u6de1\u7684\u3002 \n\n\nIn software engineering, multitier architecture (often referred to as n-tier architecture) is a client\u2013server architecture in which presentation, application processing, and data management functions are physically separated. The most widespread use of multitier architecture is the three-tier architecture.\n\n\n\u6765\u81ea\u7ef4\u57fa\u767e\u79d1\u5bf9\u4e8e\u4e09\u5c42\u67b6\u6784\u7684\u89e3\u91ca\u3002\u591a\u5c42\u67b6\u6784\u662f\u8f6f\u4ef6\u5de5\u7a0b\u4e2d\u57fa\u4e8eCS\u7684\u4e00\u79cd\u67b6\u6784\uff0c\u4ed6\u5c06\u8868\u793a\u3001\u5e94\u7528\u5904\u7406\u548c\u6570\u636e\u7ba1\u7406\u529f\u80fd\u8fdb\u884c\u7269\u7406\u5206\u79bb\u3002\u6700\u5e38\u89c1\u7684\u591a\u5c42\u67b6\u6784\u662f\u4e09\u5c42\u67b6\u6784\u3002\n\n\n\u4ee5\u4e0b\u662f\u6784\u67b6\u56fe\uff1a\n\n\nWeb\u5f00\u53d1\u65f6\u5019\u6307\u5357\uff1a \n\u5728Web\u5f00\u53d1\u9886\u57df\uff0c\u4e09\u5c42\u6784\u67b6\u901a\u5e38\u6307\u524d\u7aef\u6d4f\u89c8\u5668\u6e32\u67d3\u7684\u7f51\u9875\u3001Server\u4e0a\u8fd0\u884c\u7684\u4ee3\u7801\u4ee5\u53ca\u6570\u636e\u6301\u4e45\u5316\u5c42\uff08\u4e00\u822c\u7528\u6570\u636e\u5e93\u548c\u6587\u4ef6\u7cfb\u7edf\uff09\n\n\n\u8868\u793a\u5c42\uff0c\u5b9e\u8d28\u662f\u6d4f\u89c8\u5668\u5e2e\u6211\u4eec\u5b9e\u73b0\u4e86\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u5ffd\u7565\u6389\u3002\u8868\u793a\u5c42\u5c31\u662f\u6d4f\u89c8\u5668\u6e32\u67d3\u51fa\u6765\u7684\u524d\u7aef\u9875\u9762\u3002\n\u4e1a\u52a1\u903b\u8f91\u5c42\u5176\u5b9e\u5c31\u662fWebServer\u5bf9\u4e8e\u524d\u7aef\u8bf7\u6c42\u7684\u5904\u7406\n\u800c\u6570\u636e\u5c42\u5219\u662f\u4f7f\u7528\u6570\u636e\u5e93\u7cfb\u7edf\u4ee5\u53ca\u6587\u4ef6\u7cfb\u7edf\u5b9e\u73b0\u7684\u6570\u636e\u6301\u4e45\u5316\u5c42\n\u5f53\u6211\u4eec\u6e05\u6670\u7406\u89e3MVC\u548c\u4e09\u5c42\u67b6\u6784\u7684\u771f\u6b63\u601d\u60f3\u65f6\u5019\uff0c\u5c31\u80fd\u7406\u89e3\u5230\u8fd9\u4e24\u8005\u7684\u533a\u522b\u6240\u5728\u3002\n\n\n\n\nCRUD \u5e94\u8be5\u653e\u5728 Model \u8fd8\u662f Controller\uff1f\n\u89c2\u70b91\uff1aCRUD\u5e94\u8be5\u653e\u5728Controller\u5c42:\n\n\n\n\n\u7528\u6237\u63d0\u4ea4\u5230\u670d\u52a1\u5668\u7684http\u8bf7\u6c42\uff0c\u7531Controller\u5904\u7406\uff0c\u5f97\u5230\nController\u8d1f\u8d23\u6570\u636e\u4e1a\u52a1\u7684CRUD\uff0c\u5e76\u4e14\u54cd\u5e94\nModel \u53ea\u4ee3\u8868\u5b9e\u4f53\u5bf9\u8c61\uff0c\u5982\u7528\u6237\uff0c\u800c\u4e0d\u63d0\u4f9bCRUD\u65b9\u6cd5\n\u901a\u8fc7\u8d44\u6e90\u63a7\u5236\u5668\uff08Resource Controller\uff09\u5b9e\u73b0\u5bf9\u6570\u636e\u5e93\u7b49\u8d44\u6e90\u7684\u8c03\u7528\n\u89c2\u70b92\uff1aCRUD\u5e94\u8be5\u653e\u5728Model\u5c42\uff1a\n\n\nModel \u5c42\u63d0\u4f9b\u6570\u636e\u6301\u4e45\u5316\uff08\u901a\u5e38\u662f\u5bf9\u6570\u636e\u5e93\u7684\u64cd\u4f5c\uff09\u65b9\u6cd5\nController \u63a5\u53d7\u7528\u6237\u63d0\u4ea4\u7684http\u8bf7\u6c42\uff0c\u5f53\u4ea7\u751f\u6570\u636e\u53d8\u5316\u65f6\u5019\uff0c\u8c03\u7528Model\u5c42\u7684\u65b9\u6cd5\nModel \u5c42\u5c06\u201c\u5b9e\u4f53\u7684\u72b6\u6001\u201d\u901a\u8fc7\u6570\u636e\u5e93\u7684\u6301\u4e45\u5316\u6765\u8868\u73b0\n\u5176\u5b9e\uff0c\u8fd9\u4e24\u79cd\u8bf4\u6cd5\u90fd\u662f\u5bf9\u7684\u3002\u6570\u636e\u5e93\u7cfb\u7edf\u548cWeb-Server\u5176\u5b9e\u662f\u4e24\u4e2a\u72ec\u7acb\u7cfb\u7edf\uff0c\u8fd9\u70b9\u51b3\u5b9a\u4e86\u6570\u636e\u5e93\u7cfb\u7edf\u7684\u6570\u636e\u6301\u4e45\u5316\u5b9e\u73b0\u5bf9\u4e8eWeb-Server\u5e94\u8be5\u662f\u900f\u660e\u7684\u3002\n\n\n\u5bf9\u4e8e\u4e0d\u540c\u7684\u5e94\u7528\u6709\u4e0d\u540c\u7684\u89e3\u51b3\u65b9\u6cd5\uff0c\u4f46\u662f\u901a\u5e38\u6765\u8bf4\uff0c\u5927\u5bb6\u4e3a\u4e86\u89e3\u51b3Controller\u8fc7\u4e8e\u81c3\u80bf\u7684\u95ee\u9898\uff0c\u8fd8\u662f\u4f1a\u5c06\u6570\u636e\u7684CRUD\u653e\u5728model\u5c42\uff0c\u901a\u8fc7Controller\u8c03\u7528Model\u7684\u65b9\u6cd5\u5b9e\u73b0CRUD\u3002\n\n\n\u4e0b\u9762\u770b\u4e00\u4e2aPHP CI\u6846\u67b6\u4e0b\u7684\u8389\u5b50\uff1a\n\n\nModel\nclass MEntity extends Mx_Model {\n\n    function insert_entry($data) {\n        \n\n        database operations\n    }\n}\nController\nclass test extends Mx_Controller {\n\n    public function insert_entry() {\n        $this-\nload-\nmodel('some_model');\n\n\n    $data[\nfoo\n] = $_POST[\nfoo\n];\n    $data[\nbar\n] = $_POST[\nbar\n];\n\n    $this-\nsome_model-\ninsert_entry($data);\n\n    $this-\nload-\nview(\nsome_view\n); // Tell the user the data was inserted\n}\n\n\n\n\n}\n\u5176\u4e2dController\u662f\u8bf7\u6c42\u7684\u5165\u53e3\uff0cCI\u6846\u67b6\u4e2d\uff0c\u8bf7\u6c42\u7684URL\u5bf9\u5e94\u4e3a\uff1a\n\n\nPOST: /index.php/test/insert_entry\n\n\u4f8b\u5b50\u4e2d\u7684Model\u5305\u542b\u4e86\u5bf9\u6570\u636e\u5e93\u7684\u64cd\u4f5c\uff0c\u800c\u5728Controller\u4e2d\u5219\u5bf9\u5e94\u5730\u53ef\u4ee5\u8c03\u7528model\u4e2d\u7684\u4ee3\u7801\uff0c\u5c42\u6b21\u5206\u660e\uff0c\u903b\u8f91\u6e05\u6670\u3002\n\n\nModel\u4ee3\u8868\u4e86\u4f60\u7684\u6570\u636e\u7ed3\u6784\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u60a8\u7684Model\u7c7b\u5c06\u5305\u542b\u5e2e\u52a9\u60a8\u68c0\u7d22\u3001\u63d2\u5165\u548c\u66f4\u65b0\u6570\u636e\u5e93\u4e2d\u7684\u4fe1\u606f\u7684\u51fd\u6570\u3002 \n\u89c6\u56fe\u662f\u8981\u88ab\u8868\u793a\u7ed9\u7528\u6237\u7684\u4fe1\u606f\u3002\u4e00\u4e2a\u89c6\u56fe\u901a\u5e38\u662f\u4e00\u4e2a\u7f51\u9875\uff0c\u4f46\u5728CodeIgniter\uff08CI\u6846\u67b6\uff09\uff0c\u89c6\u56fe\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u9875\u9762\u7247\u6bb5\u5982\u9875\u7709\u6216\u9875\u811a\u3002\u5b83\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u7f51\u9875\uff0c\u6216\u4efb\u4f55\u5176\u4ed6\u7c7b\u578b\u7684\u201chtml\u5757\u201d\u3002 \u8be5\u63a7\u5236\u5668\u4f5c\u4e3a\u4e2d\u4ecb\u4e4b\u95f4\u7684\u6a21\u578b\uff0c\u89c6\u56fe\uff0c\u548c\u9700\u8981\u5904\u7406\u7684HTTP\u8bf7\u6c42\u5e76\u751f\u6210\u4e00\u4e2a\u7f51\u9875\u7684\u5176\u4ed6\u8d44\u6e90\u3002\n\n\n\u63a5\u4e0b\u6765\u518d\u770b\u4e00\u4e2aexpress+mongodb\u7684\u4f8b\u5b50\uff1a - Model (user \u7528\u6237\u5b9e\u4f53)\n\n\nrequire! ['mongoose']\n\nObjectId = mongoose.Schema.Types.ObjectId\n\n\nUserSchema = new mongoose.Schema {\n\n  authenticated: Number                                 #\u9a8c\u8bc1\u72b6\u6001, 1\u8868\u793a\u5df2\u9a8c\u8bc1\n  auth_code: String                                     #\u9a8c\u8bc1\u7801\n  email: String,                                        #\u90ae\u7bb1\n  password: String,                                     #\u5bc6\u7801\n  username: String,                                     #\u7528\u6237\u540d\n  role: Number,                                         #\u89d2\u8272\uff0c0\u4e3a\u666e\u901a\u7528\u6237\uff0c1\u4e3a\u7ba1\u7406\u5458\n  gender: Number,                                       #\u6027\u522b\uff0c0\u6c49\u5b50\uff0c1\u59b9\u5b50\uff0c2\u4fdd\u5bc6\n  avatar: String,                                       #\u5934\u50cf\n  real_name: String,                                    #\u771f\u5b9e\u59d3\u540d\n  phone_num: String,                                    #\u8054\u7cfb\u65b9\u5f0f\n  qq: String,                                           #QQ\u53f7\u7801\n  weixin: String,                                       #\u5fae\u4fe1\u53f7\n  host_acts: [{type: ObjectId, ref:'Activity'}],        #\u5df2\u53d1\u5e03\u7684\u6d3b\u52a8\n  following_acts: [{type: ObjectId, ref: 'Activity'}],  #\u5df2\u5173\u6ce8\u7684\u6d3b\u52a8\n  joining_acts: [{type: ObjectId, ref: 'Activity'}],    #\u5df2\u62a5\u540d\u7684\u6d3b\u52a8\n  tags: [{type: ObjectId, ref: 'Tag'}],                 #\u8ba2\u9605\u7684tag\n  meta: {\n    createAt: {\n      type: Date,\n      default: Date.now!\n    },\n    updateAt: {\n      type: Date,\n      default: Date.now!\n    }\n  }\n}\n\n\nUserSchema.pre 'save',(next)!-\n\n  if @.isNew \n    @.meta.createAt = @.meta.updateAt = Date.now!\n  else\n    @.meta.updateAt = Date.now!\n  next!\n\n\nUserSchema.statics = {\n\n  fetch: (cb)-\n\n    @ .find {} .sort 'meta.updateAt' .exec cb\n  findById: (id, cb)-\n\n    @ .findOne {_id: id} .exec cb\n}\n\n\nmodule.exports = UserSchema\n\nController (signup)\nrequire! {\n\n  '../../passport'\n  User: '../../models/user'\n  Tag: '../../models/tag'\n  '../../authMail'\n  multer\n  '../../imageCropper'\n  path\n  async\n  mongoose\n}\n\n\nDEFAULT_AVATAR = 'images/default_avatar.png'\n\n\nusernameExists = (username, cb)!-\n\n  User.find username: username, (err, docs)!-\n\n    if err\n      cb err\n    else\n      cb null, docs.length \n 0\n\n\nemailExists = (email, cb)!-\n\n  User.find email: email, (err, docs)!-\n\n    if err\n      cb err\n    else\n      cb null, docs.length \n 0\n\n\ncreateUser = (data, cb)!-\n\n  data.password = passport.hash data.password\n  data.auth_code = Math.random!toString!\n  data.authenticated = 0\n  data.role = 0\n  data.tags = data.tags.split(',')\n  data.gender = parseInt(data.gender)\n  data.avatar = DEFAULT_AVATAR\n  User.create data, (err)!-\n cb err, data.auth_code\n\n\nmodule.exports = (req, res)!-\n\n  # x inputs from body\n  username = req.body.username\n  password = req.body.password\n  email = req.body.email\n  gender = req.body.gender\n  tags = req.body.tags\n  # signup\n  # check if username exists\n  usernameExists username, (err, exists)!-\n\n    if err\n      console.log err\n      res.status 500 .end!\n    else if exists\n      res.end 'username exists'\n    else\n      emailExists email, (err, exists)!-\n\n        if err\n          console.log err\n          res.status 500 .end!\n        else if exists\n          res.end 'email exists'\n        else\n          createUser {\n            username: username\n            password: password\n            email: email\n            gender: gender\n            tags: tags\n          }, (err, authCode)!-\n\n            if err\n              console.log err\n              res.status 500 .end!\n            else\n              authMail.send email, authCode\n              passport.signin res, username, password, (err)!-\n\n                if err\n                  console.log err\n                  res.status 500 .end!\n                else\n                  res.end 'ok'\nMongodb + express + nodejs \u5728server-side\uff0c\u662f\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u914d\u5408\u3002\u4e0a\u8ff0\u4f7f\u7528\u7684MVC\u6846\u67b6\u79f0\u4e3a\u201cexpress-mongoose-mvc\u201d\u3002\n\n\nnode\u4e2d\u7684mongodb \u539f\u751f\u652f\u6301schema\uff0c\u53ea\u8981\u8981\u5728\u4ee3\u7801\u4e2d\u5b9a\u4e49\u597dschema\u7ed3\u6784\uff0c\u8fd0\u884c\u8fc7\u7a0b\u4e4b\u4e2d\u81ea\u52a8\u751f\u6210\u6570\u636e\u6301\u4e45\u5316\u3002\u8fd9\u79cd\u6280\u672f\u53eb\u505aODM\uff08Object Document Mapper\uff0c \u5bf9\u8c61\u6587\u6863\u6620\u5c04\uff09\uff0c\u7c7b\u4f3c\u6570\u636e\u5173\u7cfb\u6620\u5c04\u3002\u7531\u4e8eNodejs\u7684\u6570\u636e\u7ed3\u6784\u548cmongodb\u7684\u6570\u636e\u7ed3\u6784\u51e0\u4e4e\u662f\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u91c7\u7528\u8fd9\u4e2a\u6280\u672f\u7684\u878d\u5408\u6027\u975e\u5e38\u5730\u597d\u3002\n\n\n\u540c\u6837\u5730\uff0c\u5bf9\u4e8enosql\u6570\u636e\u5e93\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528MVC\u6846\u67b6\u8fdb\u884c\u6211\u4eec\u4ee3\u7801\u7684\u7ec4\u7ec7\u3002\n\n\n\u603b\u7ed3Web-Server-Side\u7684MVC\u67b6\u6784\nWeb-Server-Side\u662f\u57fa\u4e8e\u65e0\u8fde\u63a5\u7684HTTP\u534f\u8bae\uff0cserver\u8d1f\u8d23\u5904\u7406\u6bcf\u4e2ahttp\u7684\u8bf7\u6c42\uff0c\u6700\u540e\u5199\u4f1a\u54cd\u5e94\u7ed9\u5ba2\u6237\u7aef\u3002\n\n\nWeb-Server-Side\u7684MVC\u7ed3\u6784\u5206\u4e3a\u4f20\u7edf\u9875\u9762\u4f20\u8f93\u548c\u73b0\u5728\u5f88\u591a\u5e94\u7528\u7684\u6570\u636e\u4f20\u8f93\u3002\n\n\n\u5bf9\u4e8e\u9875\u9762\u4f20\u8f93\u5f62\u5f0f\u6574\u4e2a\u7f51\u7ad9\u7684\u529f\u80fd\uff0c\u524d\u7aef\u548c\u540e\u53f0\u90fd\u7531web-server\u6765\u5b9e\u73b0\uff0c\u7528\u6237\u8bf7\u6c42\u7684\u662fhtml\u9875\u9762\u3002\u5728\u8fd9\u91cc\uff0cView\u662fhtml\u9875\u9762\u3002\n\n\n\u5bf9\u4e8e\u73b0\u5728\u5f88\u591a\u5e94\u7528\u4f20\u8f93json\u6216\u8005xml\u6570\u636e\uff0c\u5176\u5b9e\u662f\u7701\u7565\u4e86View\u5c42\u3002\u5728MVC\u7684\u521d\u59cb\u8bbe\u8ba1\u4e2d\uff0c\u662f\u4e3a\u4e86\u89e3\u51b3\u201c\u56fe\u5f62\u5316\u201d\u7528\u6237\u4ea4\u4e92\u7cfb\u7edf\u7684\u8bbe\u8ba1\uff0c\u6240\u4ee5\uff0c\u4ece\u4e25\u683c\u7684\u610f\u4e49\u4e0a\u6765\u8bf4\uff0c\u8fd9\u6837\u7684web-server\u5e76\u4e0d\u662fMVC\u67b6\u6784\u3002\u4f46\u662f\u6211\u4eec\u4f9d\u7136\u53ef\u4ee5\u501f\u9274MVC\u7684\u601d\u60f3\u4e3a\u6211\u4eec\u6e05\u6670\u7ec4\u7ec7\u4ee3\u7801\u3002\n\n\n\u5728Web-Server\u4e2dController\u5b9e\u8d28\u4e0a\u5c31\u662f\u8def\u7531\u5904\u7406\uff0c\u53ef\u4ee5\u5206\u4e3a\u8def\u7531\u8868\u548c\u5177\u4f53\u7684\u8def\u7531\u529f\u80fd\u3002Model\u662f\u5b9e\u4f53\uff0c\u662f\u8fd9\u4e2a\u7cfb\u7edf\u5b9a\u4e49\u7684\u5173\u952e\u62bd\u8c61\u7c7b\uff0c\u4e00\u822c\u5730\uff0c\u5e94\u8be5\u63d0\u4f9b\u6570\u636e\u5e93\u7684CRUD\u65b9\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u5c1d\u8bd5\u4f7f\u7528ORM\u6280\u672f\u4e0e\u6570\u636e\u5e93\u8868\u7ed3\u6784\u5bf9\u63a5\u3002\n\n\nClient-Side\u7684MVC\nAs client technologies have matured, frameworks such as AngularJS, EmberJS, JavaScriptMVC and Backbone have been created that allow the MVC components to execute partly on the client (also see Ajax).\n\n\n\u7ef4\u57fa\u767e\u79d1\u7684\u7b2c\u4e8c\u6bb5\u8bb2\u8ff0\u4e86\uff0c\u73b0\u4ee3web\u6280\u672f\u7684\u8fdb\u6b65\uff0c\u533a\u522b\u4e8e\u4f20\u7edf\u7684\u4f9d\u8d56web\u670d\u52a1\u7aef\u4f20\u8f93\u5927\u6bb5\u5927\u6bb5\u7684\u6570\u636e\uff0cweb\u5f00\u53d1\u8005\u610f\u8bc6\u5230\uff0c\u5728\u524d\u7aef\u7684js\u4e2d\u53ef\u4ee5\u505a\u5f88\u591a\u4e8b\u60c5\u3002\n\n\nhtml \u4ee3\u7801\u5e76\u4e0d\u662f\u6bcf\u6b21\u90fd\u9700\u8981\u4f20\u8f93\u6574\u4e2a\u6587\u6863\uff1a\u5b8c\u5168\u53ef\u4ee5\u53ea\u4f20\u8f93\u90e8\u5206\uff0c\u6216\u8005\u53ea\u4f20\u8f93\u6570\u636e\uff0c\u7136\u540e\u901a\u8fc7js\u4ee3\u7801\u586b\u5145\u5230\u5bf9\u5e94\u7684\u4f4d\u7f6e\u5373\u53ef\n\u5728\u67d0\u4e9b\u9700\u6c42\u4e2d\uff0c\u7528\u6237\u5e0c\u671b\u4e0d\u8981\u6bcf\u6b21\u64cd\u4f5c\u90fd\u5c06\u6574\u4e2a\u9875\u9762\u5237\u65b0\uff0c\u6bd4\u5982\u9700\u6c42\u662f\u5355\u9875\u9762\u5e94\u7528\uff0cSPA\uff08single page application\uff09\n\u751a\u81f3\uff0c\u524d\u7aef\u53ef\u4ee5\u4e0d\u9700\u8981\u540e\u53f0\u670d\u52a1\u5668\u4f20\u8f93\u4efb\u4f55\u7684html\u9875\u9762\uff0c\u524d\u7aef\u5b8c\u5168\u53ef\u4ee5\u81ea\u884c\u6839\u636e\u670d\u52a1\u7aef\u7684\u6570\u636e\u6e32\u67d3\u51fahtml\u9875\u9762\n\u67d0\u5b89\u5353\u7aef\u5e94\u7528\uff0c\u6216\u8005IOS\u7aef\u5e94\u7528\u9700\u8981\u8c03\u7528http\u63a5\u53e3\uff0c\u8fd9\u65f6\u5019\u6211\u4eec\u4e0d\u80fd\u591f\u8fd4\u56dehtml\u9875\u9762\uff08\u4e8b\u5b9e\u4e0a\u53ef\u4ee5\u7528webview\u8fd4\u56de\uff0c\u4f46\u662f\u7406\u89e3\u5e94\u7528\u5f00\u53d1\u5c31\u77e5\u9053\u8fd9\u6837\u505a\u5f88\u4e0d\u597d\uff09\n\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u9700\u6c42\uff0c\u5c31\u51fa\u73b0\u4e86Ajax\u8bf7\u6c42\uff0c\u8bf7\u6c42\u670d\u52a1\u5668\u7684\u65f6\u5019\uff0c\u4e0d\u9700\u8981\u5237\u65b0\u6574\u4e2a\u9875\u9762\uff0c\u800c\u662f\u59d4\u6258js\u4ee3\u7801\u53bb\u8bf7\u6c42\uff0c\u7136\u540e\u8fd4\u56de\u4e4b\u540e\uff0cjs\u4ee3\u7801\u901a\u8fc7\u64cd\u4f5c\u9875\u9762\u7684dom\u5143\u7d20\u52a8\u6001\u5730\u5c06\u540e\u7aef\u6570\u636e\u62ff\u56de\u5230\u524d\u7aef\u663e\u793a\u3002\n\n\n\u7136\u800c\u5f53\u9875\u9762\u7684\u903b\u8f91\u590d\u6742\u8d77\u6765\u7684\u65f6\u5019\uff0c\u4f60\u4f1a\u53d1\u73b0\u4ee3\u7801\u7ec4\u7ec7\u6beb\u65e0\u7ae0\u6cd5\uff0c\u5bf9\u4e8e\u6240\u6709\u4e8b\u4ef6\uff0c\u51e0\u4e4e\u90fd\u662f\u4f7f\u7528\u4e8b\u4ef6-\n\u5143\u7d20\u64cd\u4f5c-\n\u8bf7\u6c42-\n\u8fd4\u56de\u6570\u636e-\n\u5143\u7d20\u64cd\u4f5c\u3002\n\n\n\u4e4b\u524d\u5199\u7684YOJ\u4e2d\u67e5\u8be2\u63d0\u4ea4\u4ee3\u7801\u8bb0\u5f55\uff0c\u67e5\u8be2\u8bc4\u6d4b\u62a5\u544a\u7684\u524d\u7aef\u4ee3\u7801\u3002\n\n\n\u9700\u6c42\u5c31\u662f\uff0c\u70b9\u51fb\u63d0\u4ea4\u8bb0\u5f55\u7684\u6309\u94ae\u4e4b\u540e\uff0c\u5f39\u51fa\u6a21\u6001\u6846\uff0c\u6a21\u6001\u6846\u4e2d\u663e\u793a\u4ee3\u7801\u7684\u5177\u4f53\u5185\u5bb9\u3002 \u70b9\u51fb\u63d0\u4ea4\u8bc4\u6d4b\u62a5\u544a\u6309\u94ae\uff0c\u5f39\u51fa\u6a21\u6001\u6846\uff0c\u6a21\u6001\u6846\u4e2d\u663e\u793a\u4ee3\u7801\u7684\u5177\u4f53\u5185\u5bb9\u3002\n\n\n$(document).ready( function () {\n    $(\"body\").on(\"click\", \".source\", function(event) {\n        target = $(event.target);\n        runid = target.data(\"runid\");\n        uid = target.data(\"uid\");\n        language = target.data(\"language\");\n            $.get(\n            \"s-getcode\", \n            {\n                language : language,\n                runid : runid,\n                uid : uid\n            },\n            function(data,status) {\n                $(\"#codecontent\").text(data)\n                $(\"#myModal\").modal().show();\n            });\n    });\n\n\n$(\nbody\n).on(\nclick\n, \n.report\n, function(event) {\n    target = $(event.target);\n    runid = target.data(\nrunid\n);\n        $.get(\n        \n\\s-getreport\n, \n        {\n            runid : runid\n        },\n        function(data,status) {\n            $(\n#codecontent1\n).text(data)\n            $(\n#myModal1\n).modal().show();\n        });\n});\n\n\n\n\n});\n\u5728\u5904\u7406\u7b80\u5355\u903b\u8f91\u65f6\u5019\u65f6\u5019\uff0c\u6211\u4eec\u8fd9\u6837\u505a\u5b8c\u5168\u6ca1\u6709\u95ee\u9898\u3002\u4f46\u662f\u5f53\u4e1a\u52a1\u9700\u6c42\u591a\u8d77\u6765\u7684\u65f6\u5019\uff0c\u8fd9\u6837\u505a\u4ee3\u7801\u5c31\u4f1a\u663e\u5f97\u6742\u4e71\u65e0\u7ae0\uff0c\u96be\u4ee5\u7ef4\u62a4\u3002\n\n\n\u73b0\u5728\u5728\u5f15\u5165\u524d\u7aefMVC\u6982\u5ff5\u65f6\u5019\uff0c\u6211\u4eec\u5f15\u7528\u4e00\u79cd\u9762\u5411\u5bf9\u8c61\u7684\u8bbe\u8ba1\u6a21\u5f0f\uff1a\u89c2\u5bdf\u8005\u6a21\u5f0f\n\n\n\u89c2\u5bdf\u8005\u6a21\u5f0f\u662f\u5f88\u597d\u5730\u5b9e\u73b0Web\u524d\u7aefMVC\u7684\u4e00\u79cd\u8bbe\u8ba1\u6a21\u5f0f\uff08pattern\uff09\u3002\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u89c2\u5bdf\u8005\u8ba2\u9605\u4e00\u4e9b\u4e8b\u4ef6\uff0c\u4e5f\u5c31\u662f\u201c\u66b4\u9732\u201d\u81ea\u5df1\u4e8b\u4ef6\u76d1\u542c\u7684\u63a5\u53e3\uff0c\u5f53\u5176\u4ed6\u73af\u5883\u4e0b\u7684\u5bf9\u8c61\u72b6\u6001\u6539\u53d8\u65f6\u53ef\u4ee5\u8c03\u7528notify\u65b9\u6cd5\u6765\u901a\u77e5\u89c2\u5bdf\u8005\u72b6\u6001\u6539\u53d8\uff0c\u89c2\u5bdf\u8005\u968f\u5373\u6539\u53d8\u81ea\u5df1\u7684\u72b6\u6001\u9002\u5e94\u8fd9\u4e2a\u6539\u53d8\u3002\n\n\n\u5728\u524d\u7aef\u4e2d\uff0c\u6211\u4eec\u7684MVC\u6846\u67b6\u662f\u8fd9\u6837\u7684\uff1a\n\n\n\u4e00\u4e2a\u4e3b\u4e8b\u4ef6\u6d41\u7a0b\uff1a\n\n\n\u7528\u6237\u64cd\u4f5cview\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u88ab\u53d1\u9001\u5230Controller\u8fdb\u884c\u5904\u7406\nController \u6839\u636e\u4e1a\u52a1\u903b\u8f91\uff0c\u5bf9Model\uff08\u6570\u636e\u5b9e\u4f53\uff09\u8fdb\u884c\u4fee\u6539\uff0c\u8fd9\u65f6\u5019Controller\u6709\u53ef\u80fd\u4f1a\u4fee\u6539View\u7684\u5185\u5bb9\nModel\u6839\u636eController\u5bf9\u81ea\u5df1\u7684\u8c03\u7528\u4fee\u6539\u81ea\u5df1\u7684\u72b6\u6001\uff0c\u8fd9\u4e2a\u72b6\u6001\u4fee\u6539\u4e4b\u540e\uff0cModel\u901a\u77e5View\u505a\u51fa\u76f8\u5e94\u7684\u53d8\u5316\n\u6211\u4eec\u6765\u770b\u4e00\u4e2aJquery\u7684\u8389\u5b50\uff1a\n\n\n\u8fd9\u91cc\u6709\u4e00\u6bb5html\n\n\n\n  \n\n  \n\n  \n\n\n\n\n  \n    \n\n        \n\n    \n\n    \n\n        \n+\n\n        \n-\n\n    \n\n\n\n\n\n\u5927\u6982\u7684\u529f\u80fd\u5c31\u662f\u5b9e\u73b0\u8fd9\u4e2a\u5217\u8868\u7684\u589e\u3001\u5220\u3002\n\n\nfunction Event(sender) {\n\n    this._sender = sender;\n    this._listeners = [];\n}\n\n\nEvent.prototype = {\n\n    attach: function (listener) {\n        this._listeners.push(listener);\n    },\n    notify: function (args) {\n        var index;\n\n\n    for (index = 0; index \n this._listeners.length; index += 1) {\n        this._listeners[index](this._sender, args);\n    }\n}\n\n\n\n\n};\n\n\n/**\n * The Model. Model stores items and notifies\n * observers about changes.\n */\nfunction ListModel(items) {\n\n    this._items = items;\n    this._selectedIndex = -1;\n\n\nthis.itemAdded = new Event(this);\nthis.itemRemoved = new Event(this);\nthis.selectedIndexChanged = new Event(this);\n\n\n\n\n}\n\n\nListModel.prototype = {\n\n    getItems: function () {\n        return [].concat(this._items);\n    },\n\n\naddItem: function (item) {\n    this._items.push(item);\n    this.itemAdded.notify({\n        item: item\n    });\n},\n\nremoveItemAt: function (index) {\n    var item;\n\n    item = this._items[index];\n    this._items.splice(index, 1);\n    this.itemRemoved.notify({\n        item: item\n    });\n    if (index === this._selectedIndex) {\n        this.setSelectedIndex(-1);\n    }\n},\n\ngetSelectedIndex: function () {\n    return this._selectedIndex;\n},\n\nsetSelectedIndex: function (index) {\n    var previousIndex;\n\n    previousIndex = this._selectedIndex;\n    this._selectedIndex = index;\n    this.selectedIndexChanged.notify({\n        previous: previousIndex\n    });\n}\n\n\n\n\n};\n\n\n/**\n * The View. View presents the model and provides\n * the UI events. The controller is attached to these\n * events to handle the user interraction.\n */\nfunction ListView(model, elements) {\n\n    this._model = model;\n    this._elements = elements;\n\n\nthis.listModified = new Event(this);\nthis.addButtonClicked = new Event(this);\nthis.delButtonClicked = new Event(this);\n\nvar _this = this;\n\n// attach model listeners\nthis._model.itemAdded.attach(function () {\n    _this.rebuildList();\n});\nthis._model.itemRemoved.attach(function () {\n    _this.rebuildList();\n});\n\n// attach listeners to HTML controls\nthis._elements.list.change(function (e) {\n    _this.listModified.notify({\n        index: e.target.selectedIndex\n    });\n});\nthis._elements.addButton.click(function () {\n    _this.addButtonClicked.notify();\n});\nthis._elements.delButton.click(function () {\n    _this.delButtonClicked.notify();\n});\n\n\n\n\n}\n\n\nListView.prototype = {\n\n    show: function () {\n        this.rebuildList();\n    },\n\n\nrebuildList: function () {\n    var list, items, key;\n\n    list = this._elements.list;\n    list.html(\n);\n\n    items = this._model.getItems();\n    for (key in items) {\n        if (items.hasOwnProperty(key)) {\n            list.append($(\noption\n + items[key] + \n/option\n));\n        }\n    }\n    this._model.setSelectedIndex(-1);\n}\n\n\n\n\n};\n\n\n/**\n * The Controller. Controller responds to user actions and\n * invokes changes on the model.\n */\nfunction ListController(model, view) {\n\n    this._model = model;\n    this._view = view;\n\n\nvar _this = this;\n\nthis._view.listModified.attach(function (sender, args) {\n    _this.updateSelected(args.index);\n});\n\nthis._view.addButtonClicked.attach(function () {\n    _this.addItem();\n});\n\nthis._view.delButtonClicked.attach(function () {\n    _this.delItem();\n});\n\n\n\n\n}\n\n\nListController.prototype = {\n\n    addItem: function () {\n        var item = window.prompt('Add item:', '');\n        if (item) {\n            this._model.addItem(item);\n        }\n    },\n\n\ndelItem: function () {\n    var index;\n\n    index = this._model.getSelectedIndex();\n    if (index !== -1) {\n        this._model.removeItemAt(this._model.getSelectedIndex());\n    }\n},\n\nupdateSelected: function (index) {\n    this._model.setSelectedIndex(index);\n}\n\n\n\n\n};\n\n\n$(function () {\n    var model = new ListModel(['PHP', 'NodeJs']),\n        view = new ListView(model, {\n            'list': $('#list'),\n                'addButton': $('#plusBtn'),\n                'delButton': $('#minusBtn')\n        }),\n        controller = new ListController(model, view);\n\n\nview.show();\n\n\n\n\n});\n\u5f53\u7136\u53ef\u4ee5\u628a\u8fd9\u90e8\u5206\u6539\u6210\u5f02\u6b65\u7684\uff1a\n\n\nEvent.prototype = {\n\n    attach: function (listener) {\n        this._listeners.push(listener);\n    },\n    notify: function (args) {\n        var index;\n        for (index = 0; index \n this._listeners.length; index += 1) {\n          // async\n          (function(listener, sender, args) {\n            setTimeout(function() {\n              listener(sender, args);\n            }, 0);\n          })(this._listeners[index], this._sender, args);\n          // this._listeners\nindex\n;\n        }\n    }\n};\n\u8fd9\u5c31\u662f\u524d\u7aefMVC\u7684\u4e3b\u8981\u601d\u60f3\u3002Model\u548cView\u4ece\u67d0\u79cd\u610f\u4e49\u4e0a\u662f\u5b9e\u65f6\u540c\u6b65\u7684\u3002\n\n\n\u8dea\u4e0b\u5949\u4e0a\u83ab\u51a0\u948a\u5927\u795e\u7684\u524d\u7aefMVC\u4ee3\u7801\u4f8b\u5b50\uff1alink\n\n\neventbus.ls\u8fd9\u4e2a\u662f\u89c2\u5bdf\u8005\u6a21\u5f0f\u5b9e\u73b0\u7684\u5173\u952e\n\n\n\u5176\u4e2d\u7684\u201c\u4e8b\u4ef6\u603b\u7ebf\u201d\u548c\u89c2\u5bdf\u8005\u6a21\u5f0f\u7684subject\u662f\u4e00\u81f4\u7684\n\n\n\u66f4\u591a\u4e0eMVC\u76f8\u5173\nC++/Java \u56fe\u5f62\u754c\u9762\u5e94\u7528\nweb\u524d\u7aef\u524d\u7aef\u7684\u5f88\u591a\u6846\u67b6\n\u603b\u7ed3\nMVC\u662f\u4e00\u79cd\u5f00\u53d1\u601d\u60f3\uff0c\u5e94\u8be5\u7528\u66f4\u52a0\u62bd\u8c61\u7684\u5c42\u6b21\u53bb\u7406\u89e3\u3002\u5176\u5b9e\u5728\u4efb\u4f55\u9879\u76ee\u4e2d\uff0c\u4e0d\u7528MVC\u4e5f\u4e0d\u4f1a\u6000\u5b55\u3002\u8bbe\u8ba1\u6a21\u5f0f\u53ea\u662f\u4e00\u79cd\u601d\u7ef4\u65b9\u6cd5\u4f7f\u5f97\u4f60\u5728\u7ec4\u7ec7\u5927\u578b\u4ee3\u7801\u7684\u65f6\u5019\u4e0d\u81f3\u4e8e\u624b\u5fd9\u811a\u4e71\u3002\n\n\nMVC\u5728\u5b58\u5728\u7740\u4e0d\u5c11\u89c2\u70b9\u7684\u4e89\u8bba\uff0c\u5728\u8fd9\u4e9b\u4e89\u8bba\u7684\u80cc\u540e\u7684\u5b9e\u8d28\u5176\u5b9e\u662f\u5e94\u7528\u73af\u5883\u7684\u4e0d\u540c\uff0c\u6216\u8005\u662f\u5e94\u7528\u65b9\u5f0f\u4e0d\u4e00\u6837\u3002\n\n\n\u7efc\u5408\u6765\u8bb2\uff0c\u53ea\u8981\u662f\u5b9e\u7528\u4e8e\u81ea\u5df1\u7684\u9879\u76ee\u7684\u8bbe\u8ba1\u6a21\u5f0f\u5c31\u662f\u597d\u7684\u3002\n\n\n\u4e3b\u8981\u53c2\u8003\u8d44\u6599\nMVC Wikipedia", 
            "title": "MVC\u89e3\u8bfb"
        }, 
        {
            "location": "/posts/architecture/design-pattern/MVC\u89e3\u8bfb/#model-view-controller", 
            "text": "", 
            "title": "Model-View-Controller"
        }, 
        {
            "location": "/posts/architecture/design-pattern/MVC\u89e3\u8bfb/#_1", 
            "text": "MVC\u662f\u4e00\u79cd\u201c\u7528\u6237\u4ea4\u4e92\u201d\u8f6f\u4ef6\u7684\u6784\u67b6\u65b9\u6cd5\u3002\u5b83\u628a\u4e00\u4e2a\u5e94\u7528\u8f6f\u4ef6\u5206\u4e3a\u4e09\u4e2a\u4e92\u76f8\u5173\u8054\u7684\u90e8\u5206\uff0c\u5206\u522b\u662fModel\u3001View\u548cController\u3002\u5982\u4eca\uff0c\u5728Web\u5e94\u7528\u5f00\u53d1\u7684\u65f6\u5019\u5f88\u7ecf\u5e38\u88ab\u4f7f\u7528\u3002  \u7136\u800c\uff0c\u4e0d\u5c11\u4eba\u5bf9\u4e8e\u8fd9\u79cd\u8f6f\u4ef6\u8bbe\u8ba1\u7684\u65b9\u6cd5\u6709\u8bef\u89e3\u3002\u73b0\u5728\u6211\u4ee5\u4e2a\u4eba\u7684\u7406\u89e3\u65b9\u5f0f\u6765\u8c08\u4e00\u8c08\u8fd9\u79cd\u8bbe\u8ba1\u6a21\u5f0f\u3002  \u8001\u5e08\u8bb2\u7684MVC\n\u7cfb\u7edf\u5206\u6790\u4e0e\u8bbe\u8ba1\u4e0a\u8bfe\u7684\u65f6\u5019\uff0c\u8001\u5e08\u4f1a\u8bb2MVC\u7684\u8f6f\u4ef6\u8bbe\u8ba1\u6a21\u5f0f\u3002  \u8001\u5e08\u4f1a\u5728\u9ed1\u677f\u4e0a\u719f\u7ec3\u5730\u753b\u51fa\u8fb9\u754c\u7c7b\u3001\u63a7\u5236\u5668\u3001\u6570\u636e\u6a21\u578b\uff0c\u7136\u540e\u544a\u8bc9\u6211\u4eec\u4e0b\u9762\u8fd9\u4e2a\u56fe\u3002  \u8001\u5e08\u8bb2\u7684\u7cfb\u7edf\u6d41\u7a0b\uff1a  \u7528\u6237\u5728\u524d\u7aef\u64cd\u4f5cview\u89e6\u53d1\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u5047\u8bbe\u6309\u4e86\u4e00\u4e2abutton\nController\u5c06\u5904\u7406\u8fd9\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u5e76\u4e14\u4f1a\u4fee\u6539model\u5b9e\u4f53\u7684\u201c\u72b6\u6001\u201d\nModel\u7684\u4fee\u6539\u653e\u56de\u5230Controller\uff0c\u7136\u540eController\u4fee\u6539View\n\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff1a  View: \u8d1f\u8d23\u663e\u793a\u7528\u6237\u4ea4\u4e92\u7684\u754c\u9762\nController: \u5904\u7406\u7528\u6237\u5728\u754c\u9762\u4e2d\u89e6\u53d1\u7684\u4e8b\u4ef6\uff08\u6216\u8005\u662f\u5176\u4ed6\u4e8b\u4ef6\uff0c\u6bd4\u5982\u5b9a\u65f6\u5668\u89e6\u53d1\u7684\uff09\uff0c\u7136\u540e\u6839\u636e\u8fd9\u4e2a\u4e8b\u4ef6\u7684\u7c7b\u578b\u3001\u7528\u6237\u8f93\u5165\u7684\u53c2\u6570\u3001\u7528\u6237\u672c\u8eab\u7684\u4fe1\u606f\uff0c\u5bf9model\u6570\u636e\u5b9e\u4f53\u7684\u72b6\u6001\u8fdb\u884c\u4fee\u6539\uff0c\u6700\u540e\u518d\u64cd\u4f5cView\u8fdb\u884c\u4fee\u6539\u3002\nModel: \u6570\u636e\u5b9e\u4f53\uff0c\u4fdd\u5b58\u7740\u8fd9\u4e2a\u7cfb\u7edf\u91cc\u9762\u6240\u6709\u5173\u952e\u62bd\u8c61\u7684\u5b9e\u4f53\u5bf9\u8c61\u3002\uff08\u6240\u8c13\u7684\u201c\u5b9e\u4f53\u5bf9\u8c61\u201d\u5c31\u662f\u201c\u5b9e\u4f53\u7c7b\u662f\u7528\u4e8e\u5bf9\u5fc5\u987b\u5b58\u50a8\u7684\u4fe1\u606f\u548c\u76f8\u5173\u884c\u4e3a\u5efa\u6a21\u7684\u7c7b\u7684\u5b9e\u4f8b\u201d\uff09\n\u4e09\u4e2a\u90e8\u5206\u4e4b\u95f4\u65e2\u6709\u5173\u7cfb\uff0c\u53c8\u76f8\u5bf9\u72ec\u7acb\uff0c\u662f\u4e00\u79cd\u5f88\u597d\u8bbe\u8ba1\u6a21\u5f0f\u3002\u5404\u4e2a\u90e8\u5206\u5404\u53f8\u5176\u804c\uff0c\u914d\u5408\u5de5\u4f5c\uff0c\u6784\u5efa\u51fa\u4e00\u4e2a\u903b\u8f91\u6e05\u6670\u7684\u8f6f\u4ef6\u7cfb\u7edf\u3002  \u8001\u5e08\u4f1a\u8ddf\u4f60\u5f3a\u8c03\u4e00\u70b9\uff0cModel\u548cView\u4e4b\u95f4\u662f\u6ca1\u6709\u4e4b\u95f4\u5173\u8054\u7684\uff0c\u90a3\u6837\u753b\u56fe\u662f\u8981\u6263\u5206\u7684\u3002  \u5b9e\u9645\u4e0a\u8fd9\u79cd\u89c2\u70b9\u5e76\u4e0d\u662f\u5b8c\u5168\u6b63\u786e\u7684\u3002  Web \u5e94\u7528\u4e2d\u7684MVC\nAlthough originally developed for desktop computing, model\u2013view\u2013controller has been widely adopted as an architecture for World Wide Web applications in major programming languages. Several commercial and noncommercial web frameworks have been created that enforce the pattern. These software frameworks vary in their interpretations, mainly in the way that the MVC responsibilities are divided between the client and server.[14]  Early web MVC frameworks took a thin client approach that placed almost the entire model, view and controller logic on the server. This is still reflected in popular frameworks such as Ruby on Rails, Django, ASP.NET MVC and Express. In this approach, the client sends either hyperlink requests or form input to the controller and then receives a complete and updated web page (or other document) from the view; the model exists entirely on the server.[14] As client technologies have matured, frameworks such as AngularJS, EmberJS, JavaScriptMVC and Backbone have been created that allow the MVC components to execute partly on the client (also see Ajax).  From Wikipedia  \u7ef4\u57fa\u767e\u79d1\u8fd9\u6bb5\u8bdd\u8bb2\u7684\u6211\u5f88\u8ba4\u540c\uff0c\u5927\u6982\u7684\u610f\u601d\u662f\uff0c\u4f20\u7edf\u7684MVC\u8bbe\u8ba1\u6a21\u5f0f\u662f\u5bf9\u4e8e\u201c\u684c\u9762\u578b\u201d\u5e94\u7528\u7684\uff0c\u4f46\u662f\u968f\u65f6Web\u7684\u53d1\u5c55\uff0c\u5f88\u591aWeb\u5e94\u7528\u4f1a\u9009\u62e9\u4f7f\u7528MVC\u4f5c\u4e3a\u5176\u67b6\u6784\u3002  \u5728\u8ba8\u8bbaweb\u5e94\u7528\u7684MVC\u6846\u67b6\u7684\u65f6\u5019\uff0c\u5e94\u8be5\u5206\u4e3a\u201c\u670d\u52a1\u7aef\u201d\u548c\u201c\u5ba2\u6237\u7aef\u201d\u6765\u8ba8\u8bba\u3002  \u5bf9\u4e8e\u4f20\u7edf\u7684Web\u5e94\u7528\n\u8fd9\u79cdWeb\u5e94\u7528\u53ef\u4ee5\u8bf4\u53ea\u6709\u670d\u52a1\u7aef\uff0c\u6240\u8c13\u7684\u524d\u7aef\u90fd\u662f\u4e8b\u5148\u5199\u597d\u7684html\u9875\u9762\u3002\u6574\u4e2a\u8bf7\u6c42\u8fc7\u7a0b\u5c31\u662f\uff1a  \u7528\u6237\u5728\u6d4f\u89c8\u5668\u53d1\u8d77Http Get/Post \u8bf7\u6c42\n\u670d\u52a1\u7aef\u63a5\u53d7\u5230\u8bf7\u6c42\n\u670d\u52a1\u7aef\u6839\u636e\u7528\u6237\u8bf7\u6c42\u7684\u6570\u636e\uff0c\u201c\u8ba1\u7b97\u201d\u51fa\u8981\u8f93\u51fa\u7684html\u9875\u9762\n\u670d\u52a1\u7aef\u54cd\u5e94\u7528\u6237\u8bf7\u6c42\n\u9875\u9762\u6e32\u67d3\uff0c\u672c\u6b21\u8bf7\u6c42\u7ed3\u675f\n\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u6709\u592a\u591a\u77e5\u8bc6\u6d89\u53ca\uff0c\u6211\u4eec\u73b0\u5728\u8ba8\u8bba\u670d\u52a1\u7aef\u5904\u7406\u8bf7\u6c42\u7684\u8fc7\u7a0b\u3002  \u4f20\u7edf\u7684Web\u5e94\u7528\u5c31\u5728\u8fd9\u5c42\u670d\u52a1\u7aef\u4e0a\u505a\u4e86MVC\u7684\u67b6\u6784\u3002Ruby on Rails, Django, ASP.NET MVC and Express \u7eb7\u7eb7\u4e2d\u67aa\u3002  \u8fd9\u91cc\u62ff\u4e00\u4e2apython tornado\u7684\u9879\u76ee\u8389\u5b50\uff1a  .\n\u251c\u2500\u2500 doc   \u5b58\u653e\u9879\u76ee\u9700\u6c42\u3001\u5206\u5de5\u3001\u9879\u76ee\u6c47\u62a5\u7b49\u6587\u6863\n\u251c\u2500\u2500 db    \u5b58\u653e\u6570\u636e\u5e93\u8868\u7ed3\u6784\n\u2514\u2500\u2500 src   \u9879\u76ee\u7684\u4ee3\u7801\n   \u251c\u2500\u2500 handlers   controller\n   \u251c\u2500\u2500 model      model\n   \u251c\u2500\u2500 templates  view\n   \u251c\u2500\u2500 static     \u9759\u6001\u8d44\u6e90\n   \u251c\u2500\u2500 application.py  \u7cfb\u7edf\u5e94\u7528\u8bbe\u7f6e\n   \u251c\u2500\u2500 server.py   \u670d\u52a1\u5668\u542f\u52a8\u811a\u672c\n   \u2514\u2500\u2500 urls.py     \u8def\u7531\u89c4\u5219\n\u8fd9\u4e2a\u662f\u7cfb\u7edf\u5206\u6790\u4e0e\u8bbe\u8ba1\u7684\u4f5c\u4e1a\uff0c\u5927\u6982\u7684\u529f\u80fd\u5c31\u662f\u63d0\u4f9b\u7528\u6237\u8d2d\u7968\u7684\u529f\u80fd\uff0c\u975e\u5e38\u7b80\u5355\u7684\u529f\u80fd\u3002\u4f46\u662f\u9ebb\u96c0\u867d\u5c0f\uff0c\u4e94\u810f\u4ff1\u5168\u3002  online ticket system  MVC\u5404\u4e2a\u5c42\u6b21\u5728\u8fd9\u4e2a\u9879\u76ee\u7684\u5206\u5de5\uff1a  model : \u5b9e\u4f53\u5bf9\u8c61\uff0c\u5b58\u50a8\u4e86user\u3001ticket\u8fd9\u4e24\u4e2a\u4e1a\u52a1\u4e2d\u7684\u5173\u952e\u5b9e\u4f53\u7c7b\uff0c\u5e76\u4e14\u63d0\u4f9b\u4e86\u5bf9\u4e8emysql\u6570\u636e\u5e93\u7684CRUD\u529f\u80fd\nview : \u89c6\u56fe\uff0c\u5728\u8fd9\u4e2a\u9879\u76ee\u4e2d\u4f7f\u7528html+tornado\u7684\u6a21\u677f\u5f15\u64ce\u6784\u6210\uff0c\u4e3b\u8981\u8d1f\u8d23\u4f20\u7ed9\u6d4f\u89c8\u5668\u8981\u6e32\u67d3\u7684html\u9875\u9762\nhandler(Controller) : \u7cfb\u7edf\u7684\u4e3b\u8981\u4e1a\u52a1\u903b\u8f91\uff0c\u5bf9\u6bcf\u4e2a\u8def\u7531\u8fc7\u6765\u7684\u8bf7\u6c42\u8fdb\u884c\u76f8\u5e94\u7684\u64cd\u4f5c\uff0c\u540c\u65f6\u8fd4\u56de\u9875\u9762\u548c\u6570\u636e\u7ed9\u8bf7\u6c42\n\u5bf9\u5e94\u4e0b\u56fe\u7684\u64cd\u4f5c\uff1a   Model Ticket", 
            "title": "\u7b80\u4ecb"
        }, 
        {
            "location": "/posts/architecture/design-pattern/MVC\u89e3\u8bfb/#codingutf-8", 
            "text": "import database  class Ticket(database.DataBase): \n    def from_id(self, ticketId):\n        try:\n            ticket = self.db.get(sql);\n            self.id = ticket.id\n            self.train = ticket.train\n            self.departure = ticket.departure\n            self.edeparture = ticket.edeparture\n            self.destination = ticket.destination\n            self.edestination = ticket.edestination\n            self.departureTime = ticket.departureTime\n            self.arrivalTime = ticket.arrivalTime\n            self.price = ticket.price\n            self.statu = ticket.statu\n        except:\n            return\n    def buy_ticket(self, userId):\n        if self.statu == \"sold\":\n            return False\n        self.db.execute(\"update ticket set ticket.statu = 'sold' where id = {0}\".format(self.id))\n        self.db.execute(\"insert into orders (userId, ticketId) values ({0}, {1})\".format(userId, self.id))\n        return True  @staticmethod\ndef get_all_tickets():\n    db = database.DataBase.initial_data_base()\n    tickets = db.query(sql);\n    return tickets\n\n@staticmethod\ndef get_my_tickets(userId):\n    db = database.DataBase.initial_data_base()\n    tickets = db.query(sql)\n    return tickets  Controller Ticket", 
            "title": "coding:utf-8"
        }, 
        {
            "location": "/posts/architecture/design-pattern/MVC\u89e3\u8bfb/#codingutf-8_1", 
            "text": "import tornado.web \nimport model.ticket  class TicketHandler(tornado.web.RequestHandler): \n    def get(self, ticketId):\n        ticket = model.ticket.Ticket()\n        ticket.from_id(ticketId)      self.render( ticket.html , ticket = ticket)\n\ndef post(self, ticketId):\n    if not self.get_secure_cookie( user ):\n        self.render( please login! )\n\n    user = model.user.User()\n    user.from_username(self.get_secure_cookie( user ))\n\n    ticket = model.ticket.Ticket()\n    ticket.from_id(ticketId)\n\n    if ticket.buy_ticket(user.id):\n        self.render( error.html , message =  buy ticket success! )\n    else:\n        self.render( error.html , message =  failed to buy ticket! )  \u8fd9\u4e2a\u662f\u4f20\u7edf\u7684web\u5f00\u53d1\u9879\u76ee\uff0cMVC\u4f53\u73b0\u5728\u5728\u6574\u4e2aserver-side\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\uff0cserver-side\u662f\u4e00\u4e2ablack box\uff0c\u8f93\u5165\u662f\u7528\u6237\u7684\u8bf7\u6c42\uff0c\u8f93\u51fa\u662fhtml\u4ee3\u7801\u3002  \u53ea\u4f20\u8f93\u6570\u636e\u7684web\u9879\u76ee\n\u201c\u4f20\u7edf\u201d\u5f97web\u9879\u76ee\u662f\u901a\u8fc7\u4f20\u9012html\u9875\u9762\u7684\uff0c\u90a3\u4e48\u5982\u679c\u8bf7\u6c42\u7684server\u662f\u4e00\u4e2ahttp \u201c\u6570\u636e\u63a5\u53e3\u201d\u63a5\u53e3\u670d\u52a1\u5668\u5462\uff1f  \u5b9e\u9645\u4e0a\u5f88\u591a\u65f6\u5019\uff0c\u7279\u522b\u662f\u5728\u505a\u5355\u9875\u9762\u5f00\u53d1\uff0c\u6216\u8005\u662f\u5b89\u5353\u3001IOS\u79fb\u52a8\u7aef\u5f00\u53d1\u65f6\u5019\uff0cserver-side\u4e00\u822c\u90fd\u662f\u4f20\u8f93json\u6570\u636e\uff08xml\u4e5f\u6709\uff0c\u4e0d\u8fc7\u73b0\u5728\u5927\u5bb6\u6bd4\u8f83\u559c\u6b22json\uff09  \u6211\u4eec\u63a5\u4e0b\u6765\u770b\u4e0b\u4e0b\u9762\u8fd9\u4e2apython flask\u7684\u9879\u76ee\uff0c\u8fd9\u4e2a\u9879\u76ee\u989d\u5916\u5f15\u7528\u4e86\u4e00\u4e9b\u6280\u672f\uff1a  Gevent \uff08python \u5f02\u6b65\u7f16\u7a0b\uff09\nsqlalchemy (python ORM)\n\u9879\u76ee\u7ec4\u7ec7\u67b6\u6784\uff1a   \u5176\u4e2d\uff0c\u6211\u4eec\u770b\u7528\u6237\u4fee\u6539\u4e2a\u4eba\u4fe1\u606f\u7684\u529f\u80fd\uff1a  Model", 
            "title": "coding:utf-8"
        }, 
        {
            "location": "/posts/architecture/design-pattern/MVC\u89e3\u8bfb/#coding_utf-8", 
            "text": "from runtob import db \nfrom sqlalchemy.dialects import mysql  class UserProfile(db.Model):  tablename  = 'user_profile'\n    userId = db.Column(db.Integer, primary_key=True)\n    nickname = db.Column(db.String(50), nullable=False)\n    gender = db.Column(mysql.ENUM('male', 'female', ''), nullable=False)\n    phone = db.Column(db.String(30), nullable=False)\n    email = db.Column(db.String(50), nullable=False)\n    avatar = db.Column(db.String(200), nullable=False)  def __init__(self, userId, nickname= , gender= , phone= , email= , avatar= ):\n    self.userId = userId\n    self.nickname = nickname\n    self.gender = gender\n    self.phone = phone\n    self.email = email\n    self.avatar = avatar  Controller\n@bp.route('/UpdateInformation', methods=['POST'])\n@permission\ndef UpdateInformation(): \n    userId = request.form['userId']\n    gender = request.form['gender']\n    nickname = request.form['nickname']\n    phone = request.form['phone']\n    email = request.form['email']\n    avatar = request.form['avatar']\n    user = UserProfile.query.get(userId)\n    user.gender = {\n            '0':'male',\n            '1':'female',\n        }.get(gender, '')\n    user.phone = phone\n    user.nickname = nickname\n    user.email = email #todo \u6821\u9a8c\n    user.avatar = avatar\n    db.session.commit()\n    return jsonify({'state': 200, 'error': ''})\n\u5176\u4e2d\uff0c\u6211\u4eec\u5728Model\u5c42\u4f7f\u7528\u4e86ORM\u6280\u672f  ORM \u5bf9\u8c61\u5173\u7cfb\u6620\u5c04  \u662f\u4e00\u79cd\u7a0b\u5e8f\u8bbe\u8ba1\u6280\u672f\uff0c\u7528\u4e8e\u5b9e\u73b0\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u8bed\u8a00\u91cc\u4e0d\u540c\u7c7b\u578b\u7cfb\u7edf\u7684\u6570\u636e\u4e4b\u95f4\u7684\u8f6c\u6362\u3002\u4ece\u6548\u679c\u4e0a\u8bf4\uff0c\u5b83\u5176\u5b9e\u662f\u521b\u5efa\u4e86\u4e00\u4e2a\u53ef\u5728\u7f16\u7a0b\u8bed\u8a00\u91cc\u4f7f\u7528\u7684\u201c\u865a\u62df\u5bf9\u8c61\u6570\u636e\u5e93\u201d\u3002 \u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u4f7f\u7528\u4e86sqlalchemy\uff0c\u4f7f\u5f97\u6570\u636e\u5e93\u7684userprofile\u7684\u8868\u548cpython model\u4e2d\u7684userprofile\u7c7b\u505a\u4e86\u6620\u5c04\uff0c\u4ece\u800c\u53ea\u8981\u5bf9user\u7684\u5b9e\u4f8b\u8d4b\u503c\u7136\u540e\u63d0\u4ea4\u5219\u53ef\u4ee5\u540c\u6b65\u66f4\u65b0\u6570\u636e\u5e93\u3002\u5f88\u5927\u7a0b\u5ea6\u4e0a\u51cf\u5c11\u4e86sql\u8bed\u53e5\u7684\u7f16\u5199\uff0c\u589e\u5f3a\u4e86\u4ee3\u7801\u7684\u53ef\u7ef4\u62a4\u6027\u3002  \u5bf9\u4e8eServer Side MVC \u7684\u4e00\u4e9b\u7591\u60d1\n1. \u201c\u4e09\u5c42\u67b6\u6784\u201d\u4e0e\u201cMVC\u201d\u7684\u533a\u522b\n\u5f88\u591a\u4eba\u6709\u8fd9\u4e2a\u7591\u60d1\u3002\u6240\u8c13\u7684\u201c\u4e09\u5c42\u67b6\u6784\u201d\u662f\u8868\u793a\u5c42\u3001\u4e1a\u52a1\u903b\u8f91\u5c42\u3001\u6570\u636e\u5c42\u3002\u7f51\u4e0a\u5bf9\u4e8e\u8fd9\u4e2a\u95ee\u9898\u6709\u4e0d\u5c11\u56de\u7b54\uff0c\u6211\u89c9\u5f97\u90fd\u662f\u626f\u6de1\u7684\u3002   In software engineering, multitier architecture (often referred to as n-tier architecture) is a client\u2013server architecture in which presentation, application processing, and data management functions are physically separated. The most widespread use of multitier architecture is the three-tier architecture.  \u6765\u81ea\u7ef4\u57fa\u767e\u79d1\u5bf9\u4e8e\u4e09\u5c42\u67b6\u6784\u7684\u89e3\u91ca\u3002\u591a\u5c42\u67b6\u6784\u662f\u8f6f\u4ef6\u5de5\u7a0b\u4e2d\u57fa\u4e8eCS\u7684\u4e00\u79cd\u67b6\u6784\uff0c\u4ed6\u5c06\u8868\u793a\u3001\u5e94\u7528\u5904\u7406\u548c\u6570\u636e\u7ba1\u7406\u529f\u80fd\u8fdb\u884c\u7269\u7406\u5206\u79bb\u3002\u6700\u5e38\u89c1\u7684\u591a\u5c42\u67b6\u6784\u662f\u4e09\u5c42\u67b6\u6784\u3002  \u4ee5\u4e0b\u662f\u6784\u67b6\u56fe\uff1a  Web\u5f00\u53d1\u65f6\u5019\u6307\u5357\uff1a \n\u5728Web\u5f00\u53d1\u9886\u57df\uff0c\u4e09\u5c42\u6784\u67b6\u901a\u5e38\u6307\u524d\u7aef\u6d4f\u89c8\u5668\u6e32\u67d3\u7684\u7f51\u9875\u3001Server\u4e0a\u8fd0\u884c\u7684\u4ee3\u7801\u4ee5\u53ca\u6570\u636e\u6301\u4e45\u5316\u5c42\uff08\u4e00\u822c\u7528\u6570\u636e\u5e93\u548c\u6587\u4ef6\u7cfb\u7edf\uff09  \u8868\u793a\u5c42\uff0c\u5b9e\u8d28\u662f\u6d4f\u89c8\u5668\u5e2e\u6211\u4eec\u5b9e\u73b0\u4e86\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u5ffd\u7565\u6389\u3002\u8868\u793a\u5c42\u5c31\u662f\u6d4f\u89c8\u5668\u6e32\u67d3\u51fa\u6765\u7684\u524d\u7aef\u9875\u9762\u3002\n\u4e1a\u52a1\u903b\u8f91\u5c42\u5176\u5b9e\u5c31\u662fWebServer\u5bf9\u4e8e\u524d\u7aef\u8bf7\u6c42\u7684\u5904\u7406\n\u800c\u6570\u636e\u5c42\u5219\u662f\u4f7f\u7528\u6570\u636e\u5e93\u7cfb\u7edf\u4ee5\u53ca\u6587\u4ef6\u7cfb\u7edf\u5b9e\u73b0\u7684\u6570\u636e\u6301\u4e45\u5316\u5c42\n\u5f53\u6211\u4eec\u6e05\u6670\u7406\u89e3MVC\u548c\u4e09\u5c42\u67b6\u6784\u7684\u771f\u6b63\u601d\u60f3\u65f6\u5019\uff0c\u5c31\u80fd\u7406\u89e3\u5230\u8fd9\u4e24\u8005\u7684\u533a\u522b\u6240\u5728\u3002   CRUD \u5e94\u8be5\u653e\u5728 Model \u8fd8\u662f Controller\uff1f\n\u89c2\u70b91\uff1aCRUD\u5e94\u8be5\u653e\u5728Controller\u5c42:   \u7528\u6237\u63d0\u4ea4\u5230\u670d\u52a1\u5668\u7684http\u8bf7\u6c42\uff0c\u7531Controller\u5904\u7406\uff0c\u5f97\u5230\nController\u8d1f\u8d23\u6570\u636e\u4e1a\u52a1\u7684CRUD\uff0c\u5e76\u4e14\u54cd\u5e94\nModel \u53ea\u4ee3\u8868\u5b9e\u4f53\u5bf9\u8c61\uff0c\u5982\u7528\u6237\uff0c\u800c\u4e0d\u63d0\u4f9bCRUD\u65b9\u6cd5\n\u901a\u8fc7\u8d44\u6e90\u63a7\u5236\u5668\uff08Resource Controller\uff09\u5b9e\u73b0\u5bf9\u6570\u636e\u5e93\u7b49\u8d44\u6e90\u7684\u8c03\u7528\n\u89c2\u70b92\uff1aCRUD\u5e94\u8be5\u653e\u5728Model\u5c42\uff1a  Model \u5c42\u63d0\u4f9b\u6570\u636e\u6301\u4e45\u5316\uff08\u901a\u5e38\u662f\u5bf9\u6570\u636e\u5e93\u7684\u64cd\u4f5c\uff09\u65b9\u6cd5\nController \u63a5\u53d7\u7528\u6237\u63d0\u4ea4\u7684http\u8bf7\u6c42\uff0c\u5f53\u4ea7\u751f\u6570\u636e\u53d8\u5316\u65f6\u5019\uff0c\u8c03\u7528Model\u5c42\u7684\u65b9\u6cd5\nModel \u5c42\u5c06\u201c\u5b9e\u4f53\u7684\u72b6\u6001\u201d\u901a\u8fc7\u6570\u636e\u5e93\u7684\u6301\u4e45\u5316\u6765\u8868\u73b0\n\u5176\u5b9e\uff0c\u8fd9\u4e24\u79cd\u8bf4\u6cd5\u90fd\u662f\u5bf9\u7684\u3002\u6570\u636e\u5e93\u7cfb\u7edf\u548cWeb-Server\u5176\u5b9e\u662f\u4e24\u4e2a\u72ec\u7acb\u7cfb\u7edf\uff0c\u8fd9\u70b9\u51b3\u5b9a\u4e86\u6570\u636e\u5e93\u7cfb\u7edf\u7684\u6570\u636e\u6301\u4e45\u5316\u5b9e\u73b0\u5bf9\u4e8eWeb-Server\u5e94\u8be5\u662f\u900f\u660e\u7684\u3002  \u5bf9\u4e8e\u4e0d\u540c\u7684\u5e94\u7528\u6709\u4e0d\u540c\u7684\u89e3\u51b3\u65b9\u6cd5\uff0c\u4f46\u662f\u901a\u5e38\u6765\u8bf4\uff0c\u5927\u5bb6\u4e3a\u4e86\u89e3\u51b3Controller\u8fc7\u4e8e\u81c3\u80bf\u7684\u95ee\u9898\uff0c\u8fd8\u662f\u4f1a\u5c06\u6570\u636e\u7684CRUD\u653e\u5728model\u5c42\uff0c\u901a\u8fc7Controller\u8c03\u7528Model\u7684\u65b9\u6cd5\u5b9e\u73b0CRUD\u3002  \u4e0b\u9762\u770b\u4e00\u4e2aPHP CI\u6846\u67b6\u4e0b\u7684\u8389\u5b50\uff1a  Model\nclass MEntity extends Mx_Model { \n    function insert_entry($data) {\n         \n        database operations\n    }\n}\nController\nclass test extends Mx_Controller { \n    public function insert_entry() {\n        $this- load- model('some_model');      $data[ foo ] = $_POST[ foo ];\n    $data[ bar ] = $_POST[ bar ];\n\n    $this- some_model- insert_entry($data);\n\n    $this- load- view( some_view ); // Tell the user the data was inserted\n}  }\n\u5176\u4e2dController\u662f\u8bf7\u6c42\u7684\u5165\u53e3\uff0cCI\u6846\u67b6\u4e2d\uff0c\u8bf7\u6c42\u7684URL\u5bf9\u5e94\u4e3a\uff1a  POST: /index.php/test/insert_entry \n\u4f8b\u5b50\u4e2d\u7684Model\u5305\u542b\u4e86\u5bf9\u6570\u636e\u5e93\u7684\u64cd\u4f5c\uff0c\u800c\u5728Controller\u4e2d\u5219\u5bf9\u5e94\u5730\u53ef\u4ee5\u8c03\u7528model\u4e2d\u7684\u4ee3\u7801\uff0c\u5c42\u6b21\u5206\u660e\uff0c\u903b\u8f91\u6e05\u6670\u3002  Model\u4ee3\u8868\u4e86\u4f60\u7684\u6570\u636e\u7ed3\u6784\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u60a8\u7684Model\u7c7b\u5c06\u5305\u542b\u5e2e\u52a9\u60a8\u68c0\u7d22\u3001\u63d2\u5165\u548c\u66f4\u65b0\u6570\u636e\u5e93\u4e2d\u7684\u4fe1\u606f\u7684\u51fd\u6570\u3002 \n\u89c6\u56fe\u662f\u8981\u88ab\u8868\u793a\u7ed9\u7528\u6237\u7684\u4fe1\u606f\u3002\u4e00\u4e2a\u89c6\u56fe\u901a\u5e38\u662f\u4e00\u4e2a\u7f51\u9875\uff0c\u4f46\u5728CodeIgniter\uff08CI\u6846\u67b6\uff09\uff0c\u89c6\u56fe\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u9875\u9762\u7247\u6bb5\u5982\u9875\u7709\u6216\u9875\u811a\u3002\u5b83\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u7f51\u9875\uff0c\u6216\u4efb\u4f55\u5176\u4ed6\u7c7b\u578b\u7684\u201chtml\u5757\u201d\u3002 \u8be5\u63a7\u5236\u5668\u4f5c\u4e3a\u4e2d\u4ecb\u4e4b\u95f4\u7684\u6a21\u578b\uff0c\u89c6\u56fe\uff0c\u548c\u9700\u8981\u5904\u7406\u7684HTTP\u8bf7\u6c42\u5e76\u751f\u6210\u4e00\u4e2a\u7f51\u9875\u7684\u5176\u4ed6\u8d44\u6e90\u3002  \u63a5\u4e0b\u6765\u518d\u770b\u4e00\u4e2aexpress+mongodb\u7684\u4f8b\u5b50\uff1a - Model (user \u7528\u6237\u5b9e\u4f53)  require! ['mongoose'] \nObjectId = mongoose.Schema.Types.ObjectId  UserSchema = new mongoose.Schema { \n  authenticated: Number                                 #\u9a8c\u8bc1\u72b6\u6001, 1\u8868\u793a\u5df2\u9a8c\u8bc1\n  auth_code: String                                     #\u9a8c\u8bc1\u7801\n  email: String,                                        #\u90ae\u7bb1\n  password: String,                                     #\u5bc6\u7801\n  username: String,                                     #\u7528\u6237\u540d\n  role: Number,                                         #\u89d2\u8272\uff0c0\u4e3a\u666e\u901a\u7528\u6237\uff0c1\u4e3a\u7ba1\u7406\u5458\n  gender: Number,                                       #\u6027\u522b\uff0c0\u6c49\u5b50\uff0c1\u59b9\u5b50\uff0c2\u4fdd\u5bc6\n  avatar: String,                                       #\u5934\u50cf\n  real_name: String,                                    #\u771f\u5b9e\u59d3\u540d\n  phone_num: String,                                    #\u8054\u7cfb\u65b9\u5f0f\n  qq: String,                                           #QQ\u53f7\u7801\n  weixin: String,                                       #\u5fae\u4fe1\u53f7\n  host_acts: [{type: ObjectId, ref:'Activity'}],        #\u5df2\u53d1\u5e03\u7684\u6d3b\u52a8\n  following_acts: [{type: ObjectId, ref: 'Activity'}],  #\u5df2\u5173\u6ce8\u7684\u6d3b\u52a8\n  joining_acts: [{type: ObjectId, ref: 'Activity'}],    #\u5df2\u62a5\u540d\u7684\u6d3b\u52a8\n  tags: [{type: ObjectId, ref: 'Tag'}],                 #\u8ba2\u9605\u7684tag\n  meta: {\n    createAt: {\n      type: Date,\n      default: Date.now!\n    },\n    updateAt: {\n      type: Date,\n      default: Date.now!\n    }\n  }\n}  UserSchema.pre 'save',(next)!- \n  if @.isNew \n    @.meta.createAt = @.meta.updateAt = Date.now!\n  else\n    @.meta.updateAt = Date.now!\n  next!  UserSchema.statics = { \n  fetch: (cb)- \n    @ .find {} .sort 'meta.updateAt' .exec cb\n  findById: (id, cb)- \n    @ .findOne {_id: id} .exec cb\n}  module.exports = UserSchema \nController (signup)\nrequire! { \n  '../../passport'\n  User: '../../models/user'\n  Tag: '../../models/tag'\n  '../../authMail'\n  multer\n  '../../imageCropper'\n  path\n  async\n  mongoose\n}  DEFAULT_AVATAR = 'images/default_avatar.png'  usernameExists = (username, cb)!- \n  User.find username: username, (err, docs)!- \n    if err\n      cb err\n    else\n      cb null, docs.length   0  emailExists = (email, cb)!- \n  User.find email: email, (err, docs)!- \n    if err\n      cb err\n    else\n      cb null, docs.length   0  createUser = (data, cb)!- \n  data.password = passport.hash data.password\n  data.auth_code = Math.random!toString!\n  data.authenticated = 0\n  data.role = 0\n  data.tags = data.tags.split(',')\n  data.gender = parseInt(data.gender)\n  data.avatar = DEFAULT_AVATAR\n  User.create data, (err)!-  cb err, data.auth_code  module.exports = (req, res)!- \n  # x inputs from body\n  username = req.body.username\n  password = req.body.password\n  email = req.body.email\n  gender = req.body.gender\n  tags = req.body.tags\n  # signup\n  # check if username exists\n  usernameExists username, (err, exists)!- \n    if err\n      console.log err\n      res.status 500 .end!\n    else if exists\n      res.end 'username exists'\n    else\n      emailExists email, (err, exists)!- \n        if err\n          console.log err\n          res.status 500 .end!\n        else if exists\n          res.end 'email exists'\n        else\n          createUser {\n            username: username\n            password: password\n            email: email\n            gender: gender\n            tags: tags\n          }, (err, authCode)!- \n            if err\n              console.log err\n              res.status 500 .end!\n            else\n              authMail.send email, authCode\n              passport.signin res, username, password, (err)!- \n                if err\n                  console.log err\n                  res.status 500 .end!\n                else\n                  res.end 'ok'\nMongodb + express + nodejs \u5728server-side\uff0c\u662f\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u914d\u5408\u3002\u4e0a\u8ff0\u4f7f\u7528\u7684MVC\u6846\u67b6\u79f0\u4e3a\u201cexpress-mongoose-mvc\u201d\u3002  node\u4e2d\u7684mongodb \u539f\u751f\u652f\u6301schema\uff0c\u53ea\u8981\u8981\u5728\u4ee3\u7801\u4e2d\u5b9a\u4e49\u597dschema\u7ed3\u6784\uff0c\u8fd0\u884c\u8fc7\u7a0b\u4e4b\u4e2d\u81ea\u52a8\u751f\u6210\u6570\u636e\u6301\u4e45\u5316\u3002\u8fd9\u79cd\u6280\u672f\u53eb\u505aODM\uff08Object Document Mapper\uff0c \u5bf9\u8c61\u6587\u6863\u6620\u5c04\uff09\uff0c\u7c7b\u4f3c\u6570\u636e\u5173\u7cfb\u6620\u5c04\u3002\u7531\u4e8eNodejs\u7684\u6570\u636e\u7ed3\u6784\u548cmongodb\u7684\u6570\u636e\u7ed3\u6784\u51e0\u4e4e\u662f\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u91c7\u7528\u8fd9\u4e2a\u6280\u672f\u7684\u878d\u5408\u6027\u975e\u5e38\u5730\u597d\u3002  \u540c\u6837\u5730\uff0c\u5bf9\u4e8enosql\u6570\u636e\u5e93\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528MVC\u6846\u67b6\u8fdb\u884c\u6211\u4eec\u4ee3\u7801\u7684\u7ec4\u7ec7\u3002  \u603b\u7ed3Web-Server-Side\u7684MVC\u67b6\u6784\nWeb-Server-Side\u662f\u57fa\u4e8e\u65e0\u8fde\u63a5\u7684HTTP\u534f\u8bae\uff0cserver\u8d1f\u8d23\u5904\u7406\u6bcf\u4e2ahttp\u7684\u8bf7\u6c42\uff0c\u6700\u540e\u5199\u4f1a\u54cd\u5e94\u7ed9\u5ba2\u6237\u7aef\u3002  Web-Server-Side\u7684MVC\u7ed3\u6784\u5206\u4e3a\u4f20\u7edf\u9875\u9762\u4f20\u8f93\u548c\u73b0\u5728\u5f88\u591a\u5e94\u7528\u7684\u6570\u636e\u4f20\u8f93\u3002  \u5bf9\u4e8e\u9875\u9762\u4f20\u8f93\u5f62\u5f0f\u6574\u4e2a\u7f51\u7ad9\u7684\u529f\u80fd\uff0c\u524d\u7aef\u548c\u540e\u53f0\u90fd\u7531web-server\u6765\u5b9e\u73b0\uff0c\u7528\u6237\u8bf7\u6c42\u7684\u662fhtml\u9875\u9762\u3002\u5728\u8fd9\u91cc\uff0cView\u662fhtml\u9875\u9762\u3002  \u5bf9\u4e8e\u73b0\u5728\u5f88\u591a\u5e94\u7528\u4f20\u8f93json\u6216\u8005xml\u6570\u636e\uff0c\u5176\u5b9e\u662f\u7701\u7565\u4e86View\u5c42\u3002\u5728MVC\u7684\u521d\u59cb\u8bbe\u8ba1\u4e2d\uff0c\u662f\u4e3a\u4e86\u89e3\u51b3\u201c\u56fe\u5f62\u5316\u201d\u7528\u6237\u4ea4\u4e92\u7cfb\u7edf\u7684\u8bbe\u8ba1\uff0c\u6240\u4ee5\uff0c\u4ece\u4e25\u683c\u7684\u610f\u4e49\u4e0a\u6765\u8bf4\uff0c\u8fd9\u6837\u7684web-server\u5e76\u4e0d\u662fMVC\u67b6\u6784\u3002\u4f46\u662f\u6211\u4eec\u4f9d\u7136\u53ef\u4ee5\u501f\u9274MVC\u7684\u601d\u60f3\u4e3a\u6211\u4eec\u6e05\u6670\u7ec4\u7ec7\u4ee3\u7801\u3002  \u5728Web-Server\u4e2dController\u5b9e\u8d28\u4e0a\u5c31\u662f\u8def\u7531\u5904\u7406\uff0c\u53ef\u4ee5\u5206\u4e3a\u8def\u7531\u8868\u548c\u5177\u4f53\u7684\u8def\u7531\u529f\u80fd\u3002Model\u662f\u5b9e\u4f53\uff0c\u662f\u8fd9\u4e2a\u7cfb\u7edf\u5b9a\u4e49\u7684\u5173\u952e\u62bd\u8c61\u7c7b\uff0c\u4e00\u822c\u5730\uff0c\u5e94\u8be5\u63d0\u4f9b\u6570\u636e\u5e93\u7684CRUD\u65b9\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u5c1d\u8bd5\u4f7f\u7528ORM\u6280\u672f\u4e0e\u6570\u636e\u5e93\u8868\u7ed3\u6784\u5bf9\u63a5\u3002  Client-Side\u7684MVC\nAs client technologies have matured, frameworks such as AngularJS, EmberJS, JavaScriptMVC and Backbone have been created that allow the MVC components to execute partly on the client (also see Ajax).  \u7ef4\u57fa\u767e\u79d1\u7684\u7b2c\u4e8c\u6bb5\u8bb2\u8ff0\u4e86\uff0c\u73b0\u4ee3web\u6280\u672f\u7684\u8fdb\u6b65\uff0c\u533a\u522b\u4e8e\u4f20\u7edf\u7684\u4f9d\u8d56web\u670d\u52a1\u7aef\u4f20\u8f93\u5927\u6bb5\u5927\u6bb5\u7684\u6570\u636e\uff0cweb\u5f00\u53d1\u8005\u610f\u8bc6\u5230\uff0c\u5728\u524d\u7aef\u7684js\u4e2d\u53ef\u4ee5\u505a\u5f88\u591a\u4e8b\u60c5\u3002  html \u4ee3\u7801\u5e76\u4e0d\u662f\u6bcf\u6b21\u90fd\u9700\u8981\u4f20\u8f93\u6574\u4e2a\u6587\u6863\uff1a\u5b8c\u5168\u53ef\u4ee5\u53ea\u4f20\u8f93\u90e8\u5206\uff0c\u6216\u8005\u53ea\u4f20\u8f93\u6570\u636e\uff0c\u7136\u540e\u901a\u8fc7js\u4ee3\u7801\u586b\u5145\u5230\u5bf9\u5e94\u7684\u4f4d\u7f6e\u5373\u53ef\n\u5728\u67d0\u4e9b\u9700\u6c42\u4e2d\uff0c\u7528\u6237\u5e0c\u671b\u4e0d\u8981\u6bcf\u6b21\u64cd\u4f5c\u90fd\u5c06\u6574\u4e2a\u9875\u9762\u5237\u65b0\uff0c\u6bd4\u5982\u9700\u6c42\u662f\u5355\u9875\u9762\u5e94\u7528\uff0cSPA\uff08single page application\uff09\n\u751a\u81f3\uff0c\u524d\u7aef\u53ef\u4ee5\u4e0d\u9700\u8981\u540e\u53f0\u670d\u52a1\u5668\u4f20\u8f93\u4efb\u4f55\u7684html\u9875\u9762\uff0c\u524d\u7aef\u5b8c\u5168\u53ef\u4ee5\u81ea\u884c\u6839\u636e\u670d\u52a1\u7aef\u7684\u6570\u636e\u6e32\u67d3\u51fahtml\u9875\u9762\n\u67d0\u5b89\u5353\u7aef\u5e94\u7528\uff0c\u6216\u8005IOS\u7aef\u5e94\u7528\u9700\u8981\u8c03\u7528http\u63a5\u53e3\uff0c\u8fd9\u65f6\u5019\u6211\u4eec\u4e0d\u80fd\u591f\u8fd4\u56dehtml\u9875\u9762\uff08\u4e8b\u5b9e\u4e0a\u53ef\u4ee5\u7528webview\u8fd4\u56de\uff0c\u4f46\u662f\u7406\u89e3\u5e94\u7528\u5f00\u53d1\u5c31\u77e5\u9053\u8fd9\u6837\u505a\u5f88\u4e0d\u597d\uff09\n\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u9700\u6c42\uff0c\u5c31\u51fa\u73b0\u4e86Ajax\u8bf7\u6c42\uff0c\u8bf7\u6c42\u670d\u52a1\u5668\u7684\u65f6\u5019\uff0c\u4e0d\u9700\u8981\u5237\u65b0\u6574\u4e2a\u9875\u9762\uff0c\u800c\u662f\u59d4\u6258js\u4ee3\u7801\u53bb\u8bf7\u6c42\uff0c\u7136\u540e\u8fd4\u56de\u4e4b\u540e\uff0cjs\u4ee3\u7801\u901a\u8fc7\u64cd\u4f5c\u9875\u9762\u7684dom\u5143\u7d20\u52a8\u6001\u5730\u5c06\u540e\u7aef\u6570\u636e\u62ff\u56de\u5230\u524d\u7aef\u663e\u793a\u3002  \u7136\u800c\u5f53\u9875\u9762\u7684\u903b\u8f91\u590d\u6742\u8d77\u6765\u7684\u65f6\u5019\uff0c\u4f60\u4f1a\u53d1\u73b0\u4ee3\u7801\u7ec4\u7ec7\u6beb\u65e0\u7ae0\u6cd5\uff0c\u5bf9\u4e8e\u6240\u6709\u4e8b\u4ef6\uff0c\u51e0\u4e4e\u90fd\u662f\u4f7f\u7528\u4e8b\u4ef6- \u5143\u7d20\u64cd\u4f5c- \u8bf7\u6c42- \u8fd4\u56de\u6570\u636e- \u5143\u7d20\u64cd\u4f5c\u3002  \u4e4b\u524d\u5199\u7684YOJ\u4e2d\u67e5\u8be2\u63d0\u4ea4\u4ee3\u7801\u8bb0\u5f55\uff0c\u67e5\u8be2\u8bc4\u6d4b\u62a5\u544a\u7684\u524d\u7aef\u4ee3\u7801\u3002  \u9700\u6c42\u5c31\u662f\uff0c\u70b9\u51fb\u63d0\u4ea4\u8bb0\u5f55\u7684\u6309\u94ae\u4e4b\u540e\uff0c\u5f39\u51fa\u6a21\u6001\u6846\uff0c\u6a21\u6001\u6846\u4e2d\u663e\u793a\u4ee3\u7801\u7684\u5177\u4f53\u5185\u5bb9\u3002 \u70b9\u51fb\u63d0\u4ea4\u8bc4\u6d4b\u62a5\u544a\u6309\u94ae\uff0c\u5f39\u51fa\u6a21\u6001\u6846\uff0c\u6a21\u6001\u6846\u4e2d\u663e\u793a\u4ee3\u7801\u7684\u5177\u4f53\u5185\u5bb9\u3002  $(document).ready( function () {\n    $(\"body\").on(\"click\", \".source\", function(event) {\n        target = $(event.target);\n        runid = target.data(\"runid\");\n        uid = target.data(\"uid\");\n        language = target.data(\"language\");\n            $.get(\n            \"s-getcode\", \n            {\n                language : language,\n                runid : runid,\n                uid : uid\n            },\n            function(data,status) {\n                $(\"#codecontent\").text(data)\n                $(\"#myModal\").modal().show();\n            });\n    });  $( body ).on( click ,  .report , function(event) {\n    target = $(event.target);\n    runid = target.data( runid );\n        $.get(\n         \\s-getreport , \n        {\n            runid : runid\n        },\n        function(data,status) {\n            $( #codecontent1 ).text(data)\n            $( #myModal1 ).modal().show();\n        });\n});  });\n\u5728\u5904\u7406\u7b80\u5355\u903b\u8f91\u65f6\u5019\u65f6\u5019\uff0c\u6211\u4eec\u8fd9\u6837\u505a\u5b8c\u5168\u6ca1\u6709\u95ee\u9898\u3002\u4f46\u662f\u5f53\u4e1a\u52a1\u9700\u6c42\u591a\u8d77\u6765\u7684\u65f6\u5019\uff0c\u8fd9\u6837\u505a\u4ee3\u7801\u5c31\u4f1a\u663e\u5f97\u6742\u4e71\u65e0\u7ae0\uff0c\u96be\u4ee5\u7ef4\u62a4\u3002  \u73b0\u5728\u5728\u5f15\u5165\u524d\u7aefMVC\u6982\u5ff5\u65f6\u5019\uff0c\u6211\u4eec\u5f15\u7528\u4e00\u79cd\u9762\u5411\u5bf9\u8c61\u7684\u8bbe\u8ba1\u6a21\u5f0f\uff1a\u89c2\u5bdf\u8005\u6a21\u5f0f  \u89c2\u5bdf\u8005\u6a21\u5f0f\u662f\u5f88\u597d\u5730\u5b9e\u73b0Web\u524d\u7aefMVC\u7684\u4e00\u79cd\u8bbe\u8ba1\u6a21\u5f0f\uff08pattern\uff09\u3002\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u89c2\u5bdf\u8005\u8ba2\u9605\u4e00\u4e9b\u4e8b\u4ef6\uff0c\u4e5f\u5c31\u662f\u201c\u66b4\u9732\u201d\u81ea\u5df1\u4e8b\u4ef6\u76d1\u542c\u7684\u63a5\u53e3\uff0c\u5f53\u5176\u4ed6\u73af\u5883\u4e0b\u7684\u5bf9\u8c61\u72b6\u6001\u6539\u53d8\u65f6\u53ef\u4ee5\u8c03\u7528notify\u65b9\u6cd5\u6765\u901a\u77e5\u89c2\u5bdf\u8005\u72b6\u6001\u6539\u53d8\uff0c\u89c2\u5bdf\u8005\u968f\u5373\u6539\u53d8\u81ea\u5df1\u7684\u72b6\u6001\u9002\u5e94\u8fd9\u4e2a\u6539\u53d8\u3002  \u5728\u524d\u7aef\u4e2d\uff0c\u6211\u4eec\u7684MVC\u6846\u67b6\u662f\u8fd9\u6837\u7684\uff1a  \u4e00\u4e2a\u4e3b\u4e8b\u4ef6\u6d41\u7a0b\uff1a  \u7528\u6237\u64cd\u4f5cview\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u88ab\u53d1\u9001\u5230Controller\u8fdb\u884c\u5904\u7406\nController \u6839\u636e\u4e1a\u52a1\u903b\u8f91\uff0c\u5bf9Model\uff08\u6570\u636e\u5b9e\u4f53\uff09\u8fdb\u884c\u4fee\u6539\uff0c\u8fd9\u65f6\u5019Controller\u6709\u53ef\u80fd\u4f1a\u4fee\u6539View\u7684\u5185\u5bb9\nModel\u6839\u636eController\u5bf9\u81ea\u5df1\u7684\u8c03\u7528\u4fee\u6539\u81ea\u5df1\u7684\u72b6\u6001\uff0c\u8fd9\u4e2a\u72b6\u6001\u4fee\u6539\u4e4b\u540e\uff0cModel\u901a\u77e5View\u505a\u51fa\u76f8\u5e94\u7684\u53d8\u5316\n\u6211\u4eec\u6765\u770b\u4e00\u4e2aJquery\u7684\u8389\u5b50\uff1a  \u8fd9\u91cc\u6709\u4e00\u6bb5html  \n   \n   \n       \n     \n         \n     \n     \n         + \n         - \n       \u5927\u6982\u7684\u529f\u80fd\u5c31\u662f\u5b9e\u73b0\u8fd9\u4e2a\u5217\u8868\u7684\u589e\u3001\u5220\u3002  function Event(sender) { \n    this._sender = sender;\n    this._listeners = [];\n}  Event.prototype = { \n    attach: function (listener) {\n        this._listeners.push(listener);\n    },\n    notify: function (args) {\n        var index;      for (index = 0; index   this._listeners.length; index += 1) {\n        this._listeners[index](this._sender, args);\n    }\n}  };  /**\n * The Model. Model stores items and notifies\n * observers about changes.\n */\nfunction ListModel(items) { \n    this._items = items;\n    this._selectedIndex = -1;  this.itemAdded = new Event(this);\nthis.itemRemoved = new Event(this);\nthis.selectedIndexChanged = new Event(this);  }  ListModel.prototype = { \n    getItems: function () {\n        return [].concat(this._items);\n    },  addItem: function (item) {\n    this._items.push(item);\n    this.itemAdded.notify({\n        item: item\n    });\n},\n\nremoveItemAt: function (index) {\n    var item;\n\n    item = this._items[index];\n    this._items.splice(index, 1);\n    this.itemRemoved.notify({\n        item: item\n    });\n    if (index === this._selectedIndex) {\n        this.setSelectedIndex(-1);\n    }\n},\n\ngetSelectedIndex: function () {\n    return this._selectedIndex;\n},\n\nsetSelectedIndex: function (index) {\n    var previousIndex;\n\n    previousIndex = this._selectedIndex;\n    this._selectedIndex = index;\n    this.selectedIndexChanged.notify({\n        previous: previousIndex\n    });\n}  };  /**\n * The View. View presents the model and provides\n * the UI events. The controller is attached to these\n * events to handle the user interraction.\n */\nfunction ListView(model, elements) { \n    this._model = model;\n    this._elements = elements;  this.listModified = new Event(this);\nthis.addButtonClicked = new Event(this);\nthis.delButtonClicked = new Event(this);\n\nvar _this = this;\n\n// attach model listeners\nthis._model.itemAdded.attach(function () {\n    _this.rebuildList();\n});\nthis._model.itemRemoved.attach(function () {\n    _this.rebuildList();\n});\n\n// attach listeners to HTML controls\nthis._elements.list.change(function (e) {\n    _this.listModified.notify({\n        index: e.target.selectedIndex\n    });\n});\nthis._elements.addButton.click(function () {\n    _this.addButtonClicked.notify();\n});\nthis._elements.delButton.click(function () {\n    _this.delButtonClicked.notify();\n});  }  ListView.prototype = { \n    show: function () {\n        this.rebuildList();\n    },  rebuildList: function () {\n    var list, items, key;\n\n    list = this._elements.list;\n    list.html( );\n\n    items = this._model.getItems();\n    for (key in items) {\n        if (items.hasOwnProperty(key)) {\n            list.append($( option  + items[key] +  /option ));\n        }\n    }\n    this._model.setSelectedIndex(-1);\n}  };  /**\n * The Controller. Controller responds to user actions and\n * invokes changes on the model.\n */\nfunction ListController(model, view) { \n    this._model = model;\n    this._view = view;  var _this = this;\n\nthis._view.listModified.attach(function (sender, args) {\n    _this.updateSelected(args.index);\n});\n\nthis._view.addButtonClicked.attach(function () {\n    _this.addItem();\n});\n\nthis._view.delButtonClicked.attach(function () {\n    _this.delItem();\n});  }  ListController.prototype = { \n    addItem: function () {\n        var item = window.prompt('Add item:', '');\n        if (item) {\n            this._model.addItem(item);\n        }\n    },  delItem: function () {\n    var index;\n\n    index = this._model.getSelectedIndex();\n    if (index !== -1) {\n        this._model.removeItemAt(this._model.getSelectedIndex());\n    }\n},\n\nupdateSelected: function (index) {\n    this._model.setSelectedIndex(index);\n}  };  $(function () {\n    var model = new ListModel(['PHP', 'NodeJs']),\n        view = new ListView(model, {\n            'list': $('#list'),\n                'addButton': $('#plusBtn'),\n                'delButton': $('#minusBtn')\n        }),\n        controller = new ListController(model, view);  view.show();  });\n\u5f53\u7136\u53ef\u4ee5\u628a\u8fd9\u90e8\u5206\u6539\u6210\u5f02\u6b65\u7684\uff1a  Event.prototype = { \n    attach: function (listener) {\n        this._listeners.push(listener);\n    },\n    notify: function (args) {\n        var index;\n        for (index = 0; index   this._listeners.length; index += 1) {\n          // async\n          (function(listener, sender, args) {\n            setTimeout(function() {\n              listener(sender, args);\n            }, 0);\n          })(this._listeners[index], this._sender, args);\n          // this._listeners index ;\n        }\n    }\n};\n\u8fd9\u5c31\u662f\u524d\u7aefMVC\u7684\u4e3b\u8981\u601d\u60f3\u3002Model\u548cView\u4ece\u67d0\u79cd\u610f\u4e49\u4e0a\u662f\u5b9e\u65f6\u540c\u6b65\u7684\u3002  \u8dea\u4e0b\u5949\u4e0a\u83ab\u51a0\u948a\u5927\u795e\u7684\u524d\u7aefMVC\u4ee3\u7801\u4f8b\u5b50\uff1alink  eventbus.ls\u8fd9\u4e2a\u662f\u89c2\u5bdf\u8005\u6a21\u5f0f\u5b9e\u73b0\u7684\u5173\u952e  \u5176\u4e2d\u7684\u201c\u4e8b\u4ef6\u603b\u7ebf\u201d\u548c\u89c2\u5bdf\u8005\u6a21\u5f0f\u7684subject\u662f\u4e00\u81f4\u7684  \u66f4\u591a\u4e0eMVC\u76f8\u5173\nC++/Java \u56fe\u5f62\u754c\u9762\u5e94\u7528\nweb\u524d\u7aef\u524d\u7aef\u7684\u5f88\u591a\u6846\u67b6\n\u603b\u7ed3\nMVC\u662f\u4e00\u79cd\u5f00\u53d1\u601d\u60f3\uff0c\u5e94\u8be5\u7528\u66f4\u52a0\u62bd\u8c61\u7684\u5c42\u6b21\u53bb\u7406\u89e3\u3002\u5176\u5b9e\u5728\u4efb\u4f55\u9879\u76ee\u4e2d\uff0c\u4e0d\u7528MVC\u4e5f\u4e0d\u4f1a\u6000\u5b55\u3002\u8bbe\u8ba1\u6a21\u5f0f\u53ea\u662f\u4e00\u79cd\u601d\u7ef4\u65b9\u6cd5\u4f7f\u5f97\u4f60\u5728\u7ec4\u7ec7\u5927\u578b\u4ee3\u7801\u7684\u65f6\u5019\u4e0d\u81f3\u4e8e\u624b\u5fd9\u811a\u4e71\u3002  MVC\u5728\u5b58\u5728\u7740\u4e0d\u5c11\u89c2\u70b9\u7684\u4e89\u8bba\uff0c\u5728\u8fd9\u4e9b\u4e89\u8bba\u7684\u80cc\u540e\u7684\u5b9e\u8d28\u5176\u5b9e\u662f\u5e94\u7528\u73af\u5883\u7684\u4e0d\u540c\uff0c\u6216\u8005\u662f\u5e94\u7528\u65b9\u5f0f\u4e0d\u4e00\u6837\u3002  \u7efc\u5408\u6765\u8bb2\uff0c\u53ea\u8981\u662f\u5b9e\u7528\u4e8e\u81ea\u5df1\u7684\u9879\u76ee\u7684\u8bbe\u8ba1\u6a21\u5f0f\u5c31\u662f\u597d\u7684\u3002  \u4e3b\u8981\u53c2\u8003\u8d44\u6599\nMVC Wikipedia", 
            "title": "coding: utf-8"
        }, 
        {
            "location": "/posts/algorithmn/prove-binary-search-is-better/", 
            "text": "\u4e3a\u4ec0\u4e48\u4f7f\u7528\u4e8c\u5206\u67e5\u627e\uff0c\u800c\u4e0d\u662f\u4e09\u5206\u67e5\u627e\uff1f\n\n\n\u8003\u8651\u5e73\u5747\u6bd4\u8f83\u6b21\u6570\n\n\n\u5bf9\u4e8e\u4e8c\u5206\u67e5\u627e\uff1a\n\n\n\u5b58\u5728\u7684\u6bd4\u8f83\u60c5\u51b5\uff1a\n\n\n\n\n\u6bd4\u8f83middle\u662f\u5426\u7b49\u4e8etarget\n\n\n\u6bd4\u8f83middle\u662f\u5426\u5c0f\u4e8etarget\n\n\n\n\n\u5355\u6b21\u67e5\u627e\u5e73\u5747\u6bd4\u8f83\u6b21\u6570\uff1a\n\\(\\frac{1 + 2}{2} = \\frac{3}{2}\\)\n\n\n\\[\nT(1) = 1 \n\\]\n\\[\n  T(n) = T(\\frac{n}{2}) + \\frac{3}{2}\n\\]\n\\[\n  T(\\frac{n}{2}) = T(\\frac{n}{4}) + \\frac{3}{2}\n\\]\n\\[\nT(n) = T(\\frac{n}{4}) + \\frac{3}{2} \\cdot 2\n\\]\n\\[\n\\therefore T(n) = T(1) + \\frac{3}{2} \\cdot \\log_2{n} = 1 + \\frac{3}{2} \\cdot \\log_2{n}\n\\]\n\u5bf9\u4e8e\u4e09\u5206\u67e5\u627e\uff1a\n\n\n\u5b58\u5728\u7684\u6bd4\u8f83\u60c5\u51b5\uff1a\n\n\n\n\n\u6bd4\u8f83middle\u662f\u5426\u7b49\u4e8etarget_1\n\n\n\u6bd4\u8f83middle\u662f\u5426\u5c0f\u4e8etarget_1\n\n\n\u6bd4\u8f83middle\u662f\u5426\u7b49\u4e8etarget_2\n\n\n\u6bd4\u8f83middle\u662f\u5426\u5c0f\u4e8etarget_2\n\n\n\n\n\u5355\u6b21\u67e5\u627e\u5e73\u5747\u6bd4\u8f83\u6b21\u6570\uff1a\n\\(\\frac{1 + 2 + 3 + 4}{4} = \\frac{5}{2}\\)\n\n\n\\[\nT(1) = 1 \n\\]\n\\[\n  T(n) = T(\\frac{n}{3}) + \\frac{5}{2}\n\\]\n\\[\n  T(\\frac{n}{3}) = T(\\frac{n}{9}) + \\frac{5}{2}\n\\]\n\\[\nT(n) = T(\\frac{n}{9}) + \\frac{5}{2} \\cdot 2\n\\]\n\\[\n\\therefore T(n) = T(1) + \\frac{5}{2} \\cdot \\log_3{n} = 1 + \\frac{5}{2} \\cdot \\log_3{n}\n\\]\n\u5bf9\u6bd4\uff1a\n\n\n\\[\n 1 + \\frac{3}{2} \\cdot \\log_2{n} \n 1 + \\frac{5}{2} \\cdot \\log_3{n}\n\\]\n\u6240\u4ee5\uff0c\u4e8c\u5206\u67e5\u627e\u4f18\u4e8e\u4e09\u5206\u67e5\u627e\u3002\n\n\n\u5bf9\u4e8ex\u5206\u67e5\u627e\n\n\n\u5355\u6b21\u5e73\u5747\u6bd4\u8f83\u6b21\u6570\uff1a\n\n\n\\[\nx - \\frac{1}{2}\n\\]\n\u5e73\u5747\u6bd4\u8f83\u6b21\u6570\n\n\n\\[\nf(x) = 1 + (x-\\frac{1}{2})\\cdot\\log_x{n}\n\\]\n\u53ef\u4ee5\u8bc1\u660e \n\\(f(x)\\)\n\u5728\n\\((2,+\\infty)\\)\n\u662f\u589e\u51fd\u6570\uff0c\u4ece\u800c\u8bc1\u660e\u4e8c\u5206\u67e5\u627e\u7531\u4e8en\u5206\u67e5\u627e\n\\((n \n 2)\\)", 
            "title": "\u8bc1\u660e\u4e8c\u5206\u67e5\u627e\u4f18\u4e8e\u4e09\u5206\u67e5\u627e\u3001\u56db\u5206\u67e5\u627e"
        }, 
        {
            "location": "/posts/algorithmn/prove-binary-search-is-better/#_1", 
            "text": "\u8003\u8651\u5e73\u5747\u6bd4\u8f83\u6b21\u6570", 
            "title": "\u4e3a\u4ec0\u4e48\u4f7f\u7528\u4e8c\u5206\u67e5\u627e\uff0c\u800c\u4e0d\u662f\u4e09\u5206\u67e5\u627e\uff1f"
        }, 
        {
            "location": "/posts/algorithmn/prove-binary-search-is-better/#_2", 
            "text": "\u5b58\u5728\u7684\u6bd4\u8f83\u60c5\u51b5\uff1a   \u6bd4\u8f83middle\u662f\u5426\u7b49\u4e8etarget  \u6bd4\u8f83middle\u662f\u5426\u5c0f\u4e8etarget   \u5355\u6b21\u67e5\u627e\u5e73\u5747\u6bd4\u8f83\u6b21\u6570\uff1a \\(\\frac{1 + 2}{2} = \\frac{3}{2}\\)  \\[\nT(1) = 1 \n\\] \\[\n  T(n) = T(\\frac{n}{2}) + \\frac{3}{2}\n\\] \\[\n  T(\\frac{n}{2}) = T(\\frac{n}{4}) + \\frac{3}{2}\n\\] \\[\nT(n) = T(\\frac{n}{4}) + \\frac{3}{2} \\cdot 2\n\\] \\[\n\\therefore T(n) = T(1) + \\frac{3}{2} \\cdot \\log_2{n} = 1 + \\frac{3}{2} \\cdot \\log_2{n}\n\\]", 
            "title": "\u5bf9\u4e8e\u4e8c\u5206\u67e5\u627e\uff1a"
        }, 
        {
            "location": "/posts/algorithmn/prove-binary-search-is-better/#_3", 
            "text": "\u5b58\u5728\u7684\u6bd4\u8f83\u60c5\u51b5\uff1a   \u6bd4\u8f83middle\u662f\u5426\u7b49\u4e8etarget_1  \u6bd4\u8f83middle\u662f\u5426\u5c0f\u4e8etarget_1  \u6bd4\u8f83middle\u662f\u5426\u7b49\u4e8etarget_2  \u6bd4\u8f83middle\u662f\u5426\u5c0f\u4e8etarget_2   \u5355\u6b21\u67e5\u627e\u5e73\u5747\u6bd4\u8f83\u6b21\u6570\uff1a \\(\\frac{1 + 2 + 3 + 4}{4} = \\frac{5}{2}\\)  \\[\nT(1) = 1 \n\\] \\[\n  T(n) = T(\\frac{n}{3}) + \\frac{5}{2}\n\\] \\[\n  T(\\frac{n}{3}) = T(\\frac{n}{9}) + \\frac{5}{2}\n\\] \\[\nT(n) = T(\\frac{n}{9}) + \\frac{5}{2} \\cdot 2\n\\] \\[\n\\therefore T(n) = T(1) + \\frac{5}{2} \\cdot \\log_3{n} = 1 + \\frac{5}{2} \\cdot \\log_3{n}\n\\]", 
            "title": "\u5bf9\u4e8e\u4e09\u5206\u67e5\u627e\uff1a"
        }, 
        {
            "location": "/posts/algorithmn/prove-binary-search-is-better/#_4", 
            "text": "\\[\n 1 + \\frac{3}{2} \\cdot \\log_2{n}   1 + \\frac{5}{2} \\cdot \\log_3{n}\n\\] \u6240\u4ee5\uff0c\u4e8c\u5206\u67e5\u627e\u4f18\u4e8e\u4e09\u5206\u67e5\u627e\u3002  \u5bf9\u4e8ex\u5206\u67e5\u627e  \u5355\u6b21\u5e73\u5747\u6bd4\u8f83\u6b21\u6570\uff1a  \\[\nx - \\frac{1}{2}\n\\] \u5e73\u5747\u6bd4\u8f83\u6b21\u6570  \\[\nf(x) = 1 + (x-\\frac{1}{2})\\cdot\\log_x{n}\n\\] \u53ef\u4ee5\u8bc1\u660e  \\(f(x)\\) \u5728 \\((2,+\\infty)\\) \u662f\u589e\u51fd\u6570\uff0c\u4ece\u800c\u8bc1\u660e\u4e8c\u5206\u67e5\u627e\u7531\u4e8en\u5206\u67e5\u627e \\((n   2)\\)", 
            "title": "\u5bf9\u6bd4\uff1a"
        }, 
        {
            "location": "/posts/front-end/angular/AngularJS\u6e90\u4ee3\u7801\u9605\u8bfb(1)/", 
            "text": "AngularJS\u6e90\u4ee3\u7801\u9605\u8bfb(1) angularjs \u6c89\u601d\n\n\n\n\n\u524d\u8a00\n\n\n\u7531\u4e8e\u56e2\u961f\u524d\u540e\u7aef\u5206\u79bb\u9009\u578b\u6bd4\u8f83\u65e9\uff0c\u5de5\u4f5c\u4e2d\u4e00\u76f4\u4f7f\u7528Angularjs\u8fdb\u884cweb\u524d\u7aef\u5f00\u53d1\u3002\u5728Angularjs\u4e00\u51fa\u6765\u7684\u65f6\u4ee3\uff0c\u662f\u7ea2\u6781\u4e00\u65f6\u7684\u660e\u661f\u6846\u67b6\u3002\u4ed6\u5f00\u521b\u4e86\u524d\u7aef\u4e00\u4e2a\u65b0\u7684\u65f6\u4ee3\u3002\u5bf9\u6bd4\u56e2\u961f\u5728\u4e4b\u524d\u4f7f\u7528Jquery+Bootstrap\u7684\u5e74\u4ee3\u65f6\u5019\u7684\u5f00\u53d1\u6280\u672f\uff0cAngularjs\u8ba9\u56e2\u961f\u7684\u5f00\u53d1\u6548\u7387\u5927\u5927\u63d0\u9ad8\u3002\n\n\n\u5728Angularjs\u6781\u76db\u4e00\u65f6\u7684\u5e74\u4ee3\uff0c\u5bf9\u4e8eSPA(single page application)\u9996\u9009\u7684\u6846\u67b6\u5c31\u662fangularjs\u3002\u5f53\u4f60\u8fd8\u5728\u5199JQuery\u7684\u65f6\u5019\uff0c\u4e3a\u5404\u79cddom\u64cd\u4f5c\u82e6\u607c\u7684\u65f6\u5019\uff0cAngularjs\u7684helloworld\u4f8b\u5b50\u4f1a\u8ba9\u4f60\u773c\u524d\u4e00\u4eae\u3002\u7d27\u63a5\u7740\uff0c\u53cc\u5411\u6570\u636e\u7ed1\u5b9a\u3001\u89c6\u56fe\u548c\u6570\u636e\u6a21\u578b\u81ea\u52a8\u66f4\u65b0\u3001\u4f9d\u8d56\u6ce8\u5165\u3001\u670d\u52a1\u5316\u4ee5\u53ca\u6700\u8ba9\u4eba\u5fc3\u52a8\u7684\u6307\u4ee4\uff08directive\uff09\u90fd\u8ba9\u4eba\u6026\u7136\u5fc3\u52a8\uff0c\u91cd\u65b0\u8ba4\u8bc6\u524d\u7aef\u5f00\u53d1\u3002\n\n\n\u65f6\u4ee3\u6d6a\u6f6e\n\n\n\u4eca\u5929\uff0c\u662f2018\u5e743\u670817\u65e5\u3002\u4eceangularjs\u5f00\u53d1\u5230\u73b0\u5728\u5df2\u7ecf8\u5e74\u591a\u4e86\u3002\u5728\u8fd9\u671f\u95f4\uff0c\u7279\u522b\u662f\u6700\u8fd1\uff0c\u524d\u7aef\u754c\u7684\u53d1\u5c55\u53ef\u8c13\u662f\u6c79\u6d8c\u6f8e\u6e43\u3001\u65e5\u65b0\u6708\u5f02\u3002\u76ee\u524d\u6211\u4eec\u65e5\u5e38\u542c\u5230\u7684\u6846\u67b6\u6709\u4ee5\u4e0b\u51e0\u4e2a:\n\n\n\n\n\n\nReact\n\n\nVue\n\n\nAnuglar\n\n\n\n\n\u5bf9\u4e8e\u8fd9\u4e9b\u6846\u67b6\u7684\u8bc4\u4ef7\uff0c\u5728\u793e\u533a\u4e2d\u6709\u5f88\u591a\u5404\u79cd\u5404\u6837\u7684\u8bf4\u6cd5\u3002\u4e5f\u6709\u4e0d\u5c11\u5546\u4e1a\u4e92\u55b7\u7684\uff0c\u5f20\u53e3\u5c31\u8bf4\u6284\u88ad\u6211\u7684\u4e4b\u7c7b\u7684\u3002\u800c\u5bf9\u4e8eangularjs\u8fd9\u4e2a\u6846\u67b6\uff0c\u5219\u662f\u4e00\u4e2a\u9971\u53d7\u4eba\u4eec\u8bdf\u75c5\u7684\u3001\u88ab\u6279\u8bc4\u6700\u591a\u7684\u4ee5\u53ca\u201c\u88ab\u629b\u5f03\u201d\u7684\u524d\u7aef\u6846\u67b6\u3002\n\n\n\n\n\u504f\u89c1\n\n\n\u63a5\u89e6\u8fc7\u4e00\u4e9b\u524d\u7aef\u7684\u4ece\u4e1a\u8005\u3001\u6216\u8005\u662f\u793e\u533a\u4eba\u5458\u5305\u62ec\u6211\u81ea\u8eab\u5728\u5185\uff0c\u5bf9\u4e8eangularjs\u8fd9\u4e2a\u6846\u67b6\u90fd\u5b58\u5728\u4e0d\u5c11\u7684\u5dee\u8bc4\u3002\u5f53\u5de5\u4f5c\u7684\u9879\u76ee\u7ec4\u63d0\u4f9b\u91cd\u6784\u60f3\u6cd5\u7684\u65f6\u5019\uff0c\u6211\u9996\u5148\u63d0\u51fa\u4e86\u5f3a\u70c8\u5730\u66ff\u6362\u6846\u67b6\u7684\u60f3\u6cd5\u3002\u751a\u81f3\u4e4e\u8fdeGoogle\u5927\u4f6c\uff0c\u90fd\u76f4\u63a5\u653e\u5f03\u4e86\u4ed6\u7684\u201c\u5148\u5929\u4e0d\u8db3\u201d\u7684angularjs\u513f\u5b50\uff0c\u8f6c\u800c\u751f\u4e86\u4e00\u4e2a\u201c\u66f4\u6709\u624d\u534e\u201d\u7684\u201c\u4e8c\u80ce\u201d\u2014\u2014angular2+\u3002\u867d\u7136\u5b98\u65b9\u5728\u8fc1\u79fb\u6846\u67b6\u4e0a\u82b1\u4e86\u5f88\u5927\u7684\u5fc3\u601d\uff0c\u4f46\u662f\u4e5f\u4e0d\u80fd\u5f25\u8865\u201c\u751f\u6001\u201d\u7684\u7834\u574f\u548c\u65e7\u6846\u67b6\u4f7f\u7528\u8005\u7684\u75db\u82e6\u3002\n\n\n\u5728\u770b\u5230\u522b\u7684\u5927\u4f6c\u4eec\u90fd\u5f00\u59cb\u5199vue\uff0c\u5e76\u4e14\u62e5\u6709\u5148\u8fdb\u7684\u524d\u7aef\u5f00\u53d1\u5de5\u5177\u3001\u5177\u5907\u8d85\u7ea7\u723d\u7684\u5f00\u53d1\u4f53\u9a8c\u4e4b\u540e\uff0c\u611f\u89c9\u975e\u5e38\u843d\u5bde\uff0c\u65e0\u7f18\u4e8e\u8fd9\u4e2a\u7cbe\u5f69\u7684\u524d\u7aef\u53d1\u5c55\u65f6\u4ee3\u3002\n\n\n\n\n\u6211\u7684\u504f\u89c1\uff1a\u56de\u7b54\uff0c\u9009\u62e9\u4f7f\u7528\u54ea\u4e2a\u524d\u7aef\u6846\u67b6\u662f\u5426\u91cd\u8981\uff1f\n\n\n\u7ecf\u8fc7\u4ed4\u7ec6\u601d\u8003\uff0c\u6211\u7684\u56de\u7b54\uff1a\u91cd\u8981\uff01\u975e\u5e38\u91cd\u8981\uff01\u4e0d\u53ef\u5426\u8ba4\u7684\u91cd\u8981\uff01\n\n\n\u6211\u53cd\u5bf9\u7ee7\u7eed\u5728\u56e2\u961f\u63a8\u5e7f\u4f7f\u7528angularjs\uff08angular 1.x\uff09\u7684\u4e3b\u8981\u539f\u56e0\uff1a\n\n\n\n\n\u751f\u6001\u7cfb\u7edf\uff1a\n\n\n\u5148\u8fdb\u7684UI\u6846\u67b6\uff08\u6bd4\u5982antd\uff09\u3001\u6280\u672f\u5bf9angularjs\u7684\u652f\u6301\u7a0b\u5ea6\u8fdc\u4e0d\u53caangular2\u3001react\u3001vue\u7684\u7a0b\u5ea6\uff0c\u6216\u8005\u76f4\u63a5\u5c31\u4e0d\u652f\u6301angularjs\u3002\u96be\u4ee5\u6574\u5408\u5148\u8fdb\u6280\u672f\u3002\n\n\n\u793e\u533a\uff1a\n\u6211\u4eec\u751a\u81f3\u6ca1\u6709\u5f88\u4fbf\u6377\u7684\u529e\u6cd5\uff0c\u4f7f\u7528\u5f00\u6e90\u793e\u533a\u63d0\u4f9b\u7684ant design\u7ec4\u4ef6\u3002angularjs\u51fa\u73b0\u65b0\u7684\u95ee\u9898\uff0c\u6216\u8005\u53d1\u73b0bug\uff0c\u4fee\u590d\u7684\u901f\u5ea6\u4f1a\u8d8a\u6765\u8d8a\u6162\uff0c\u4e14google\u628a\u5927\u90e8\u5206angularjs\u5f00\u53d1\u5168\u90e8\u90fd\u8c03\u8d70\u53bb\u5f00\u53d1angular\n\u3002\u65b0\u7248\u672c\uff0c\u5c4a\u65f6angularjs\u5c06\u8fdb\u5165\u4e3a\u671f4\u5e74\u7684LTS\u3002LTS\u7ed3\u675f\u4e4b\u540e\uff0c\u610f\u5473\u7740angularjs\u7684\u771f\u6b63\u8fc7\u65f6\u3002\u5927\u5bb6\u90fd\u53bb\u641eangular2\uff0cvue\uff0creact\u4e86\uff0cangular\u7684\u5927\u4f6c\u4e00\u76f4\u9080\u8bf7\uff08\u50ac\u4fc3\uff09\u6211\u4eec\u5927\u5bb6\uff0c\u8d76\u7d27\u4e0aangular2\u7684\u8f66\u3002\n\n\n\n\n\n\n\n\n\u4eba\u5458\uff1a\n\n\n\n\n\u5bf9\u4e8e\u524d\u7aef\u56e2\u961f\uff1aAngularJS \u7684\u6d41\u884c\u5ea6\uff0c\u662f\u5426\u80fd\u4fdd\u8bc1\u6211\u4eec\u80fd\u8db3\u591f\u5bb9\u6613\u5730\u62db\u5230\u4f1a AngularJS \u7684\u4eba\uff0c\u613f\u610f\u5199angularjs\u7684\u4eba\uff1f\n\n\n\u5bf9\u4e8e\u975e\u524d\u7aef\u4e13\u4e1a\u56e2\u961f\uff0c\u4f46\u662f\u9700\u8981\u8fdb\u884c\u524d\u7aef\u5f00\u53d1\u7684\uff1aangularjs\u590d\u6742\u7684\u3001over-engineered\u7684\u6982\u5ff5\u662f\u5426\u80fd\u591f\u8ba9\u5927\u90e8\u5206\u4eba\u5458\u8fc5\u901f\u6295\u5165\u5230\u524d\u7aef\u5f00\u53d1\uff08\u8fd8\u8981\u8003\u8651\u4e0d\u65ad\u65b0\u6765\u7684\u4eba\u5458\uff09\uff0c\u5e76\u4e14\u6ee1\u8db3\u4ea7\u54c1\u7684\u5927\u90e8\u5206\u9700\u6c42\uff1f\n\n\n\n\n\n\n\n\n\u6846\u67b6\u81ea\u8eab\u7f3a\u9677\uff1a\n\n\n\n\n\u8c37\u6b4c\u7684\u629b\u5f03\uff1a\u867d\u7136\u76ee\u524dangularjs\uff08angular 1.x\uff09\u4ecd\u7136\u6709\u5728\u7ef4\u62a4\uff0c\u4e3b\u8981\u662fbug\u4fee\u590d\u3002\u5982\u679cangularjs\uff08angular 1.x\uff09\u4e0d\u662f\u6709\u4e25\u91cd\u7f3a\u9677\uff0cgoogle\u7684\u5f00\u53d1\u4eba\u5458\u4e0d\u4f1a\u6beb\u4e0d\u7559\u60c5\u7684\u629b\u5f03\uff0c\u5c06\u6574\u5957\u6846\u67b6\u91cd\u5199\u4e14\u62d2\u7edd\u5411\u524d\u517c\u5bb9\u3002\u6211\u89c9\u5f97\u8c37\u6b4c\u7684angular\u4ea7\u54c1\u6b20\u4e86\u5168\u4e16\u754c\u7a0b\u66fe\u7ecf\u75f4\u8ff7\u8ffd\u6c42angular\u7684\u7a0b\u5e8f\u5458\uff08\u6bd4\u5982\u6211 = =\uff09\n\n\n\u6267\u884c\u6548\u7387\u4f4e\u4e0b\uff0c2000\u4e2awatcher\u4ee5\u4e0a\u5c31\u4f1a\u51fa\u73b0\u660e\u663e\u7684\u5361\u987f\n\n\n\u4e0d\u652f\u6301SSR\n\n\n\u5047\u7684angular.module, \u5168\u90fd\u662f\u5168\u5c40\u7684\u6ce1\u6cab\uff0c\u6839\u672c\u6ca1\u6709\u9694\u79bb\n\n\n\u590d\u6742\u7684\uff0c\u5728\u4e2d\u5c0f\u578b\u5e94\u7528\u4e2d\uff0c\u6839\u672c\u4e0d\u9700\u8981\u7684\u6982\u5ff5\uff1a\n\n\n\u7ec4\u4ef6\u7684\u9690\u5f0f\u5f15\u7528\uff0c\u5728html\u4e2d\u4f7f\u7528\u7684\u7ec4\u4ef6\u4e0d\u9700\u8981\u8fdb\u884c\u4f9d\u8d56\u6ce8\u5165\u6216\u8005\u663e\u5f0f\u5f15\u7528\n\n\nservice\u3001factory\u3001provider \u591a\u4f59\u7684\u6982\u5ff5\uff0c\u5f88\u591a\u65f6\u5019\u7528\u4e0d\u4e0a\n\n\n\u8ba9\u65b0\u4eba\u975e\u5e38\u8ff7\u60d1\u7684 directive\u91cc\u9762\u7684controller\uff0clink\uff0ccompile\u51fd\u6570\n\n\n\n\n\n\n\u4e0e\u5f88\u591a\u65b0\u6280\u672f\u7684\u9694\u9602\uff0c\u5bfc\u81f4\u5f88\u96be\u3001\u6216\u8005\u8bf4\u6211\u4eec\u9700\u8981\u505a\u5f88\u5927\u52aa\u529b\u53bb\u5f15\u5165\u65b0\u6280\u672f\n\n\n\u6a21\u5757\u5316\uff1a\u6700\u86cb\u75bc\u7684\u662fangularjs\u81ea\u5e26\u7684angular.module\u662f\u5751\u4e2d\u4e4b\u738b\n\n\n\n\n\n\n\n\n\n\n\n\n\u4e2a\u4eba\u8ba4\u4e3a\uff0cangularjs\uff08angular 1.x\uff09\uff1a\n\n\n\n\n\u4e0d\u5e94\u8be5\u7ee7\u7eed\u88ab\u63a8\u5e7f\uff0c\u8001\u7cfb\u7edf\u7ee7\u7eed\u8fdb\u884c\u7ef4\u62a4\n\n\n\u65b0\u9879\u76ee\uff0c\u5982cdn\u7684\u524d\u7aef\u9879\u76ee\u4f7f\u7528vue\u4f5c\u4e3a\u5f00\u53d1\u6846\u67b6\u3002\u4f5c\u4e3a\u90e8\u95e8\u524d\u7aef\u5f00\u53d1\u7ecf\u9a8c\u6bd4\u8f83\u591a\u7684\u6211\u4eec\uff0c\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u5e94\u8be5\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u7ed9\u4e88vue\u7684\u76f8\u5173\u652f\u6301\uff0c\u5e76\u4e14\u5f62\u6210\u6280\u672f\u89c4\u8303\u3002\n\n\n\n\n\u53cd\u601d\n\n\n\u6211\u601d\u8003\u7684\u4e00\u4e9b\u95ee\u9898\u3002\n\n\n\n\n\u5957\u7528\u67d0\u5927\u4f6c\u7684\u8bdd\uff1a\u4e00\u4e2a\u4e4b\u524d2015\u7528angular\u5199\u7684\u5e94\u7528\uff0c\u96be\u9053\u57282018\u5c31\u4e0d\u80fd\u8fd0\u884c\uff1f\u2014\u2014 \u5426\n\n\nangularjs\u771f\u7684\u8fd9\u4e48\u5dee\u5417\uff1f\u6211\u771f\u7684\u6df1\u5165\u4e86\u89e3\u4ed6\u5417\uff1f\n\n\n\u6211\u6709\u6ca1\u6709\u529e\u6cd5\u901a\u8fc7\u66f4\u52a0\u6df1\u5165\u4e86\u89e3\u8fd9\u4e2a\u6846\u67b6\uff0c\u4ee5\u53ca\u5176\u5168\u65b0\u7684angular2\uff0c\u4eab\u53d7\u751f\u6001\u7cfb\u7edf\u63d0\u4f9b\u7684\u597d\u5904\n\n\n\u6211\u662f\u5426\u80fd\u591f\u65e0\u7f1d\u5f15\u5165\u73b0\u4ee3\u7684\u524d\u7aef\u5f00\u53d1\u6280\u672f\uff0c\u6bd4\u5982ES6\u3001webpack\u7b49\uff1f\n\n\n\u6211\u80fd\u5426\u5bf9angularjs\u7684\u903b\u8f91\u3001\u6982\u5ff5\u505a\u62bd\u8c61\uff0c\u505a\u5230web\u6846\u67b6\u65e0\u5173\uff1f\n\n\n\n\n\u6211\u8ba4\u4e3a\u80fd\u5728\u5f53\u65f6\u505a\u51fa\u8fd9\u4e2a\u6846\u67b6\uff0c\u5e76\u4e14\u706b\u8d77\u6765\uff0c\u5728\u5176\u4e2d\u5fc5\u5b9a\u6709\u95ea\u8000\u4e4b\u5904\u3002\u6211\u4eec\u4e0d\u80fd\u5e26\u7740\u8fc7\u5206\u7684\u504f\u89c1\u5bf9\u5f85\u6280\u672f\u7684\u53d1\u5c55\u3002\n\n\n\n\n\u5c24\u5927\uff1a\u6211\u4eec\u662f\u7ad9\u5728\u5de8\u4eba\u7684\u80a9\u8180\u4e0a\u7684\n\u6211\uff1aangularjs\u5176\u5b9e\u662f\u5de8\u4eba\u7684\u4e00\u90e8\u5206\n\n\n\n\n\u4e3a\u4ec0\u4e48\u8981\u9605\u8bfbangularjs\u7684\u6e90\u4ee3\u7801\uff1f\n\n\n\u5e26\u7740\u4e0a\u8ff0\u601d\u8003\uff0c\u4e00\u65b9\u9762\u66f4\u52a0\u5b66\u4e60\u4ee3\u7801\u6846\u67b6\u7684\u8bbe\u8ba1\u601d\u60f3\u5b9e\u73b0\u3001\u53e6\u4e00\u65b9\u9762\u66f4\u52a0\u4e86\u89e3\u6846\u67b6\u8003\u8651\u5347\u7ea7\n\n\n\u6211\u6253\u7b97\u600e\u4e48\u9605\u8bfb\u6e90\u4ee3\u7801\uff1f\n\n\n\u8bfb\u61c2\uff1a\u4ece\u6838\u5fc3\u6982\u5ff5\u51fa\u53d1\uff0c\u770b\u5b9e\u73b0\u65b9\u5f0f\u548c\u601d\u60f3\n\n\n\u5728\u9605\u8bfb\u6e90\u4ee3\u7801\u540c\u65f6\uff0c\u6253\u5f00angularjs\u7684api\u6587\u6863\uff0c\u987a\u4fbf\u8fc7\u4e00\u4e0b\u90a3\u4e9b\u590d\u6742\u7684\u6982\u5ff5\u3002\n\n\n\u9605\u8bfb\u65f6\u5019\uff0c\u4e3b\u8981\u5bfb\u627e\u6846\u67b6\u6838\u5fc3\u7684\u4e1c\u897f\u3002\n\n\n\n\nScope\u3001Provider\u7b49\n\n\nangular \u662f\u5982\u4f55\u542f\u52a8\u7684\n\n\n\u53cc\u5411\u6570\u636e\u7ed1\u5b9a\n\n\n\u5982\u4f55\u7f16\u8bd1\u6a21\u677f\n\n\n\u5404\u4e2a\u5e38\u7528\u7684directive\u7684\u5b9e\u73b0\n\n\n\n\n\u611f\u609f\uff1a\u6279\u5224\u5f0f\u5730\u9605\u8bfb\u548c\u53cd\u601d\n\n\n\n\n\u4e3a\u4ec0\u4e48\u7ed9\u7528\u6237\u5982\u6b64\u591a\u7684\u6982\u5ff5\uff0c\u90a3\u4e9b\u6982\u5ff5\u662fover-engineered\u7684\n\n\n\u6027\u80fd\u95ee\u9898\u7684\u6839\u56e0\u8c03\u67e5\uff0c\u5230\u5e95digest\u662f\u600e\u4e48\u5199\u7684\n\n\n\u8bbe\u8ba1\u7684\u63a5\u53e3\u662f\u5426\u5408\u7406\n\n\n\u521b\u65b0\uff1a\u601d\u8003\u5982\u4f55\u7ed3\u5408\u5b9e\u9645\u9879\u76ee\uff0c\u5c06\u8001\u6846\u67b6\u7684angularjs\u8fc1\u79fb\u5230\u65b0\u7684angular\n\n\n\u4ee5\u53ca\u5176\u4ed6\u95ee\u9898\n\n\n\n\nmark \u53c2\u8003\u9605\u8bfb\u7684\u5730\u65b9\n\n\n\n\nangularjs api docs\n\n\n\u8fc1\u79fb\u5230\u65b0\u6280\u672f\uff0c\u589e\u5f3a\u6a21\u5757\u5316\uff1a\nangular1,x \u6c89\u601d\u5f55\uff1aAngularJS\u548cES6\u7684\u7ed3\u5408\n\n\nangular1.x + ES \u98ce\u683c\u6307\u5357\n\n\n\u5173\u4e8eangular2 \u7684\u4e00\u5207\n\n\nangular1.x \u6c89\u601d\u5f55: \u6a21\u5757\u673a\u5236\n\n\nThe Problem of Angular", 
            "title": "AngularJS\u6e90\u4ee3\u7801\u9605\u8bfb(1) \u2014\u2014 angularjs \u6c89\u601d"
        }, 
        {
            "location": "/posts/front-end/angular/AngularJS\u6e90\u4ee3\u7801\u9605\u8bfb(1)/#angularjs1_angularjs", 
            "text": "", 
            "title": "AngularJS\u6e90\u4ee3\u7801\u9605\u8bfb(1) angularjs \u6c89\u601d"
        }, 
        {
            "location": "/posts/front-end/angular/AngularJS\u6e90\u4ee3\u7801\u9605\u8bfb(1)/#_1", 
            "text": "\u7531\u4e8e\u56e2\u961f\u524d\u540e\u7aef\u5206\u79bb\u9009\u578b\u6bd4\u8f83\u65e9\uff0c\u5de5\u4f5c\u4e2d\u4e00\u76f4\u4f7f\u7528Angularjs\u8fdb\u884cweb\u524d\u7aef\u5f00\u53d1\u3002\u5728Angularjs\u4e00\u51fa\u6765\u7684\u65f6\u4ee3\uff0c\u662f\u7ea2\u6781\u4e00\u65f6\u7684\u660e\u661f\u6846\u67b6\u3002\u4ed6\u5f00\u521b\u4e86\u524d\u7aef\u4e00\u4e2a\u65b0\u7684\u65f6\u4ee3\u3002\u5bf9\u6bd4\u56e2\u961f\u5728\u4e4b\u524d\u4f7f\u7528Jquery+Bootstrap\u7684\u5e74\u4ee3\u65f6\u5019\u7684\u5f00\u53d1\u6280\u672f\uff0cAngularjs\u8ba9\u56e2\u961f\u7684\u5f00\u53d1\u6548\u7387\u5927\u5927\u63d0\u9ad8\u3002  \u5728Angularjs\u6781\u76db\u4e00\u65f6\u7684\u5e74\u4ee3\uff0c\u5bf9\u4e8eSPA(single page application)\u9996\u9009\u7684\u6846\u67b6\u5c31\u662fangularjs\u3002\u5f53\u4f60\u8fd8\u5728\u5199JQuery\u7684\u65f6\u5019\uff0c\u4e3a\u5404\u79cddom\u64cd\u4f5c\u82e6\u607c\u7684\u65f6\u5019\uff0cAngularjs\u7684helloworld\u4f8b\u5b50\u4f1a\u8ba9\u4f60\u773c\u524d\u4e00\u4eae\u3002\u7d27\u63a5\u7740\uff0c\u53cc\u5411\u6570\u636e\u7ed1\u5b9a\u3001\u89c6\u56fe\u548c\u6570\u636e\u6a21\u578b\u81ea\u52a8\u66f4\u65b0\u3001\u4f9d\u8d56\u6ce8\u5165\u3001\u670d\u52a1\u5316\u4ee5\u53ca\u6700\u8ba9\u4eba\u5fc3\u52a8\u7684\u6307\u4ee4\uff08directive\uff09\u90fd\u8ba9\u4eba\u6026\u7136\u5fc3\u52a8\uff0c\u91cd\u65b0\u8ba4\u8bc6\u524d\u7aef\u5f00\u53d1\u3002", 
            "title": "\u524d\u8a00"
        }, 
        {
            "location": "/posts/front-end/angular/AngularJS\u6e90\u4ee3\u7801\u9605\u8bfb(1)/#_2", 
            "text": "\u4eca\u5929\uff0c\u662f2018\u5e743\u670817\u65e5\u3002\u4eceangularjs\u5f00\u53d1\u5230\u73b0\u5728\u5df2\u7ecf8\u5e74\u591a\u4e86\u3002\u5728\u8fd9\u671f\u95f4\uff0c\u7279\u522b\u662f\u6700\u8fd1\uff0c\u524d\u7aef\u754c\u7684\u53d1\u5c55\u53ef\u8c13\u662f\u6c79\u6d8c\u6f8e\u6e43\u3001\u65e5\u65b0\u6708\u5f02\u3002\u76ee\u524d\u6211\u4eec\u65e5\u5e38\u542c\u5230\u7684\u6846\u67b6\u6709\u4ee5\u4e0b\u51e0\u4e2a:    React  Vue  Anuglar   \u5bf9\u4e8e\u8fd9\u4e9b\u6846\u67b6\u7684\u8bc4\u4ef7\uff0c\u5728\u793e\u533a\u4e2d\u6709\u5f88\u591a\u5404\u79cd\u5404\u6837\u7684\u8bf4\u6cd5\u3002\u4e5f\u6709\u4e0d\u5c11\u5546\u4e1a\u4e92\u55b7\u7684\uff0c\u5f20\u53e3\u5c31\u8bf4\u6284\u88ad\u6211\u7684\u4e4b\u7c7b\u7684\u3002\u800c\u5bf9\u4e8eangularjs\u8fd9\u4e2a\u6846\u67b6\uff0c\u5219\u662f\u4e00\u4e2a\u9971\u53d7\u4eba\u4eec\u8bdf\u75c5\u7684\u3001\u88ab\u6279\u8bc4\u6700\u591a\u7684\u4ee5\u53ca\u201c\u88ab\u629b\u5f03\u201d\u7684\u524d\u7aef\u6846\u67b6\u3002", 
            "title": "\u65f6\u4ee3\u6d6a\u6f6e"
        }, 
        {
            "location": "/posts/front-end/angular/AngularJS\u6e90\u4ee3\u7801\u9605\u8bfb(1)/#_3", 
            "text": "\u63a5\u89e6\u8fc7\u4e00\u4e9b\u524d\u7aef\u7684\u4ece\u4e1a\u8005\u3001\u6216\u8005\u662f\u793e\u533a\u4eba\u5458\u5305\u62ec\u6211\u81ea\u8eab\u5728\u5185\uff0c\u5bf9\u4e8eangularjs\u8fd9\u4e2a\u6846\u67b6\u90fd\u5b58\u5728\u4e0d\u5c11\u7684\u5dee\u8bc4\u3002\u5f53\u5de5\u4f5c\u7684\u9879\u76ee\u7ec4\u63d0\u4f9b\u91cd\u6784\u60f3\u6cd5\u7684\u65f6\u5019\uff0c\u6211\u9996\u5148\u63d0\u51fa\u4e86\u5f3a\u70c8\u5730\u66ff\u6362\u6846\u67b6\u7684\u60f3\u6cd5\u3002\u751a\u81f3\u4e4e\u8fdeGoogle\u5927\u4f6c\uff0c\u90fd\u76f4\u63a5\u653e\u5f03\u4e86\u4ed6\u7684\u201c\u5148\u5929\u4e0d\u8db3\u201d\u7684angularjs\u513f\u5b50\uff0c\u8f6c\u800c\u751f\u4e86\u4e00\u4e2a\u201c\u66f4\u6709\u624d\u534e\u201d\u7684\u201c\u4e8c\u80ce\u201d\u2014\u2014angular2+\u3002\u867d\u7136\u5b98\u65b9\u5728\u8fc1\u79fb\u6846\u67b6\u4e0a\u82b1\u4e86\u5f88\u5927\u7684\u5fc3\u601d\uff0c\u4f46\u662f\u4e5f\u4e0d\u80fd\u5f25\u8865\u201c\u751f\u6001\u201d\u7684\u7834\u574f\u548c\u65e7\u6846\u67b6\u4f7f\u7528\u8005\u7684\u75db\u82e6\u3002  \u5728\u770b\u5230\u522b\u7684\u5927\u4f6c\u4eec\u90fd\u5f00\u59cb\u5199vue\uff0c\u5e76\u4e14\u62e5\u6709\u5148\u8fdb\u7684\u524d\u7aef\u5f00\u53d1\u5de5\u5177\u3001\u5177\u5907\u8d85\u7ea7\u723d\u7684\u5f00\u53d1\u4f53\u9a8c\u4e4b\u540e\uff0c\u611f\u89c9\u975e\u5e38\u843d\u5bde\uff0c\u65e0\u7f18\u4e8e\u8fd9\u4e2a\u7cbe\u5f69\u7684\u524d\u7aef\u53d1\u5c55\u65f6\u4ee3\u3002", 
            "title": "\u504f\u89c1"
        }, 
        {
            "location": "/posts/front-end/angular/AngularJS\u6e90\u4ee3\u7801\u9605\u8bfb(1)/#_4", 
            "text": "\u7ecf\u8fc7\u4ed4\u7ec6\u601d\u8003\uff0c\u6211\u7684\u56de\u7b54\uff1a\u91cd\u8981\uff01\u975e\u5e38\u91cd\u8981\uff01\u4e0d\u53ef\u5426\u8ba4\u7684\u91cd\u8981\uff01  \u6211\u53cd\u5bf9\u7ee7\u7eed\u5728\u56e2\u961f\u63a8\u5e7f\u4f7f\u7528angularjs\uff08angular 1.x\uff09\u7684\u4e3b\u8981\u539f\u56e0\uff1a   \u751f\u6001\u7cfb\u7edf\uff1a  \u5148\u8fdb\u7684UI\u6846\u67b6\uff08\u6bd4\u5982antd\uff09\u3001\u6280\u672f\u5bf9angularjs\u7684\u652f\u6301\u7a0b\u5ea6\u8fdc\u4e0d\u53caangular2\u3001react\u3001vue\u7684\u7a0b\u5ea6\uff0c\u6216\u8005\u76f4\u63a5\u5c31\u4e0d\u652f\u6301angularjs\u3002\u96be\u4ee5\u6574\u5408\u5148\u8fdb\u6280\u672f\u3002  \u793e\u533a\uff1a \u6211\u4eec\u751a\u81f3\u6ca1\u6709\u5f88\u4fbf\u6377\u7684\u529e\u6cd5\uff0c\u4f7f\u7528\u5f00\u6e90\u793e\u533a\u63d0\u4f9b\u7684ant design\u7ec4\u4ef6\u3002angularjs\u51fa\u73b0\u65b0\u7684\u95ee\u9898\uff0c\u6216\u8005\u53d1\u73b0bug\uff0c\u4fee\u590d\u7684\u901f\u5ea6\u4f1a\u8d8a\u6765\u8d8a\u6162\uff0c\u4e14google\u628a\u5927\u90e8\u5206angularjs\u5f00\u53d1\u5168\u90e8\u90fd\u8c03\u8d70\u53bb\u5f00\u53d1angular \u3002\u65b0\u7248\u672c\uff0c\u5c4a\u65f6angularjs\u5c06\u8fdb\u5165\u4e3a\u671f4\u5e74\u7684LTS\u3002LTS\u7ed3\u675f\u4e4b\u540e\uff0c\u610f\u5473\u7740angularjs\u7684\u771f\u6b63\u8fc7\u65f6\u3002\u5927\u5bb6\u90fd\u53bb\u641eangular2\uff0cvue\uff0creact\u4e86\uff0cangular\u7684\u5927\u4f6c\u4e00\u76f4\u9080\u8bf7\uff08\u50ac\u4fc3\uff09\u6211\u4eec\u5927\u5bb6\uff0c\u8d76\u7d27\u4e0aangular2\u7684\u8f66\u3002     \u4eba\u5458\uff1a   \u5bf9\u4e8e\u524d\u7aef\u56e2\u961f\uff1aAngularJS \u7684\u6d41\u884c\u5ea6\uff0c\u662f\u5426\u80fd\u4fdd\u8bc1\u6211\u4eec\u80fd\u8db3\u591f\u5bb9\u6613\u5730\u62db\u5230\u4f1a AngularJS \u7684\u4eba\uff0c\u613f\u610f\u5199angularjs\u7684\u4eba\uff1f  \u5bf9\u4e8e\u975e\u524d\u7aef\u4e13\u4e1a\u56e2\u961f\uff0c\u4f46\u662f\u9700\u8981\u8fdb\u884c\u524d\u7aef\u5f00\u53d1\u7684\uff1aangularjs\u590d\u6742\u7684\u3001over-engineered\u7684\u6982\u5ff5\u662f\u5426\u80fd\u591f\u8ba9\u5927\u90e8\u5206\u4eba\u5458\u8fc5\u901f\u6295\u5165\u5230\u524d\u7aef\u5f00\u53d1\uff08\u8fd8\u8981\u8003\u8651\u4e0d\u65ad\u65b0\u6765\u7684\u4eba\u5458\uff09\uff0c\u5e76\u4e14\u6ee1\u8db3\u4ea7\u54c1\u7684\u5927\u90e8\u5206\u9700\u6c42\uff1f     \u6846\u67b6\u81ea\u8eab\u7f3a\u9677\uff1a   \u8c37\u6b4c\u7684\u629b\u5f03\uff1a\u867d\u7136\u76ee\u524dangularjs\uff08angular 1.x\uff09\u4ecd\u7136\u6709\u5728\u7ef4\u62a4\uff0c\u4e3b\u8981\u662fbug\u4fee\u590d\u3002\u5982\u679cangularjs\uff08angular 1.x\uff09\u4e0d\u662f\u6709\u4e25\u91cd\u7f3a\u9677\uff0cgoogle\u7684\u5f00\u53d1\u4eba\u5458\u4e0d\u4f1a\u6beb\u4e0d\u7559\u60c5\u7684\u629b\u5f03\uff0c\u5c06\u6574\u5957\u6846\u67b6\u91cd\u5199\u4e14\u62d2\u7edd\u5411\u524d\u517c\u5bb9\u3002\u6211\u89c9\u5f97\u8c37\u6b4c\u7684angular\u4ea7\u54c1\u6b20\u4e86\u5168\u4e16\u754c\u7a0b\u66fe\u7ecf\u75f4\u8ff7\u8ffd\u6c42angular\u7684\u7a0b\u5e8f\u5458\uff08\u6bd4\u5982\u6211 = =\uff09  \u6267\u884c\u6548\u7387\u4f4e\u4e0b\uff0c2000\u4e2awatcher\u4ee5\u4e0a\u5c31\u4f1a\u51fa\u73b0\u660e\u663e\u7684\u5361\u987f  \u4e0d\u652f\u6301SSR  \u5047\u7684angular.module, \u5168\u90fd\u662f\u5168\u5c40\u7684\u6ce1\u6cab\uff0c\u6839\u672c\u6ca1\u6709\u9694\u79bb  \u590d\u6742\u7684\uff0c\u5728\u4e2d\u5c0f\u578b\u5e94\u7528\u4e2d\uff0c\u6839\u672c\u4e0d\u9700\u8981\u7684\u6982\u5ff5\uff1a  \u7ec4\u4ef6\u7684\u9690\u5f0f\u5f15\u7528\uff0c\u5728html\u4e2d\u4f7f\u7528\u7684\u7ec4\u4ef6\u4e0d\u9700\u8981\u8fdb\u884c\u4f9d\u8d56\u6ce8\u5165\u6216\u8005\u663e\u5f0f\u5f15\u7528  service\u3001factory\u3001provider \u591a\u4f59\u7684\u6982\u5ff5\uff0c\u5f88\u591a\u65f6\u5019\u7528\u4e0d\u4e0a  \u8ba9\u65b0\u4eba\u975e\u5e38\u8ff7\u60d1\u7684 directive\u91cc\u9762\u7684controller\uff0clink\uff0ccompile\u51fd\u6570    \u4e0e\u5f88\u591a\u65b0\u6280\u672f\u7684\u9694\u9602\uff0c\u5bfc\u81f4\u5f88\u96be\u3001\u6216\u8005\u8bf4\u6211\u4eec\u9700\u8981\u505a\u5f88\u5927\u52aa\u529b\u53bb\u5f15\u5165\u65b0\u6280\u672f  \u6a21\u5757\u5316\uff1a\u6700\u86cb\u75bc\u7684\u662fangularjs\u81ea\u5e26\u7684angular.module\u662f\u5751\u4e2d\u4e4b\u738b       \u4e2a\u4eba\u8ba4\u4e3a\uff0cangularjs\uff08angular 1.x\uff09\uff1a   \u4e0d\u5e94\u8be5\u7ee7\u7eed\u88ab\u63a8\u5e7f\uff0c\u8001\u7cfb\u7edf\u7ee7\u7eed\u8fdb\u884c\u7ef4\u62a4  \u65b0\u9879\u76ee\uff0c\u5982cdn\u7684\u524d\u7aef\u9879\u76ee\u4f7f\u7528vue\u4f5c\u4e3a\u5f00\u53d1\u6846\u67b6\u3002\u4f5c\u4e3a\u90e8\u95e8\u524d\u7aef\u5f00\u53d1\u7ecf\u9a8c\u6bd4\u8f83\u591a\u7684\u6211\u4eec\uff0c\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u5e94\u8be5\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u7ed9\u4e88vue\u7684\u76f8\u5173\u652f\u6301\uff0c\u5e76\u4e14\u5f62\u6210\u6280\u672f\u89c4\u8303\u3002", 
            "title": "\u6211\u7684\u504f\u89c1\uff1a\u56de\u7b54\uff0c\u9009\u62e9\u4f7f\u7528\u54ea\u4e2a\u524d\u7aef\u6846\u67b6\u662f\u5426\u91cd\u8981\uff1f"
        }, 
        {
            "location": "/posts/front-end/angular/AngularJS\u6e90\u4ee3\u7801\u9605\u8bfb(1)/#_5", 
            "text": "\u6211\u601d\u8003\u7684\u4e00\u4e9b\u95ee\u9898\u3002   \u5957\u7528\u67d0\u5927\u4f6c\u7684\u8bdd\uff1a\u4e00\u4e2a\u4e4b\u524d2015\u7528angular\u5199\u7684\u5e94\u7528\uff0c\u96be\u9053\u57282018\u5c31\u4e0d\u80fd\u8fd0\u884c\uff1f\u2014\u2014 \u5426  angularjs\u771f\u7684\u8fd9\u4e48\u5dee\u5417\uff1f\u6211\u771f\u7684\u6df1\u5165\u4e86\u89e3\u4ed6\u5417\uff1f  \u6211\u6709\u6ca1\u6709\u529e\u6cd5\u901a\u8fc7\u66f4\u52a0\u6df1\u5165\u4e86\u89e3\u8fd9\u4e2a\u6846\u67b6\uff0c\u4ee5\u53ca\u5176\u5168\u65b0\u7684angular2\uff0c\u4eab\u53d7\u751f\u6001\u7cfb\u7edf\u63d0\u4f9b\u7684\u597d\u5904  \u6211\u662f\u5426\u80fd\u591f\u65e0\u7f1d\u5f15\u5165\u73b0\u4ee3\u7684\u524d\u7aef\u5f00\u53d1\u6280\u672f\uff0c\u6bd4\u5982ES6\u3001webpack\u7b49\uff1f  \u6211\u80fd\u5426\u5bf9angularjs\u7684\u903b\u8f91\u3001\u6982\u5ff5\u505a\u62bd\u8c61\uff0c\u505a\u5230web\u6846\u67b6\u65e0\u5173\uff1f   \u6211\u8ba4\u4e3a\u80fd\u5728\u5f53\u65f6\u505a\u51fa\u8fd9\u4e2a\u6846\u67b6\uff0c\u5e76\u4e14\u706b\u8d77\u6765\uff0c\u5728\u5176\u4e2d\u5fc5\u5b9a\u6709\u95ea\u8000\u4e4b\u5904\u3002\u6211\u4eec\u4e0d\u80fd\u5e26\u7740\u8fc7\u5206\u7684\u504f\u89c1\u5bf9\u5f85\u6280\u672f\u7684\u53d1\u5c55\u3002   \u5c24\u5927\uff1a\u6211\u4eec\u662f\u7ad9\u5728\u5de8\u4eba\u7684\u80a9\u8180\u4e0a\u7684\n\u6211\uff1aangularjs\u5176\u5b9e\u662f\u5de8\u4eba\u7684\u4e00\u90e8\u5206", 
            "title": "\u53cd\u601d"
        }, 
        {
            "location": "/posts/front-end/angular/AngularJS\u6e90\u4ee3\u7801\u9605\u8bfb(1)/#angularjs", 
            "text": "\u5e26\u7740\u4e0a\u8ff0\u601d\u8003\uff0c\u4e00\u65b9\u9762\u66f4\u52a0\u5b66\u4e60\u4ee3\u7801\u6846\u67b6\u7684\u8bbe\u8ba1\u601d\u60f3\u5b9e\u73b0\u3001\u53e6\u4e00\u65b9\u9762\u66f4\u52a0\u4e86\u89e3\u6846\u67b6\u8003\u8651\u5347\u7ea7", 
            "title": "\u4e3a\u4ec0\u4e48\u8981\u9605\u8bfbangularjs\u7684\u6e90\u4ee3\u7801\uff1f"
        }, 
        {
            "location": "/posts/front-end/angular/AngularJS\u6e90\u4ee3\u7801\u9605\u8bfb(1)/#_6", 
            "text": "", 
            "title": "\u6211\u6253\u7b97\u600e\u4e48\u9605\u8bfb\u6e90\u4ee3\u7801\uff1f"
        }, 
        {
            "location": "/posts/front-end/angular/AngularJS\u6e90\u4ee3\u7801\u9605\u8bfb(1)/#_7", 
            "text": "\u5728\u9605\u8bfb\u6e90\u4ee3\u7801\u540c\u65f6\uff0c\u6253\u5f00angularjs\u7684api\u6587\u6863\uff0c\u987a\u4fbf\u8fc7\u4e00\u4e0b\u90a3\u4e9b\u590d\u6742\u7684\u6982\u5ff5\u3002  \u9605\u8bfb\u65f6\u5019\uff0c\u4e3b\u8981\u5bfb\u627e\u6846\u67b6\u6838\u5fc3\u7684\u4e1c\u897f\u3002   Scope\u3001Provider\u7b49  angular \u662f\u5982\u4f55\u542f\u52a8\u7684  \u53cc\u5411\u6570\u636e\u7ed1\u5b9a  \u5982\u4f55\u7f16\u8bd1\u6a21\u677f  \u5404\u4e2a\u5e38\u7528\u7684directive\u7684\u5b9e\u73b0", 
            "title": "\u8bfb\u61c2\uff1a\u4ece\u6838\u5fc3\u6982\u5ff5\u51fa\u53d1\uff0c\u770b\u5b9e\u73b0\u65b9\u5f0f\u548c\u601d\u60f3"
        }, 
        {
            "location": "/posts/front-end/angular/AngularJS\u6e90\u4ee3\u7801\u9605\u8bfb(1)/#_8", 
            "text": "\u4e3a\u4ec0\u4e48\u7ed9\u7528\u6237\u5982\u6b64\u591a\u7684\u6982\u5ff5\uff0c\u90a3\u4e9b\u6982\u5ff5\u662fover-engineered\u7684  \u6027\u80fd\u95ee\u9898\u7684\u6839\u56e0\u8c03\u67e5\uff0c\u5230\u5e95digest\u662f\u600e\u4e48\u5199\u7684  \u8bbe\u8ba1\u7684\u63a5\u53e3\u662f\u5426\u5408\u7406  \u521b\u65b0\uff1a\u601d\u8003\u5982\u4f55\u7ed3\u5408\u5b9e\u9645\u9879\u76ee\uff0c\u5c06\u8001\u6846\u67b6\u7684angularjs\u8fc1\u79fb\u5230\u65b0\u7684angular  \u4ee5\u53ca\u5176\u4ed6\u95ee\u9898", 
            "title": "\u611f\u609f\uff1a\u6279\u5224\u5f0f\u5730\u9605\u8bfb\u548c\u53cd\u601d"
        }, 
        {
            "location": "/posts/front-end/angular/AngularJS\u6e90\u4ee3\u7801\u9605\u8bfb(1)/#mark", 
            "text": "angularjs api docs  \u8fc1\u79fb\u5230\u65b0\u6280\u672f\uff0c\u589e\u5f3a\u6a21\u5757\u5316\uff1a angular1,x \u6c89\u601d\u5f55\uff1aAngularJS\u548cES6\u7684\u7ed3\u5408  angular1.x + ES \u98ce\u683c\u6307\u5357  \u5173\u4e8eangular2 \u7684\u4e00\u5207  angular1.x \u6c89\u601d\u5f55: \u6a21\u5757\u673a\u5236  The Problem of Angular", 
            "title": "mark \u53c2\u8003\u9605\u8bfb\u7684\u5730\u65b9"
        }, 
        {
            "location": "/posts/front-end/angular/AngularJS\u6e90\u4ee3\u7801\u9605\u8bfb(2)/", 
            "text": "AngularJS\u6e90\u4ee3\u7801\u9605\u8bfb(2) \u9879\u76ee\u7ed3\u6784\n\n\n\n\n\u57fa\u672c\u4fe1\u606f\n\n\n\n\n\u9879\u76ee\u5730\u5740\uff1a\nhttps://github.com/angular/angular.js\n\n\n\u6700\u65b0\u7248\u672c\uff1a1.6.9\n\n\n\n\n\u76ee\u5f55\u7ed3\u6784\n\n\n\u251c\u2500benchmarks                # \u538b\u529b\u6d4b\u8bd5\u6307\u6807\u76f8\u5173\n\u251c\u2500css\n\u251c\u2500docs                      # \u6587\u6863\n\u251c\u2500i18n                      # i18n\u76f8\u5173\n\u251c\u2500logs\n\u251c\u2500scripts                   # \u9879\u76ee\u811a\u672c\n\u251c\u2500test                      # \u6d4b\u8bd5\u76f8\u5173\n\u251c\u2500src                       # \u6e90\u4ee3\u7801\n\u2502  \u2502  .eslintrc.json        # eslint \u4ee3\u7801\u98ce\u683c\u63a7\u5236\n\u2502  \u2502  angular.bind.js       # bind jqlite\n\u2502  \u2502  Angular.js            # window.angular \u7684\u7528\u6237\u63a5\u53e3\n\u2502  \u2502  angular.prefix\n\u2502  \u2502  angular.suffix\n\u2502  \u2502  AngularPublic.js      # \u5c06angular\u7684\u63a5\u53e3\u66b4\u9732\n\u2502  \u2502  apis.js\n\u2502  \u2502  jqLite.js\n\u2502  \u2502  loader.js             # angular.module\u5728\u8fd9\u91cc\u5b9a\u4e49\uff0c\u51fd\u6570\u662fsetupModuleLoader\n\u2502  \u2502  loader.prefix\n\u2502  \u2502  loader.suffix\n\u2502  \u2502  minErr.js             # \u9519\u8bef\u5904\u7406\uff0c\u5728angularjs\u51fa\u9519\u65f6\u5019\u53ef\u4ee5\u63d0\u4f9b\u4e30\u5bcc\u7684\u9519\u8bef\u4fe1\u606f\n\u2502  \u2502  module.prefix\n\u2502  \u2502  module.suffix\n\u2502  \u2502  publishExternalApis.js\n\u2502  \u2502  shallowCopy.js\n\u2502  \u2502  stringify.js\n\u2502  \u2502\n\u2502  \u251c\u2500auto\n\u2502  \u2502      injector.js       # \u6838\u5fc3\uff0cangular\u4f9d\u8d56\u6ce8\u5165\u7ba1\u7406\uff0cprovider\n\u2502  \u2502\n\u2502  \u251c\u2500ng\n\u2502  \u2502  \u2502  anchorScroll.js\n\u2502  \u2502  \u2502  animate.js\n\u2502  \u2502  \u2502  animateCss.js\n\u2502  \u2502  \u2502  animateRunner.js\n\u2502  \u2502  \u2502  browser.js\n\u2502  \u2502  \u2502  cacheFactory.js\n\u2502  \u2502  \u2502  compile.js             # \u6838\u5fc3\uff0ccompile\u5b9e\u73b0\n\u2502  \u2502  \u2502  controller.js          # \u6838\u5fc3\uff0ccontroller\u5b9e\u73b0\uff0c\u867d\u7136\u4ee3\u7801\u975e\u5e38\u77ed\n\u2502  \u2502  \u2502  cookieReader.js\n\u2502  \u2502  \u2502  document.js\n\u2502  \u2502  \u2502  exceptionHandler.js\n\u2502  \u2502  \u2502  filter.js\n\u2502  \u2502  \u2502  forceReflow.js\n\u2502  \u2502  \u2502  http.js\n\u2502  \u2502  \u2502  httpBackend.js\n\u2502  \u2502  \u2502  interpolate.js\n\u2502  \u2502  \u2502  interval.js\n\u2502  \u2502  \u2502  jsonpCallbacks.js\n\u2502  \u2502  \u2502  locale.js\n\u2502  \u2502  \u2502  location.js\n\u2502  \u2502  \u2502  log.js\n\u2502  \u2502  \u2502  parse.js\n\u2502  \u2502  \u2502  q.js                   # \u6838\u5fc3\uff0cangular\u5f02\u6b65\u5e93\n\u2502  \u2502  \u2502  raf.js\n\u2502  \u2502  \u2502  rootElement.js\n\u2502  \u2502  \u2502  rootScope.js           # \u6838\u5fc3\uff0cScope\u5b9e\u73b0\n\u2502  \u2502  \u2502  sanitizeUri.js\n\u2502  \u2502  \u2502  sce.js\n\u2502  \u2502  \u2502  sniffer.js\n\u2502  \u2502  \u2502  templateRequest.js\n\u2502  \u2502  \u2502  testability.js\n\u2502  \u2502  \u2502  timeout.js\n\u2502  \u2502  \u2502  urlUtils.js\n\u2502  \u2502  \u2502  window.js\n\u2502  \u2502  \u2502\n\u2502  \u2502  \u251c\u2500directive\n\u2502  \u2502  \u2502      a.js\n\u2502  \u2502  \u2502      attrs.js\n\u2502  \u2502  \u2502      directives.js\n\u2502  \u2502  \u2502      form.js\n\u2502  \u2502  \u2502      input.js\n\u2502  \u2502  \u2502      ngBind.js\n\u2502  \u2502  \u2502      ngChange.js\n\u2502  \u2502  \u2502      ngClass.js\n\u2502  \u2502  \u2502      ngCloak.js\n\u2502  \u2502  \u2502      ngController.js        # \u6838\u5fc3\uff0c\u5e38\u7528angular\u6307\u4ee4\n\u2502  \u2502  \u2502      ngCsp.js\n\u2502  \u2502  \u2502      ngEventDirs.js\n\u2502  \u2502  \u2502      ngIf.js                # \u6838\u5fc3\uff0c\u5e38\u7528anuglar\u6307\u4ee4\n\u2502  \u2502  \u2502      ngInclude.js\n\u2502  \u2502  \u2502      ngInit.js\n\u2502  \u2502  \u2502      ngList.js\n\u2502  \u2502  \u2502      ngModel.js             # \u6838\u5fc3\uff0c\u5e38\u7528angular\u6307\u4ee4\uff0c\u53cc\u5411\u6570\u636e\u7ed1\u5b9a\n\u2502  \u2502  \u2502      ngModelOptions.js\n\u2502  \u2502  \u2502      ngNonBindable.js\n\u2502  \u2502  \u2502      ngOptions.js\n\u2502  \u2502  \u2502      ngPluralize.js\n\u2502  \u2502  \u2502      ngRepeat.js            # \u6838\u5fc3\uff0c\u5e38\u7528anuglar\u6307\u4ee4\n\u2502  \u2502  \u2502      ngShowHide.js\n\u2502  \u2502  \u2502      ngStyle.js\n\u2502  \u2502  \u2502      ngSwitch.js\n\u2502  \u2502  \u2502      ngTransclude.js\n\u2502  \u2502  \u2502      script.js\n\u2502  \u2502  \u2502      select.js\n\u2502  \u2502  \u2502      validators.js\n\u2502  \u2502  \u2502\n\u2502  \u2502  \u2514\u2500filter\n\u2502  \u2502          filter.js\n\u2502  \u2502          filters.js\n\u2502  \u2502          limitTo.js\n\u2502  \u2502          orderBy.js\n\u2502  \u2502\n\u2502  \u251c\u2500ngAnimate\n\u2502  \u2502      .eslintrc.json\n\u2502  \u2502      animateChildrenDirective.js\n\u2502  \u2502      animateCss.js\n\u2502  \u2502      animateCssDriver.js\n\u2502  \u2502      animateJs.js\n\u2502  \u2502      animateJsDriver.js\n\u2502  \u2502      animateQueue.js\n\u2502  \u2502      animation.js\n\u2502  \u2502      module.js\n\u2502  \u2502      ngAnimateSwap.js\n\u2502  \u2502      rafScheduler.js\n\u2502  \u2502      shared.js\n\u2502  \u2502\n\u2502  \u251c\u2500ngAria\n\u2502  \u2502      aria.js\n\u2502  \u2502\n\u2502  \u251c\u2500ngComponentRouter\n\u2502  \u2502      Router.js\n\u2502  \u2502\n\u2502  \u251c\u2500ngCookies\n\u2502  \u2502      cookies.js\n\u2502  \u2502      cookieWriter.js\n\u2502  \u2502\n\u2502  \u251c\u2500ngLocale\n\u2502  \u2502\n\u2502  \u251c\u2500ngMessageFormat\n\u2502  \u2502      .eslintrc.json\n\u2502  \u2502      messageFormatCommon.js\n\u2502  \u2502      messageFormatInterpolationParts.js\n\u2502  \u2502      messageFormatParser.js\n\u2502  \u2502      messageFormatSelector.js\n\u2502  \u2502      messageFormatService.js\n\u2502  \u2502\n\u2502  \u251c\u2500ngMessages\n\u2502  \u2502      messages.js\n\u2502  \u2502\n\u2502  \u251c\u2500ngMock\n\u2502  \u2502      .eslintrc.json\n\u2502  \u2502      angular-mocks.js\n\u2502  \u2502      browserTrigger.js\n\u2502  \u2502\n\u2502  \u251c\u2500ngParseExt\n\u2502  \u2502      module.js\n\u2502  \u2502      ucd.js\n\u2502  \u2502\n\u2502  \u251c\u2500ngResource\n\u2502  \u2502      resource.js\n\u2502  \u2502\n\u2502  \u251c\u2500ngRoute\n\u2502  \u2502  \u2502  .eslintrc.json\n\u2502  \u2502  \u2502  route.js\n\u2502  \u2502  \u2502  routeParams.js\n\u2502  \u2502  \u2502\n\u2502  \u2502  \u2514\u2500directive\n\u2502  \u2502          ngView.js\n\u2502  \u2502\n\u2502  \u251c\u2500ngSanitize\n\u2502  \u2502  \u2502  .eslintrc.json\n\u2502  \u2502  \u2502  sanitize.js\n\u2502  \u2502  \u2502\n\u2502  \u2502  \u2514\u2500filter\n\u2502  \u2502          linky.js\n\u2502  \u2502\n\u2502  \u2514\u2500ngTouch\n\u2502      \u2502  .eslintrc.json\n\u2502      \u2502  swipe.js\n\u2502      \u2502  touch.js\n\u2502      \u2502\n\u2502      \u2514\u2500directive\n\u2502              ngSwipe.js\n\u2502", 
            "title": "AngularJS\u6e90\u4ee3\u7801\u9605\u8bfb(2) \u2014\u2014 \u9879\u76ee\u7ed3\u6784"
        }, 
        {
            "location": "/posts/front-end/angular/AngularJS\u6e90\u4ee3\u7801\u9605\u8bfb(2)/#angularjs2", 
            "text": "", 
            "title": "AngularJS\u6e90\u4ee3\u7801\u9605\u8bfb(2) \u9879\u76ee\u7ed3\u6784"
        }, 
        {
            "location": "/posts/front-end/angular/AngularJS\u6e90\u4ee3\u7801\u9605\u8bfb(2)/#_1", 
            "text": "\u9879\u76ee\u5730\u5740\uff1a https://github.com/angular/angular.js  \u6700\u65b0\u7248\u672c\uff1a1.6.9", 
            "title": "\u57fa\u672c\u4fe1\u606f"
        }, 
        {
            "location": "/posts/front-end/angular/AngularJS\u6e90\u4ee3\u7801\u9605\u8bfb(2)/#_2", 
            "text": "\u251c\u2500benchmarks                # \u538b\u529b\u6d4b\u8bd5\u6307\u6807\u76f8\u5173\n\u251c\u2500css\n\u251c\u2500docs                      # \u6587\u6863\n\u251c\u2500i18n                      # i18n\u76f8\u5173\n\u251c\u2500logs\n\u251c\u2500scripts                   # \u9879\u76ee\u811a\u672c\n\u251c\u2500test                      # \u6d4b\u8bd5\u76f8\u5173\n\u251c\u2500src                       # \u6e90\u4ee3\u7801\n\u2502  \u2502  .eslintrc.json        # eslint \u4ee3\u7801\u98ce\u683c\u63a7\u5236\n\u2502  \u2502  angular.bind.js       # bind jqlite\n\u2502  \u2502  Angular.js            # window.angular \u7684\u7528\u6237\u63a5\u53e3\n\u2502  \u2502  angular.prefix\n\u2502  \u2502  angular.suffix\n\u2502  \u2502  AngularPublic.js      # \u5c06angular\u7684\u63a5\u53e3\u66b4\u9732\n\u2502  \u2502  apis.js\n\u2502  \u2502  jqLite.js\n\u2502  \u2502  loader.js             # angular.module\u5728\u8fd9\u91cc\u5b9a\u4e49\uff0c\u51fd\u6570\u662fsetupModuleLoader\n\u2502  \u2502  loader.prefix\n\u2502  \u2502  loader.suffix\n\u2502  \u2502  minErr.js             # \u9519\u8bef\u5904\u7406\uff0c\u5728angularjs\u51fa\u9519\u65f6\u5019\u53ef\u4ee5\u63d0\u4f9b\u4e30\u5bcc\u7684\u9519\u8bef\u4fe1\u606f\n\u2502  \u2502  module.prefix\n\u2502  \u2502  module.suffix\n\u2502  \u2502  publishExternalApis.js\n\u2502  \u2502  shallowCopy.js\n\u2502  \u2502  stringify.js\n\u2502  \u2502\n\u2502  \u251c\u2500auto\n\u2502  \u2502      injector.js       # \u6838\u5fc3\uff0cangular\u4f9d\u8d56\u6ce8\u5165\u7ba1\u7406\uff0cprovider\n\u2502  \u2502\n\u2502  \u251c\u2500ng\n\u2502  \u2502  \u2502  anchorScroll.js\n\u2502  \u2502  \u2502  animate.js\n\u2502  \u2502  \u2502  animateCss.js\n\u2502  \u2502  \u2502  animateRunner.js\n\u2502  \u2502  \u2502  browser.js\n\u2502  \u2502  \u2502  cacheFactory.js\n\u2502  \u2502  \u2502  compile.js             # \u6838\u5fc3\uff0ccompile\u5b9e\u73b0\n\u2502  \u2502  \u2502  controller.js          # \u6838\u5fc3\uff0ccontroller\u5b9e\u73b0\uff0c\u867d\u7136\u4ee3\u7801\u975e\u5e38\u77ed\n\u2502  \u2502  \u2502  cookieReader.js\n\u2502  \u2502  \u2502  document.js\n\u2502  \u2502  \u2502  exceptionHandler.js\n\u2502  \u2502  \u2502  filter.js\n\u2502  \u2502  \u2502  forceReflow.js\n\u2502  \u2502  \u2502  http.js\n\u2502  \u2502  \u2502  httpBackend.js\n\u2502  \u2502  \u2502  interpolate.js\n\u2502  \u2502  \u2502  interval.js\n\u2502  \u2502  \u2502  jsonpCallbacks.js\n\u2502  \u2502  \u2502  locale.js\n\u2502  \u2502  \u2502  location.js\n\u2502  \u2502  \u2502  log.js\n\u2502  \u2502  \u2502  parse.js\n\u2502  \u2502  \u2502  q.js                   # \u6838\u5fc3\uff0cangular\u5f02\u6b65\u5e93\n\u2502  \u2502  \u2502  raf.js\n\u2502  \u2502  \u2502  rootElement.js\n\u2502  \u2502  \u2502  rootScope.js           # \u6838\u5fc3\uff0cScope\u5b9e\u73b0\n\u2502  \u2502  \u2502  sanitizeUri.js\n\u2502  \u2502  \u2502  sce.js\n\u2502  \u2502  \u2502  sniffer.js\n\u2502  \u2502  \u2502  templateRequest.js\n\u2502  \u2502  \u2502  testability.js\n\u2502  \u2502  \u2502  timeout.js\n\u2502  \u2502  \u2502  urlUtils.js\n\u2502  \u2502  \u2502  window.js\n\u2502  \u2502  \u2502\n\u2502  \u2502  \u251c\u2500directive\n\u2502  \u2502  \u2502      a.js\n\u2502  \u2502  \u2502      attrs.js\n\u2502  \u2502  \u2502      directives.js\n\u2502  \u2502  \u2502      form.js\n\u2502  \u2502  \u2502      input.js\n\u2502  \u2502  \u2502      ngBind.js\n\u2502  \u2502  \u2502      ngChange.js\n\u2502  \u2502  \u2502      ngClass.js\n\u2502  \u2502  \u2502      ngCloak.js\n\u2502  \u2502  \u2502      ngController.js        # \u6838\u5fc3\uff0c\u5e38\u7528angular\u6307\u4ee4\n\u2502  \u2502  \u2502      ngCsp.js\n\u2502  \u2502  \u2502      ngEventDirs.js\n\u2502  \u2502  \u2502      ngIf.js                # \u6838\u5fc3\uff0c\u5e38\u7528anuglar\u6307\u4ee4\n\u2502  \u2502  \u2502      ngInclude.js\n\u2502  \u2502  \u2502      ngInit.js\n\u2502  \u2502  \u2502      ngList.js\n\u2502  \u2502  \u2502      ngModel.js             # \u6838\u5fc3\uff0c\u5e38\u7528angular\u6307\u4ee4\uff0c\u53cc\u5411\u6570\u636e\u7ed1\u5b9a\n\u2502  \u2502  \u2502      ngModelOptions.js\n\u2502  \u2502  \u2502      ngNonBindable.js\n\u2502  \u2502  \u2502      ngOptions.js\n\u2502  \u2502  \u2502      ngPluralize.js\n\u2502  \u2502  \u2502      ngRepeat.js            # \u6838\u5fc3\uff0c\u5e38\u7528anuglar\u6307\u4ee4\n\u2502  \u2502  \u2502      ngShowHide.js\n\u2502  \u2502  \u2502      ngStyle.js\n\u2502  \u2502  \u2502      ngSwitch.js\n\u2502  \u2502  \u2502      ngTransclude.js\n\u2502  \u2502  \u2502      script.js\n\u2502  \u2502  \u2502      select.js\n\u2502  \u2502  \u2502      validators.js\n\u2502  \u2502  \u2502\n\u2502  \u2502  \u2514\u2500filter\n\u2502  \u2502          filter.js\n\u2502  \u2502          filters.js\n\u2502  \u2502          limitTo.js\n\u2502  \u2502          orderBy.js\n\u2502  \u2502\n\u2502  \u251c\u2500ngAnimate\n\u2502  \u2502      .eslintrc.json\n\u2502  \u2502      animateChildrenDirective.js\n\u2502  \u2502      animateCss.js\n\u2502  \u2502      animateCssDriver.js\n\u2502  \u2502      animateJs.js\n\u2502  \u2502      animateJsDriver.js\n\u2502  \u2502      animateQueue.js\n\u2502  \u2502      animation.js\n\u2502  \u2502      module.js\n\u2502  \u2502      ngAnimateSwap.js\n\u2502  \u2502      rafScheduler.js\n\u2502  \u2502      shared.js\n\u2502  \u2502\n\u2502  \u251c\u2500ngAria\n\u2502  \u2502      aria.js\n\u2502  \u2502\n\u2502  \u251c\u2500ngComponentRouter\n\u2502  \u2502      Router.js\n\u2502  \u2502\n\u2502  \u251c\u2500ngCookies\n\u2502  \u2502      cookies.js\n\u2502  \u2502      cookieWriter.js\n\u2502  \u2502\n\u2502  \u251c\u2500ngLocale\n\u2502  \u2502\n\u2502  \u251c\u2500ngMessageFormat\n\u2502  \u2502      .eslintrc.json\n\u2502  \u2502      messageFormatCommon.js\n\u2502  \u2502      messageFormatInterpolationParts.js\n\u2502  \u2502      messageFormatParser.js\n\u2502  \u2502      messageFormatSelector.js\n\u2502  \u2502      messageFormatService.js\n\u2502  \u2502\n\u2502  \u251c\u2500ngMessages\n\u2502  \u2502      messages.js\n\u2502  \u2502\n\u2502  \u251c\u2500ngMock\n\u2502  \u2502      .eslintrc.json\n\u2502  \u2502      angular-mocks.js\n\u2502  \u2502      browserTrigger.js\n\u2502  \u2502\n\u2502  \u251c\u2500ngParseExt\n\u2502  \u2502      module.js\n\u2502  \u2502      ucd.js\n\u2502  \u2502\n\u2502  \u251c\u2500ngResource\n\u2502  \u2502      resource.js\n\u2502  \u2502\n\u2502  \u251c\u2500ngRoute\n\u2502  \u2502  \u2502  .eslintrc.json\n\u2502  \u2502  \u2502  route.js\n\u2502  \u2502  \u2502  routeParams.js\n\u2502  \u2502  \u2502\n\u2502  \u2502  \u2514\u2500directive\n\u2502  \u2502          ngView.js\n\u2502  \u2502\n\u2502  \u251c\u2500ngSanitize\n\u2502  \u2502  \u2502  .eslintrc.json\n\u2502  \u2502  \u2502  sanitize.js\n\u2502  \u2502  \u2502\n\u2502  \u2502  \u2514\u2500filter\n\u2502  \u2502          linky.js\n\u2502  \u2502\n\u2502  \u2514\u2500ngTouch\n\u2502      \u2502  .eslintrc.json\n\u2502      \u2502  swipe.js\n\u2502      \u2502  touch.js\n\u2502      \u2502\n\u2502      \u2514\u2500directive\n\u2502              ngSwipe.js\n\u2502", 
            "title": "\u76ee\u5f55\u7ed3\u6784"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u539f\u578b\u94fe\u4ec0\u4e48\u9b3c/", 
            "text": "JS\u539f\u578b\u94fe\u4ec0\u4e48\u9b3c\n\n\n\u524d\u8a00\n\n\n\u539f\u578b\u94fe\u662fjs\u4e2d\u6bd4\u8f83\u56f0\u6270\u4eba\u7684\u4e00\u4e2a\u95ee\u9898\uff0c\u73b0\u5728\u6211\u4eec\u6765\u63a2\u7a76\u8fd9\u4e2a\u5230\u5e95\u662f\u4ec0\u4e48\u9b3c\n\n\n\u95ee\u9898\u8d77\u6e90\n\n\n\u6211\u4eec\u90fd\u77e5\u9053\uff0cjavascript\u662f\u9762\u5411\u5bf9\u8c61\u8bed\u8a00\u3002javascript\u91cc\u9762\u7684\u4e00\u5207\u53d8\u91cf\u5747\u4e3a\u5bf9\u8c61\u3002javascript\u7684\u51fd\u6570\u4e5f\u53ef\u4ee5\u770b\u505a\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u5bf9\u8c61\u3002\u800c\u5728javascript\u5f53\u4e2d\uff0c\u51fd\u6570\u662f\u4e00\u7b49\u516c\u6c11\uff0c\u51fd\u6570\u53ef\u4ee5\u88ab\u8c03\u7528\u3002\n\n\n\u5148\u770b\u51e0\u4e2a\u7ecf\u5e38\u770b\u5230\u4f46\u662f\u4e0d\u662f\u7279\u522b\u7406\u89e3\u7684\u4e1c\u897f\uff1a\n\n\n\n\nprototype\n\n\n__proto__\n\n\nconstructor\n\n\ninstanceof\n\n\nnew\n\n\n\n\n\u95ee\u9898\u51fa\u81ea\u4e8e\u4e0b\u9762\u51e0\u4e2a\u7b80\u5355\u7684\u8868\u8fbe\u5f0f\uff1a\n\n\n\n\nObject instanceof Object // true\n\n\nFunction instanceof Object // true ???\n\n\nObject instanceof Function // true ???\n\n\nFunction instanceof Function // true ???\n\n\nFunction.prototype instanceof Object // true\n\n\nFunction.prototype instanceof Function // ture ???\n\n\nObject.__proto__.__proto__.constructor == Object // true ???\n\n\nFunction.constructor === Function // true ???\n\n\n\n\n__proto__\n\n\n__proto__ \u4e0d\u662f\u4e00\u4e2a\u6807\u51c6\uff0c\u4f46\u662f\u7edd\u5927\u591a\u6570\u7684\u6d4f\u89c8\u5668\u90fd\u5b9e\u73b0\u4e86\u4ed6\u3002__proto__ \u662f\u771f\u6b63\u6807\u8bc6\u539f\u578b\u94fe\u7684\u5bf9\u8c61\u3002\n\n\n\n\n\u6ce8\u610f\n\n\nES\u4e2d\u6807\u51c6\u7684__proto__\u5b9a\u4e49\u4e3a[[proto]]\uff0c\u53ef\u4ee5\u770b\u5230\u5f88\u591a\u6587\u6863\u5199\u6cd5\u4e0a\u4f1a\u4f7f\u7528\u6807\u51c6[[proto]]\uff0c\u672c\u6587\u6211\u4eec\u76f4\u63a5\u4f7f\u7528__proto__\n\n\n\n\nvar\n \nobj\n \n=\n \n{}\n\n\nobj\n.\n__proto__\n \n==\n \nObject\n.\nprototype\n  \n// true, why ??\n\n\n\n\n\nprototype\n\n\n\u4e0d\u662f\u6240\u6709\u5bf9\u8c61\u90fd\u5177\u6709\nprototype\n\u5c5e\u6027\uff0c\u53ea\u6709\n\u51fd\u6570\n\u624d\u6709\nprototype\n\u5c5e\u6027\uff0c\u56e0\u4e3a\u51fd\u6570\u901a\u8fc7\u201c\u6784\u9020\u8c03\u7528\u201d\u7684\u65b9\u6cd5\u521b\u5efa\u51fa\u5bf9\u8c61\u3002\n\n\n\u660e\u786e\u4e00\u70b9\u5c31\u662f\uff0c\u51fd\u6570\u7684\nprototype\n\u5c5e\u6027\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u9ed8\u8ba4\u5305\u542b\u4e00\u4e2a\nconstructor\n\u7684\u5c5e\u6027\uff0c\u8fd9\u4e2a\u5c5e\u6027\u4e5f\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u6307\u5411\u51fd\u6570\u672c\u8eab\u3002\n\n\nconstructor\n\n\n\u5f53\u4e00\u4e2a\u51fd\u6570\u88ab\u4ee5\u201c\u6784\u9020\u8c03\u7528\u201d\u7684\u65b9\u5f0f\u6267\u884c\u65f6\u5019\uff0c\u8fd9\u4e2a\u51fd\u6570\u5c31\u79f0\u4e3a\nconstructor\n\n\nExample:\n\nvar\n \nPerson\n \n=\n \nfunction\n \n()\n \n{\n\n  \nthis\n.\nname\n \n=\n \nyejiaqi\n \n// \u601d\u8003\u6b64\u51fd\u6570\u5982\u679c\u5e26\u6709\u53c2\u6570\uff0c\u6216\u8005\u5e26\u6709\u8fd4\u56de\u503c\u4f1a\u6709\u4ec0\u4e48\u7ed3\u679c\uff1f\n\n\n}\n\n\n\nvar\n \np1\n \n=\n \nnew\n \nPerson\n()\n  \n// new Person \u5e26\u62ec\u53f7\u548c\u4e0d\u5e26\u62ec\u53f7\u6709\u4ec0\u4e48\u533a\u522b\uff1f\n\n\nconsole\n.\nlog\n(\np1\n.\nname\n)\n  \n// \nyejiaqi\n, Person \u4e3a constructor\n\n\n\n\nconstructor, prototype, __proto__\u57fa\u672c\u5173\u7cfb\n\n\n__proto__ \u548c prototype \u662fjs\u539f\u578b\u94fe\u548c\u539f\u578b\u7ee7\u627f\u7684\u57fa\u7840\u3002\u4e24\u8005\u7684\u5355\u8bcd\u90fd\u542b\u6709proto\uff08\u539f\u578b\u7684\u8bed\u4e49\uff09\uff0c\u5f88\u5bb9\u6613\u8ba9\u4eba\u6df7\u6dc6\u3002\n\n\n\u5173\u7cfb\u89e3\u91ca\n\n\nvar\n \nPerson\n \n=\n \nfunction\n \n()\n \n{\n\n  \nthis\n.\nname\n \n=\n \nyejiaqi\n \n// \u601d\u8003\u6b64\u51fd\u6570\u5982\u679c\u5e26\u6709\u53c2\u6570\uff0c\u6216\u8005\u5e26\u6709\u8fd4\u56de\u503c\u4f1a\u6709\u4ec0\u4e48\u7ed3\u679c\uff1f\n\n\n}\n\n\n\nconsole\n.\nlog\n(\nPerson\n.\nprototype\n)\n  \n// {constructor: \u0192}\n\n\nconsole\n.\nlog\n(\nPerson\n.\nprototype\n.\nconstructor\n \n===\n \nPerson\n)\n  \n// true, constructor\u6267\u884c\u51fd\u6570\u672c\u8eab\n\n\n\np1\n \n=\n \nnew\n \nPerson\n()\n\n\n\nconsole\n.\nlog\n(\np1\n.\n__proto__\n \n==\n \nPerson\n.\nprototype\n)\n  \n// true, \u5b9e\u4f8b\u5bf9\u8c61\u7684__proto__\u6307\u5411constructor\u7684prototype\n\n\n\n\n\n\u5bf9\u8c61\u5c5e\u6027\u67e5\u627e\n\n\nvar\n \nPerson\n \n=\n \nfunction\n \n()\n \n{\n\n  \nthis\n.\nname\n \n=\n \nyejiaqi\n\n\n}\n\n\n\np1\n \n=\n \nnew\n \nPerson\n()\n\n\n\nconsole\n.\nlog\n(\np1\n.\nsecret\n)\n  \n// undefined\n\n\n\nPerson\n.\nprototype\n.\nsecret\n \n=\n \nsecret\n\n\n\nconsole\n.\nlog\n(\np1\n.\nsecret\n)\n  \n// secret\n\n\n\nconsole\n.\nlog\n(\np1\n.\nhasOwnProperty\n(\nname\n))\n  \n// true\n\n\nconsole\n.\nlog\n(\np1\n.\nhasOwnProperty\n(\nsecret\n))\n  \n// false\n\n\n\nconsole\n.\nlog\n(\np1\n.\nsecret\n \n===\n \nPerson\n.\nprototype\n.\nsecret\n)\n \n// true\n\n\n\np1\n.\nsecret\n \n=\n \nno secret\n\n\n\nconsole\n.\nlog\n(\np1\n.\nsecret\n)\n  \n// \nno secret\n\uff0c\u590d\u5199\n\n\n\nconsole\n.\nlog\n(\np1\n.\nsecret\n \n===\n \nPerson\n.\nprototype\n.\nsecret\n)\n \n// false\n\n\nconsole\n.\nlog\n(\np1\n.\nhasOwnProperty\n(\nsecret\n))\n  \n// true\n\n\n\n\n\n\u53ef\u4ee5\u5c06javascript\u7684\u5c5e\u6027\u67e5\u627e\u7406\u89e3\u4e3a\u4ee5\u4e0b\u51fd\u6570\n\n\nfunction\n \ngetAttr\n(\nobj\n,\n \nattr\n)\n \n{\n\n  \nif\n \n(\nobj\n \n===\n \nnull\n)\n \n{\n\n    \nreturn\n \nundefined\n\n  \n}\n\n  \nif\n \n(\nobj\n.\nhasOwnProperty\n(\nattr\n))\n \n{\n\n    \nreturn\n \nobj\n[\nattr\n]\n\n  \n}\n \nelse\n \n{\n\n    \nreturn\n \ngetAttr\n(\nobj\n.\n__proto__\n,\n \nattr\n)\n\n  \n}\n\n\n}\n\n\n\ngetAttr\n(\np1\n,\n \nsecret\n)\n  \n// \nsecret\n\n\n\ngetAttr\n(\np1\n,\n \nname\n)\n  \n// \nyejiaqi\n\n\n\ngetAttr\n(\np1\n,\n \nxxx\n)\n  \n// undefined\n\n\n\n\n\n\u5927\u5bb6\u8bf7\u770b\u4e0b\u5217\u793a\u4f8b,\u793a\u4f8b\u4f01\u56fe\u7528\u5bf9\u8c61\u6765\u505a\u54c8\u5e0c\u8868\u7edf\u8ba1\u4e00\u6bb5\u5b57\u7b26\u4e32\u5404\u4e2a\u5355\u8bcd\u51fa\u73b0\u7684\u9891\u7387\n\n\nvar\n \nstr\n \n=\n  \n`javascript is a programming language for web. \n\n\nNowadays, javascript can also be used as a server side language using nodejs. \n\n\nIn javascript prototype and constructor are key concepts, you should know it well`\n\n\n\nvar\n \nstrArr\n \n=\n \nstr\n.\nsplit\n(\n \n)\n\n\n\nvar\n \nsummary\n \n=\n \n{}\n\n\n\nfor\n \n(\nlet\n \nword\n \nof\n \nstrArr\n)\n \n{\n\n  \nif\n \n(\nsummary\n[\nword\n])\n \n{\n\n    \nsummary\n[\nword\n]\n \n+=\n \n1\n\n  \n}\n \nelse\n \n{\n\n    \nsummary\n[\nword\n]\n \n=\n \n1\n\n  \n}\n\n\n}\n\n\n\nconsole\n.\nlog\n(\nsummary\n)\n\n\n\n\n\n\u770b\u8d77\u6765\u6beb\u65e0\u6bdb\u75c5\uff0c\u4f46\u662f\u771f\u6b63\u6267\u884c\u8d77\u6765\u7684\u65f6\u5019\uff0c\u4f60\u4f1a\u770b\u5230\u9664\u4e86\u4e00\u4e2a\u5355\u8bcd\uff0c\u5176\u4ed6\u90fd\u6b63\u5e38\uff0c\u8fd9\u4e2a\u5355\u8bcd\u5c31\u662f\nconstructor\n\n\nconstructor:\nfunction Object() { [native code] }1\n\n\n\n\n\u539f\u56e0\u5c31\u662f\nsummary['constructor']\n\u8fd9\u4e2a\u4f1a\u53bb\u539f\u578b\u94fe\u8fdb\u884c\u5c5e\u6027\u5bfb\u627e\uff0c\u6700\u7ec8\u627e\u5230\u4e86\nsummary.__proto__.constructor\n\uff0c\u4e5f\u5c31\u662f\nf Object() [native code]\n\n\n\u5bf9\u8c61\u65b9\u6cd5\n\n\n\u5bf9\u8c61\u7684\u65b9\u6cd5\u53ef\u4ee5\u770b\u505a\u662f\u5bf9\u8c61\u4e00\u7c7b\u7279\u6b8a\u7684\u5c5e\u6027\uff0c\u6b64\u5904\u5b9a\u4e49\u65f6\u9700\u8981\u6ce8\u610f\u7684\u662f\nthis\n\u7684\u6307\u5411\u95ee\u9898\n\n\nvar\n \nPerson\n \n=\n \nfunction\n \n()\n \n{\n\n  \nthis\n.\nname\n \n=\n \nyejiaqi\n\n\n}\n\n\n\nPerson\n.\nprototype\n.\nsayName\n \n=\n \nfunction\n \n()\n \n{\n\n  \nreturn\n \nMy name is \n \n+\n \nthis\n.\nname\n\n\n}\n\n\n\nvar\n \np1\n \n=\n \nPerson\n()\n\n\nvar\n \np2\n \n=\n \nPerson\n()\n\n\np2\n.\nname\n \n=\n \nyejiaqi2.0\n\n\n\nconsole\n.\nlog\n(\np1\n.\nsayName\n())\n\n\nconsole\n.\nlog\n(\np2\n.\nsayName\n())\n\n\n\n\n\nnew\u8fc7\u7a0b\u8fdb\u884c\u7684\u64cd\u4f5c\n\n\n\u8fd0\u7b97\u7b26\nnew\n\u4f1a\u6267\u884c\u6784\u9020\u51fd\u6570\nconstructor\n\uff0c\u5e76\u4e14\u628a\nthis\n\u7ed1\u5b9a\u5230\u4e00\u4e2a\u65b0\u521b\u5efa\u7684\u5bf9\u8c61\uff0c\u5e76\u4e14\u8fd9\u4e2a\u5bf9\u8c61\n__proto__\n\u6267\u884c\nconstructor\n\u7684\nprototype\n\n\n\u53ef\u4ee5\u7528\u4ee5\u4e0b\u8fc7\u7a0b\u6765\u7406\u89e3\n\n\nfunction\n \nfakeNew\n(\nconstructor\n,\n \nargs\n)\n \n{\n\n  \n// \u521b\u5efa\u5bf9\u8c61\uff0c\u5e76\u4e14\u8bbe\u7f6e\u5bf9\u8c61\u7684__proto__\u4e3aconstructor.prototype\uff0c\u76f8\u5f53\u4e8e\n\n  \n// var newInstance = {}\n\n  \n// newInstance.__proto__ = constructor.prototype\n\n  \nvar\n \nnewInstance\n \n=\n \nObject\n.\ncreate\n(\nconstructor\n.\nprototype\n)\n\n\n  \n// \u8c03\u7528\u6784\u9020\u51fd\u6570\uff0c\u7ed1\u5b9athis\u5230newInstance\n\n  \nvar\n \nresult\n \n=\n \nconstructor\n.\napply\n(\nnewInstance\n,\n \nargs\n)\n\n\n  \n// \u5982\u679c\u8c03\u7528\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u975enull\u5bf9\u8c61\uff0c\u8fd4\u56de\u8fd9\u4e2a\u5bf9\u8c61\n\n  \n// \u5426\u5219\u8fd4\u56denewInstance\n\n  \n// \u6784\u9020\u5b8c\u6bd5\n\n  \nreturn\n \nresult\n \n \ntypeof\n \nresult\n \n===\n \nobject\n \n?\n \nresult\n \n:\n \nnewInstance\n\n\n}\n\n\n\n\n\n\u539f\u578b\u94fe\n\n\n\u6211\u4eec\u53d1\u73b0\nconstructor\n\u7684\nprototype\n\u4e5f\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5bf9\u8c61\u5c31\u53ef\u4ee5\u62e5\u6709\n__proto__\n\u5c5e\u6027,\n__proto__\n\u5c5e\u6027\u5c31\u80fd\u6307\u5411\u521b\u5efa\u4ed6\u7684\nconstructor\n\u7684\nprototyope\n\u3002\u4e5f\u5c31\u662f\u8bf4\u53ef\u4ee5\u901a\u8fc7\u8fd9\u6837\u7684\u5faa\u73af\uff0c\u521b\u9020\u51fa\u4e00\u6761\u94fe\u3002\u975e\u5e38\u7ed5\uff0c\u6211\u4eec\u770b\u4e00\u4e2a\u4f8b\u5b50\n\n\nvar\n \nPerson\n \n=\n \nfunction\n \n()\n \n{\n\n  \nthis\n.\nname\n \n=\n \nyejiaqi\n\n\n}\n\n\n\nPerson\n.\nprototype\n.\nsayName\n \n=\n \nfunction\n \n()\n \n{\n\n  \nreturn\n \nMy name is \n \n+\n \nthis\n.\nname\n\n\n}\n\n\n\nvar\n \nMan\n \n=\n \nfunction\n \n()\n \n{\n\n  \nthis\n.\ngender\n \n=\n \nmale\n\n\n}\n\n\n\n// \u6ce8\u610f\u6b64\u5904\n\n\nMan\n.\nprototype\n \n=\n \nnew\n \nPerson\n()\n  \n// prototype chain !\n\n\nMan\n.\nprototype\n.\ncontructor\n \n=\n \nMan\n  \n// \u6ce8\u610f\u6b64\u5904\n\n\n\nvar\n \nm1\n \n=\n \nnew\n \nMan\n()\n\n\n\nconsole\n.\nlog\n(\nm1\n.\nname\n)\n\n\nconsole\n.\nlog\n(\nm1\n.\ngender\n)\n\n\n\n\n\n\u4e0a\u8ff0\u7684Man\u5b9e\u4f8b\u7684\u539f\u578b\u94fe\uff1a\n\n\nm1\n.\n__proto__\n  \n// Man.prototype, Person \u7684\u5b9e\u4f8b\n\n\nm1\n.\n__proto__\n.\n__proto__\n \n// Person.prototype\n\n\nm1\n.\n__proto__\n.\n__proto__\n.\n__proto\n  \n// Object.prototype\n\n\nm1\n.\n__proto__\n.\n__proto__\n.\n__proto\n.\n__proto__\n  \n// null\n\n\n\n\n\n\u6ce8\u610f\u8fd9\u6837\u7684\u64cd\u4f5c\n\n\nvar\n \nPerson\n \n=\n \nfunction\n \n()\n \n{\n\n  \nthis\n.\nname\n \n=\n \nyejiaqi\n\n\n}\n\n\n\nPerson\n.\nprototype\n.\nsayName\n \n=\n \nfunction\n \n()\n \n{\n\n  \nreturn\n \nMy name is \n \n+\n \nthis\n.\nname\n\n\n}\n\n\n\nvar\n \nMan\n \n=\n \nfunction\n \n()\n \n{\n\n  \nthis\n.\ngender\n \n=\n \nmale\n\n\n}\n\n\n\nMan\n.\nprototype\n \n=\n \nnew\n \nPerson\n()\n  \n// prototype chain !\n\n\nMan\n.\nprototype\n.\ncontructor\n \n=\n \nMan\n\n\n\nvar\n \nm1\n \n=\n \nnew\n \nMan\n\n\n\n// \u6b64\u65f6\u64cd\u4f5c Person \u7684 prototype\n\n\nMan\n.\nprototype\n \n=\n \n{\n__proto__\n:\n \nMan\n}\n  \n// \u8fd9\u4e2a\u64cd\u4f5c\u76f8\u5f53\u4e8e\u66f4\u6362\u5f15\u7528\uff0c\u539f\u6765m1\u7684__proto__ \u5e76\u4e0d\u4f1a\u66f4\u65b0\n\n\n\nconsole\n.\nlog\n(\nm1\n.\n__proto__\n \n===\n \nMan\n.\nprototype\n)\n  \n// false !!!\n\n\n\n\n\n\n\n\u5173\u952e\u70b9\u603b\u7ed3\n\n\n\n\nconstructor\n\u662f\u51fd\u6570\n\n\n__proto__\n\u548c\nprototype\n\u662f\u5bf9\u8c61\n\n\n\u53ea\u6709\u51fd\u6570\u6709\nprototype\n\u5c5e\u6027\n\n\n\u5b9e\u4f8b\u5bf9\u8c61\u7f3a\u5c5e\u6027\uff0c\u53bb\n__proto__\n\u5bfb\u627e\n\n\n\u5b9e\u4f8b\u5bf9\u8c61\u7684\n__proto__\n\u6307\u5411\nconstructor\n\u7684\nprototype\n\n\nconstructor.prototype.constructor\n\u53cd\u5411\u6307\u56de\nconstructor\n\n\nconsturctor.prototype\n\u4e5f\u662f\u5bf9\u8c61\uff0c\u4e5f\u53ef\u4ee5\u62e5\u6709\n__proto__\n\n\n\u6700\u65b0\u5f62\u6210\u4e86\n__proto__\n\u94fe\n\n\nnull \u662f\u539f\u578b\u94fe\u7684\u7ed3\u675f\uff0cObject.prototype\u662f\u539f\u578b\u94fe\u7684\u9876\u7aef\n\n\n\n\n\n\n\u6df1\u5165\u539f\u578b\u94fe\n\n\n\n\n\u73b0\u5728\u6211\u4eec\u5bf9\u539f\u578b\u94fe\u6709\u4e86\u5145\u5206\u7684\u7406\u89e3\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u89e3\u91ca\u4e00\u5f00\u59cb\u63d0\u51fa\u7684\u95ee\u9898\n\n\ninstanceof \u7684\u903b\u8f91\n\n\n\u5b9e\u9645\u4e0a\u662f\u6821\u9a8c\u539f\u578b\u94fe\n\n\nvar\n \nPerson\n \n=\n \nfunction\n \n()\n \n{}\n\n\nvar\n \nMan\n \n=\n \nfunction\n \n()\n \n{}\n\n\n\nMan\n.\nprototype\n \n=\n \nnew\n \nPerson\n\n\nMan\n.\nprototype\n.\nconstructor\n \n=\n \nMan\n\n\n\nvar\n \nSuperMan\n \n=\n \nfunction\n \n()\n \n{}\n\n\nSuperMan\n.\nprototype\n \n=\n \nnew\n \nMan\n()\n\n\nSuperMan\n.\nprototype\n.\nconstructor\n \n=\n \nSuperMan\n\n\n\nvar\n \ntiga\n \n=\n \nnew\n \nSuperMan\n()\n\n\n\ntiga\n \ninstanceof\n \nSuperMan\n \n// true, tiga.__proto__ == SuperMan.prototype\n\n\ntiga\n \ninstanceof\n \nMan\n \n// true, tiga.__proto__.__proto__ == Man.prototype\n\n\ntiga\n \ninstanceof\n \nPerson\n \n// true, tiga.__proto__.__proto__.__proto__ == Person.prototype\n\n\n\n// \u53d8\u6362prototype\n\n\nSuperMan\n.\nprototype\n \n=\n \n{}\n\n\n\ntiga\n \ninstanceof\n \nSuperMan\n \n// false, tiga.__proto__ != SuperMan.prototype\n\n\ntiga\n \ninstanceof\n \nMan\n \n// true, tiga.__proto__.__proto__ == Man.prototype\n\n\ntiga\n \ninstanceof\n \nPerson\n \n// true, tiga.__proto__.__proto__.__proto__ == Person.prototype\n\n\n\n\n\n\u89e3\u91ca\u95ee\u9898\n\n\nObject\n \ninstanceof\n \nObject\n  \n// true, Object.__proto__.__proto__ == Object.prototype\n\n\nFunction\n \ninstanceof\n \nObject\n \n// true, Function.__proto__.__proto__ == Object.prototype\n\n\nObject\n \ninstanceof\n \nFunction\n \n// true, Object.__proto__ == Function.prototype\n\n\nFunction\n \ninstanceof\n \nFunction\n \n// true, Function.__proto__ == Function.prototype\n\n\nFunction\n.\nprototype\n \ninstanceof\n \nObject\n \n// true, Function.__proto__.__proto__ == Object.prototype\n\n\n\nObject\n.\n__proto__\n.\n__proto__\n.\nconstructor\n \n==\n \nObject\n \n// true\n\n\nFunction\n.\nconstructor\n \n===\n \nFunction\n \n// true, \u5bf9\u8c61\u67e5\u627e\uff0cFunction.__proto__.constructor == Function\n\n\n\n\n\njavascript\u9876\u5c42\u539f\u578b\u94fe\u8bbe\u8ba1\u54f2\u5b66\n\n\n\u5728\u4e0a\u56fe\u4e2d\u5206\u6790\u6211\u4eec\u53ef\u4ee5\u7684\u5230\n\n\nfunction\n \nFoo\n()\n \n{}\n\n\nFoo\n.\n__proto__\n \n==\n \nFunction\n.\nprototype\n \n// Foo \u662fFunction\u7684\u5b9e\u4f8b\n\n\n\nFunction\n.\n__proto__\n \n==\n \nFunction\n.\nprototype\n  \n// \u53ef\u4ee5\u8ba4\u4e3aFunction\u5c31\u662fFunction\u7684\u5b9e\u4f8b\n\n\n\nObject\n.\n__proto__\n  \n==\n \nFunction\n.\nprototype\n \n// \u53ef\u4ee5\u8ba4\u4e3aObject\u4e5f\u662fFun\u4f20\u7edf\u7684\u5b9e\u4f8b\n\n\n\n\n\n\u8fd9\u5c31\u662f\u9e21\u548c\u86cb\u95ee\u9898\u7684\u4ea7\u751f\u7684\u6839\u672c\u539f\u56e0\u3002\u6700\u7ed5\u7684\u5730\u65b9\u5728\u4e8e\u8fd9\u91cc\u539f\u578b\u94fe\u7684\u76f8\u4e92\u5f15\u7528\n\n\n\u6211\u4eec\u627e\u51fa\u76f4\u63a5\u7684\u539f\u578b\u94fe\uff0c\u6309\u7167\n__proto__\n\n\nFunction -\n Function.prototype -\n Object.prototype -\n null\nObject -\n Function.prototype -\n Object.prototype -\n null\n\n\n\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u94fe\u7684\u5173\u952e\u5728\u4e8e\u4e00\u4e2a\u5bf9\u8c61\uff0c\u90a3\u5c31\u662f\nFunction.prototype\n\n\n\u5728console\u4e2d\u6211\u4eec\u8f93\u5165Function.prototype\u53ef\u4ee5\u53d1\u73b0\uff1a\n\n\n\n\nFunction.prototype\u662fnative code\u7684\uff0c\u4e5f\u5c31\u662f\u6d4f\u89c8\u5668\u7279\u6b8a\u5b9e\u73b0\u7684\uff0c\u5e76\u4e0d\u662f\u7eafjavascript\u5b9e\u73b0\u7684\n\n\nFunction.prototype\u53ef\u4ee5\u88ab\u8c03\u7528\uff0c\u5e76\u4e14\u6c38\u8fdc\u8fd4\u56deundefined\uff0c\u975e\u5e38\u795e\u5947\n\n\nFunction.prototype instanceof Function\n\u662ffalse\uff08\u601d\u8003\u4e3a\u4ec0\u4e48\uff09\uff0c\ntypeof Function\n\u662f\nfunction\n\n\n\n\n\u53e6\u5916\u8fd8\u53ef\u4ee5\u53d1\u73b0\nObject\n\uff1a\n\n\n\n\nObject\u672c\u8eab\u662f\u4e2a\uff08\u6784\u9020\uff09\u51fd\u6570\uff0c\u662fFunction\u7684\u5b9e\u4f8b\uff0c\u5373\nObject.__proto__\n\u5c31\u662f\nFunction.prototype\n\n\nObject.prototype\n\u662f\u5bf9\u8c61\u5417\uff1f\u662f\u7684\uff0cjs\u4e2d\u5bf9\u8c61\u7684\u5b9a\u4e49\u5c31\u662f\u5c5e\u6027\u7684\u96c6\u5408\uff0c\nObject.prototype\n\u662f\u5bf9\u8c61\uff0c\u4f46\u662f\u4ed6\u4e0d\u662f\nObject\n\u7684\u5b9e\u4f8b\n\n\n\n\n\u603b\u7ed3\uff1a\u9e21\u86cb\u95ee\u9898\n\n\n\u5148\u6709Object.prototype\uff08\u539f\u578b\u94fe\u9876\u7aef\uff09\uff0cFunction.prototype\u7ee7\u627fObject.prototype\u800c\u4ea7\u751f\uff0c\u6700\u540e\uff0cFunction\u548cObject\u548c\u5176\u5b83\u6784\u9020\u51fd\u6570\u7ee7\u627fFunction.prototype\u800c\u4ea7\u751f\n\n\nFurther Reading\n\n\n\n\nMDN Object.prototype\n\n\nMDN Function.prototype\n\n\nMDN javascript prototype chain\n\n\nClass Checking instanceof\n\n\nGithub __proto__ and prototype", 
            "title": "JS\u539f\u578b\u94fe\u4ec0\u4e48\u9b3c"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u539f\u578b\u94fe\u4ec0\u4e48\u9b3c/#js", 
            "text": "", 
            "title": "JS\u539f\u578b\u94fe\u4ec0\u4e48\u9b3c"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u539f\u578b\u94fe\u4ec0\u4e48\u9b3c/#_1", 
            "text": "\u539f\u578b\u94fe\u662fjs\u4e2d\u6bd4\u8f83\u56f0\u6270\u4eba\u7684\u4e00\u4e2a\u95ee\u9898\uff0c\u73b0\u5728\u6211\u4eec\u6765\u63a2\u7a76\u8fd9\u4e2a\u5230\u5e95\u662f\u4ec0\u4e48\u9b3c", 
            "title": "\u524d\u8a00"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u539f\u578b\u94fe\u4ec0\u4e48\u9b3c/#_2", 
            "text": "\u6211\u4eec\u90fd\u77e5\u9053\uff0cjavascript\u662f\u9762\u5411\u5bf9\u8c61\u8bed\u8a00\u3002javascript\u91cc\u9762\u7684\u4e00\u5207\u53d8\u91cf\u5747\u4e3a\u5bf9\u8c61\u3002javascript\u7684\u51fd\u6570\u4e5f\u53ef\u4ee5\u770b\u505a\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u5bf9\u8c61\u3002\u800c\u5728javascript\u5f53\u4e2d\uff0c\u51fd\u6570\u662f\u4e00\u7b49\u516c\u6c11\uff0c\u51fd\u6570\u53ef\u4ee5\u88ab\u8c03\u7528\u3002  \u5148\u770b\u51e0\u4e2a\u7ecf\u5e38\u770b\u5230\u4f46\u662f\u4e0d\u662f\u7279\u522b\u7406\u89e3\u7684\u4e1c\u897f\uff1a   prototype  __proto__  constructor  instanceof  new   \u95ee\u9898\u51fa\u81ea\u4e8e\u4e0b\u9762\u51e0\u4e2a\u7b80\u5355\u7684\u8868\u8fbe\u5f0f\uff1a   Object instanceof Object // true  Function instanceof Object // true ???  Object instanceof Function // true ???  Function instanceof Function // true ???  Function.prototype instanceof Object // true  Function.prototype instanceof Function // ture ???  Object.__proto__.__proto__.constructor == Object // true ???  Function.constructor === Function // true ???", 
            "title": "\u95ee\u9898\u8d77\u6e90"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u539f\u578b\u94fe\u4ec0\u4e48\u9b3c/#9595proto9595", 
            "text": "__proto__ \u4e0d\u662f\u4e00\u4e2a\u6807\u51c6\uff0c\u4f46\u662f\u7edd\u5927\u591a\u6570\u7684\u6d4f\u89c8\u5668\u90fd\u5b9e\u73b0\u4e86\u4ed6\u3002__proto__ \u662f\u771f\u6b63\u6807\u8bc6\u539f\u578b\u94fe\u7684\u5bf9\u8c61\u3002   \u6ce8\u610f  ES\u4e2d\u6807\u51c6\u7684__proto__\u5b9a\u4e49\u4e3a[[proto]]\uff0c\u53ef\u4ee5\u770b\u5230\u5f88\u591a\u6587\u6863\u5199\u6cd5\u4e0a\u4f1a\u4f7f\u7528\u6807\u51c6[[proto]]\uff0c\u672c\u6587\u6211\u4eec\u76f4\u63a5\u4f7f\u7528__proto__   var   obj   =   {}  obj . __proto__   ==   Object . prototype    // true, why ??", 
            "title": "__proto__"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u539f\u578b\u94fe\u4ec0\u4e48\u9b3c/#prototype", 
            "text": "\u4e0d\u662f\u6240\u6709\u5bf9\u8c61\u90fd\u5177\u6709 prototype \u5c5e\u6027\uff0c\u53ea\u6709 \u51fd\u6570 \u624d\u6709 prototype \u5c5e\u6027\uff0c\u56e0\u4e3a\u51fd\u6570\u901a\u8fc7\u201c\u6784\u9020\u8c03\u7528\u201d\u7684\u65b9\u6cd5\u521b\u5efa\u51fa\u5bf9\u8c61\u3002  \u660e\u786e\u4e00\u70b9\u5c31\u662f\uff0c\u51fd\u6570\u7684 prototype \u5c5e\u6027\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u9ed8\u8ba4\u5305\u542b\u4e00\u4e2a constructor \u7684\u5c5e\u6027\uff0c\u8fd9\u4e2a\u5c5e\u6027\u4e5f\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u6307\u5411\u51fd\u6570\u672c\u8eab\u3002", 
            "title": "prototype"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u539f\u578b\u94fe\u4ec0\u4e48\u9b3c/#constructor", 
            "text": "\u5f53\u4e00\u4e2a\u51fd\u6570\u88ab\u4ee5\u201c\u6784\u9020\u8c03\u7528\u201d\u7684\u65b9\u5f0f\u6267\u884c\u65f6\u5019\uff0c\u8fd9\u4e2a\u51fd\u6570\u5c31\u79f0\u4e3a constructor  Example: var   Person   =   function   ()   { \n   this . name   =   yejiaqi   // \u601d\u8003\u6b64\u51fd\u6570\u5982\u679c\u5e26\u6709\u53c2\u6570\uff0c\u6216\u8005\u5e26\u6709\u8fd4\u56de\u503c\u4f1a\u6709\u4ec0\u4e48\u7ed3\u679c\uff1f  }  var   p1   =   new   Person ()    // new Person \u5e26\u62ec\u53f7\u548c\u4e0d\u5e26\u62ec\u53f7\u6709\u4ec0\u4e48\u533a\u522b\uff1f  console . log ( p1 . name )    //  yejiaqi , Person \u4e3a constructor", 
            "title": "constructor"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u539f\u578b\u94fe\u4ec0\u4e48\u9b3c/#constructor_prototype_9595proto9595", 
            "text": "__proto__ \u548c prototype \u662fjs\u539f\u578b\u94fe\u548c\u539f\u578b\u7ee7\u627f\u7684\u57fa\u7840\u3002\u4e24\u8005\u7684\u5355\u8bcd\u90fd\u542b\u6709proto\uff08\u539f\u578b\u7684\u8bed\u4e49\uff09\uff0c\u5f88\u5bb9\u6613\u8ba9\u4eba\u6df7\u6dc6\u3002", 
            "title": "constructor, prototype, __proto__\u57fa\u672c\u5173\u7cfb"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u539f\u578b\u94fe\u4ec0\u4e48\u9b3c/#_3", 
            "text": "var   Person   =   function   ()   { \n   this . name   =   yejiaqi   // \u601d\u8003\u6b64\u51fd\u6570\u5982\u679c\u5e26\u6709\u53c2\u6570\uff0c\u6216\u8005\u5e26\u6709\u8fd4\u56de\u503c\u4f1a\u6709\u4ec0\u4e48\u7ed3\u679c\uff1f  }  console . log ( Person . prototype )    // {constructor: \u0192}  console . log ( Person . prototype . constructor   ===   Person )    // true, constructor\u6267\u884c\u51fd\u6570\u672c\u8eab  p1   =   new   Person ()  console . log ( p1 . __proto__   ==   Person . prototype )    // true, \u5b9e\u4f8b\u5bf9\u8c61\u7684__proto__\u6307\u5411constructor\u7684prototype", 
            "title": "\u5173\u7cfb\u89e3\u91ca"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u539f\u578b\u94fe\u4ec0\u4e48\u9b3c/#_4", 
            "text": "var   Person   =   function   ()   { \n   this . name   =   yejiaqi  }  p1   =   new   Person ()  console . log ( p1 . secret )    // undefined  Person . prototype . secret   =   secret  console . log ( p1 . secret )    // secret  console . log ( p1 . hasOwnProperty ( name ))    // true  console . log ( p1 . hasOwnProperty ( secret ))    // false  console . log ( p1 . secret   ===   Person . prototype . secret )   // true  p1 . secret   =   no secret  console . log ( p1 . secret )    //  no secret \uff0c\u590d\u5199  console . log ( p1 . secret   ===   Person . prototype . secret )   // false  console . log ( p1 . hasOwnProperty ( secret ))    // true   \u53ef\u4ee5\u5c06javascript\u7684\u5c5e\u6027\u67e5\u627e\u7406\u89e3\u4e3a\u4ee5\u4e0b\u51fd\u6570  function   getAttr ( obj ,   attr )   { \n   if   ( obj   ===   null )   { \n     return   undefined \n   } \n   if   ( obj . hasOwnProperty ( attr ))   { \n     return   obj [ attr ] \n   }   else   { \n     return   getAttr ( obj . __proto__ ,   attr ) \n   }  }  getAttr ( p1 ,   secret )    //  secret  getAttr ( p1 ,   name )    //  yejiaqi  getAttr ( p1 ,   xxx )    // undefined   \u5927\u5bb6\u8bf7\u770b\u4e0b\u5217\u793a\u4f8b,\u793a\u4f8b\u4f01\u56fe\u7528\u5bf9\u8c61\u6765\u505a\u54c8\u5e0c\u8868\u7edf\u8ba1\u4e00\u6bb5\u5b57\u7b26\u4e32\u5404\u4e2a\u5355\u8bcd\u51fa\u73b0\u7684\u9891\u7387  var   str   =    `javascript is a programming language for web.   Nowadays, javascript can also be used as a server side language using nodejs.   In javascript prototype and constructor are key concepts, you should know it well`  var   strArr   =   str . split (   )  var   summary   =   {}  for   ( let   word   of   strArr )   { \n   if   ( summary [ word ])   { \n     summary [ word ]   +=   1 \n   }   else   { \n     summary [ word ]   =   1 \n   }  }  console . log ( summary )   \u770b\u8d77\u6765\u6beb\u65e0\u6bdb\u75c5\uff0c\u4f46\u662f\u771f\u6b63\u6267\u884c\u8d77\u6765\u7684\u65f6\u5019\uff0c\u4f60\u4f1a\u770b\u5230\u9664\u4e86\u4e00\u4e2a\u5355\u8bcd\uff0c\u5176\u4ed6\u90fd\u6b63\u5e38\uff0c\u8fd9\u4e2a\u5355\u8bcd\u5c31\u662f constructor  constructor: function Object() { [native code] }1   \u539f\u56e0\u5c31\u662f summary['constructor'] \u8fd9\u4e2a\u4f1a\u53bb\u539f\u578b\u94fe\u8fdb\u884c\u5c5e\u6027\u5bfb\u627e\uff0c\u6700\u7ec8\u627e\u5230\u4e86 summary.__proto__.constructor \uff0c\u4e5f\u5c31\u662f f Object() [native code]", 
            "title": "\u5bf9\u8c61\u5c5e\u6027\u67e5\u627e"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u539f\u578b\u94fe\u4ec0\u4e48\u9b3c/#_5", 
            "text": "\u5bf9\u8c61\u7684\u65b9\u6cd5\u53ef\u4ee5\u770b\u505a\u662f\u5bf9\u8c61\u4e00\u7c7b\u7279\u6b8a\u7684\u5c5e\u6027\uff0c\u6b64\u5904\u5b9a\u4e49\u65f6\u9700\u8981\u6ce8\u610f\u7684\u662f this \u7684\u6307\u5411\u95ee\u9898  var   Person   =   function   ()   { \n   this . name   =   yejiaqi  }  Person . prototype . sayName   =   function   ()   { \n   return   My name is    +   this . name  }  var   p1   =   Person ()  var   p2   =   Person ()  p2 . name   =   yejiaqi2.0  console . log ( p1 . sayName ())  console . log ( p2 . sayName ())", 
            "title": "\u5bf9\u8c61\u65b9\u6cd5"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u539f\u578b\u94fe\u4ec0\u4e48\u9b3c/#new", 
            "text": "\u8fd0\u7b97\u7b26 new \u4f1a\u6267\u884c\u6784\u9020\u51fd\u6570 constructor \uff0c\u5e76\u4e14\u628a this \u7ed1\u5b9a\u5230\u4e00\u4e2a\u65b0\u521b\u5efa\u7684\u5bf9\u8c61\uff0c\u5e76\u4e14\u8fd9\u4e2a\u5bf9\u8c61 __proto__ \u6267\u884c constructor \u7684 prototype  \u53ef\u4ee5\u7528\u4ee5\u4e0b\u8fc7\u7a0b\u6765\u7406\u89e3  function   fakeNew ( constructor ,   args )   { \n   // \u521b\u5efa\u5bf9\u8c61\uff0c\u5e76\u4e14\u8bbe\u7f6e\u5bf9\u8c61\u7684__proto__\u4e3aconstructor.prototype\uff0c\u76f8\u5f53\u4e8e \n   // var newInstance = {} \n   // newInstance.__proto__ = constructor.prototype \n   var   newInstance   =   Object . create ( constructor . prototype ) \n\n   // \u8c03\u7528\u6784\u9020\u51fd\u6570\uff0c\u7ed1\u5b9athis\u5230newInstance \n   var   result   =   constructor . apply ( newInstance ,   args ) \n\n   // \u5982\u679c\u8c03\u7528\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u975enull\u5bf9\u8c61\uff0c\u8fd4\u56de\u8fd9\u4e2a\u5bf9\u8c61 \n   // \u5426\u5219\u8fd4\u56denewInstance \n   // \u6784\u9020\u5b8c\u6bd5 \n   return   result     typeof   result   ===   object   ?   result   :   newInstance  }", 
            "title": "new\u8fc7\u7a0b\u8fdb\u884c\u7684\u64cd\u4f5c"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u539f\u578b\u94fe\u4ec0\u4e48\u9b3c/#_6", 
            "text": "\u6211\u4eec\u53d1\u73b0 constructor \u7684 prototype \u4e5f\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5bf9\u8c61\u5c31\u53ef\u4ee5\u62e5\u6709 __proto__ \u5c5e\u6027, __proto__ \u5c5e\u6027\u5c31\u80fd\u6307\u5411\u521b\u5efa\u4ed6\u7684 constructor \u7684 prototyope \u3002\u4e5f\u5c31\u662f\u8bf4\u53ef\u4ee5\u901a\u8fc7\u8fd9\u6837\u7684\u5faa\u73af\uff0c\u521b\u9020\u51fa\u4e00\u6761\u94fe\u3002\u975e\u5e38\u7ed5\uff0c\u6211\u4eec\u770b\u4e00\u4e2a\u4f8b\u5b50  var   Person   =   function   ()   { \n   this . name   =   yejiaqi  }  Person . prototype . sayName   =   function   ()   { \n   return   My name is    +   this . name  }  var   Man   =   function   ()   { \n   this . gender   =   male  }  // \u6ce8\u610f\u6b64\u5904  Man . prototype   =   new   Person ()    // prototype chain !  Man . prototype . contructor   =   Man    // \u6ce8\u610f\u6b64\u5904  var   m1   =   new   Man ()  console . log ( m1 . name )  console . log ( m1 . gender )   \u4e0a\u8ff0\u7684Man\u5b9e\u4f8b\u7684\u539f\u578b\u94fe\uff1a  m1 . __proto__    // Man.prototype, Person \u7684\u5b9e\u4f8b  m1 . __proto__ . __proto__   // Person.prototype  m1 . __proto__ . __proto__ . __proto    // Object.prototype  m1 . __proto__ . __proto__ . __proto . __proto__    // null   \u6ce8\u610f\u8fd9\u6837\u7684\u64cd\u4f5c  var   Person   =   function   ()   { \n   this . name   =   yejiaqi  }  Person . prototype . sayName   =   function   ()   { \n   return   My name is    +   this . name  }  var   Man   =   function   ()   { \n   this . gender   =   male  }  Man . prototype   =   new   Person ()    // prototype chain !  Man . prototype . contructor   =   Man  var   m1   =   new   Man  // \u6b64\u65f6\u64cd\u4f5c Person \u7684 prototype  Man . prototype   =   { __proto__ :   Man }    // \u8fd9\u4e2a\u64cd\u4f5c\u76f8\u5f53\u4e8e\u66f4\u6362\u5f15\u7528\uff0c\u539f\u6765m1\u7684__proto__ \u5e76\u4e0d\u4f1a\u66f4\u65b0  console . log ( m1 . __proto__   ===   Man . prototype )    // false !!!    \u5173\u952e\u70b9\u603b\u7ed3   constructor \u662f\u51fd\u6570  __proto__ \u548c prototype \u662f\u5bf9\u8c61  \u53ea\u6709\u51fd\u6570\u6709 prototype \u5c5e\u6027  \u5b9e\u4f8b\u5bf9\u8c61\u7f3a\u5c5e\u6027\uff0c\u53bb __proto__ \u5bfb\u627e  \u5b9e\u4f8b\u5bf9\u8c61\u7684 __proto__ \u6307\u5411 constructor \u7684 prototype  constructor.prototype.constructor \u53cd\u5411\u6307\u56de constructor  consturctor.prototype \u4e5f\u662f\u5bf9\u8c61\uff0c\u4e5f\u53ef\u4ee5\u62e5\u6709 __proto__  \u6700\u65b0\u5f62\u6210\u4e86 __proto__ \u94fe  null \u662f\u539f\u578b\u94fe\u7684\u7ed3\u675f\uff0cObject.prototype\u662f\u539f\u578b\u94fe\u7684\u9876\u7aef", 
            "title": "\u539f\u578b\u94fe"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u539f\u578b\u94fe\u4ec0\u4e48\u9b3c/#_7", 
            "text": "\u73b0\u5728\u6211\u4eec\u5bf9\u539f\u578b\u94fe\u6709\u4e86\u5145\u5206\u7684\u7406\u89e3\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u89e3\u91ca\u4e00\u5f00\u59cb\u63d0\u51fa\u7684\u95ee\u9898", 
            "title": "\u6df1\u5165\u539f\u578b\u94fe"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u539f\u578b\u94fe\u4ec0\u4e48\u9b3c/#instanceof", 
            "text": "\u5b9e\u9645\u4e0a\u662f\u6821\u9a8c\u539f\u578b\u94fe  var   Person   =   function   ()   {}  var   Man   =   function   ()   {}  Man . prototype   =   new   Person  Man . prototype . constructor   =   Man  var   SuperMan   =   function   ()   {}  SuperMan . prototype   =   new   Man ()  SuperMan . prototype . constructor   =   SuperMan  var   tiga   =   new   SuperMan ()  tiga   instanceof   SuperMan   // true, tiga.__proto__ == SuperMan.prototype  tiga   instanceof   Man   // true, tiga.__proto__.__proto__ == Man.prototype  tiga   instanceof   Person   // true, tiga.__proto__.__proto__.__proto__ == Person.prototype  // \u53d8\u6362prototype  SuperMan . prototype   =   {}  tiga   instanceof   SuperMan   // false, tiga.__proto__ != SuperMan.prototype  tiga   instanceof   Man   // true, tiga.__proto__.__proto__ == Man.prototype  tiga   instanceof   Person   // true, tiga.__proto__.__proto__.__proto__ == Person.prototype", 
            "title": "instanceof \u7684\u903b\u8f91"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u539f\u578b\u94fe\u4ec0\u4e48\u9b3c/#_8", 
            "text": "Object   instanceof   Object    // true, Object.__proto__.__proto__ == Object.prototype  Function   instanceof   Object   // true, Function.__proto__.__proto__ == Object.prototype  Object   instanceof   Function   // true, Object.__proto__ == Function.prototype  Function   instanceof   Function   // true, Function.__proto__ == Function.prototype  Function . prototype   instanceof   Object   // true, Function.__proto__.__proto__ == Object.prototype  Object . __proto__ . __proto__ . constructor   ==   Object   // true  Function . constructor   ===   Function   // true, \u5bf9\u8c61\u67e5\u627e\uff0cFunction.__proto__.constructor == Function", 
            "title": "\u89e3\u91ca\u95ee\u9898"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u539f\u578b\u94fe\u4ec0\u4e48\u9b3c/#javascript", 
            "text": "\u5728\u4e0a\u56fe\u4e2d\u5206\u6790\u6211\u4eec\u53ef\u4ee5\u7684\u5230  function   Foo ()   {}  Foo . __proto__   ==   Function . prototype   // Foo \u662fFunction\u7684\u5b9e\u4f8b  Function . __proto__   ==   Function . prototype    // \u53ef\u4ee5\u8ba4\u4e3aFunction\u5c31\u662fFunction\u7684\u5b9e\u4f8b  Object . __proto__    ==   Function . prototype   // \u53ef\u4ee5\u8ba4\u4e3aObject\u4e5f\u662fFun\u4f20\u7edf\u7684\u5b9e\u4f8b   \u8fd9\u5c31\u662f\u9e21\u548c\u86cb\u95ee\u9898\u7684\u4ea7\u751f\u7684\u6839\u672c\u539f\u56e0\u3002\u6700\u7ed5\u7684\u5730\u65b9\u5728\u4e8e\u8fd9\u91cc\u539f\u578b\u94fe\u7684\u76f8\u4e92\u5f15\u7528  \u6211\u4eec\u627e\u51fa\u76f4\u63a5\u7684\u539f\u578b\u94fe\uff0c\u6309\u7167 __proto__  Function -  Function.prototype -  Object.prototype -  null\nObject -  Function.prototype -  Object.prototype -  null  \u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u94fe\u7684\u5173\u952e\u5728\u4e8e\u4e00\u4e2a\u5bf9\u8c61\uff0c\u90a3\u5c31\u662f Function.prototype  \u5728console\u4e2d\u6211\u4eec\u8f93\u5165Function.prototype\u53ef\u4ee5\u53d1\u73b0\uff1a   Function.prototype\u662fnative code\u7684\uff0c\u4e5f\u5c31\u662f\u6d4f\u89c8\u5668\u7279\u6b8a\u5b9e\u73b0\u7684\uff0c\u5e76\u4e0d\u662f\u7eafjavascript\u5b9e\u73b0\u7684  Function.prototype\u53ef\u4ee5\u88ab\u8c03\u7528\uff0c\u5e76\u4e14\u6c38\u8fdc\u8fd4\u56deundefined\uff0c\u975e\u5e38\u795e\u5947  Function.prototype instanceof Function \u662ffalse\uff08\u601d\u8003\u4e3a\u4ec0\u4e48\uff09\uff0c typeof Function \u662f function   \u53e6\u5916\u8fd8\u53ef\u4ee5\u53d1\u73b0 Object \uff1a   Object\u672c\u8eab\u662f\u4e2a\uff08\u6784\u9020\uff09\u51fd\u6570\uff0c\u662fFunction\u7684\u5b9e\u4f8b\uff0c\u5373 Object.__proto__ \u5c31\u662f Function.prototype  Object.prototype \u662f\u5bf9\u8c61\u5417\uff1f\u662f\u7684\uff0cjs\u4e2d\u5bf9\u8c61\u7684\u5b9a\u4e49\u5c31\u662f\u5c5e\u6027\u7684\u96c6\u5408\uff0c Object.prototype \u662f\u5bf9\u8c61\uff0c\u4f46\u662f\u4ed6\u4e0d\u662f Object \u7684\u5b9e\u4f8b   \u603b\u7ed3\uff1a\u9e21\u86cb\u95ee\u9898  \u5148\u6709Object.prototype\uff08\u539f\u578b\u94fe\u9876\u7aef\uff09\uff0cFunction.prototype\u7ee7\u627fObject.prototype\u800c\u4ea7\u751f\uff0c\u6700\u540e\uff0cFunction\u548cObject\u548c\u5176\u5b83\u6784\u9020\u51fd\u6570\u7ee7\u627fFunction.prototype\u800c\u4ea7\u751f", 
            "title": "javascript\u9876\u5c42\u539f\u578b\u94fe\u8bbe\u8ba1\u54f2\u5b66"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u539f\u578b\u94fe\u4ec0\u4e48\u9b3c/#further_reading", 
            "text": "MDN Object.prototype  MDN Function.prototype  MDN javascript prototype chain  Class Checking instanceof  Github __proto__ and prototype", 
            "title": "Further Reading"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u95ed\u5305\u4ec0\u4e48\u9b3c/", 
            "text": "JS\u95ed\u5305\u4ec0\u4e48\u9b3c\n\n\n\u524d\u8a00\n\n\n\u95ed\u5305\u95ee\u9898\u662fjs\u4e2d\u6bd4\u8f83\u56f0\u6270\u4eba\u7684\u4e00\u4e2a\u95ee\u9898\uff0c\u73b0\u5728\u6211\u4eec\u6765\u63a2\u7a76\u8fd9\u4e2a\u5230\u5e95\u662f\u4ec0\u4e48\u9b3c\n\n\n\u95ee\u9898\u8d77\u6e90\n\n\n\u95ee\u9898\uff1a\u5faa\u73af\u5f02\u6b65\u8c03\u7528\n\n\n\u5178\u578b\u7684JS\u521d\u5b66\u8005\u72af\u4e0b\u9519\u8bef\n\n\nfor\n \n(\nvar\n \ni\n \n=\n \n0\n;\n \ni\n \n \n10\n;\n \ni\n++\n)\n \n{\n\n  \nsetTimeout\n(\nfunction\n \n()\n \n{\n\n    \nconsole\n.\nlog\n(\ni\n)\n\n  \n})\n\n\n}\n\n\n\n\n\n\u8fd9\u4e2a\u51fd\u6570\u770b\u4e0a\u53bb\u5e94\u8be5\u8f93\u51fa0 , 1 , 2, 3, 4, 5, 6, 7, 8, 9\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u6267\u884c\u4f1a\u53d1\u73b0\u8f93\u51fa\u4e8610\u4e2a10\n\n\n\u4e3a\u4ec0\u4e48\uff1f\n\n\n\n\n\u95ed\u5305\n\n\njs\u95ed\u5305\u6700\u7b80\u5355\u7684\u89e3\u91ca\uff1a\u51fd\u6570x\u8fd4\u56de\u51fd\u6570y\uff0cy\u4e2d\u6240\u6709\u7684\u5916\u5c42\u53d8\u91cf\uff08\u5305\u62ecx\u7684\u53d8\u91cf\uff09\u5f62\u6210\u95ed\u5305\u3002\u5728y\u4e2d\u53ef\u4ee5\u4f7f\u7528\u5916\u5c42\u6240\u6709\u7684\u53d8\u91cf\uff0c\u5e76\u4e14y\u5f15\u7528\u7684x\u4e2d\u7684\u53d8\u91cf\u5c06\u4f1a\u4e0e\u51fd\u6570y\u5171\u5b58\u4ea1\uff0c\u5373\u4f7fx\u5df2\u7ecf\u8fd0\u884c\u5b8c\u6bd5\u88ab\u9500\u6bc1\u3002\n\n\nExample:\n\n\nfunction\n \ninner\n\n\n\n\n\n\u8bcd\u6cd5\u4f5c\u7528\u57df\n\n\n\n\nIn languages with lexical scope (also called static scope), name resolution depends on the location in the source code and the lexical context, which is defined by where the named variable or function is defined\n\u5728\u4f7f\u7528\u8bcd\u6cd5\u4f5c\u7528\u57df\uff08\u9759\u6001\u4f5c\u7528\u57df\uff09\u7684\u8bed\u8a00\u4e2d\uff0c\u540d\u5b57\u89e3\u6790\u4f9d\u8d56\u4e8e\u540d\u5b57\u5728\u4ee3\u7801\u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e\u4ee5\u53ca\u8bcd\u6cd5\u4e0a\u4e0b\u6587\uff0c\u800c\u8fd9\u662f\u5728\u547d\u540d\u7684\u53d8\u91cf\u6216\u51fd\u6570\u5904\u5b9a\u4e49\u7684\u3002\n\n\n\n\nExample:\n\n\nfunction\n \np\n \n()\n \n{\n\n  \nprint\n \nx\n\n\n}\n\n\n\nfunction\n \nq\n \n()\n \n{\n\n  \nvariable\n \nx\n \n=\n \n1\n\n  \np\n()\n\n\n}\n\n\n\n\n\n\u4ee5\u4e0a\u51fd\u6570\u793a\u4f8b\u6f14\u793a\u7684\u662f\u52a8\u6001\u4f5c\u7528\u57df\u7684\u95ed\u5305\u3002\u8fd9\u4e2a\u5728\u8bcd\u6cd5\u4f5c\u7528\u57df\u7684\u8bed\u8a00\u4e2d\u5c06\u65e0\u6cd5\u4f7f\u7528\uff0c\u56e0\u4e3a\u5728\u8bcd\u6cd5\u4f5c\u7528\u57df\u4e2d\uff0c\u540d\u5b57\u89e3\u6790\u662f\u4f9d\u8d56\u4e8e\u540d\u5b57\u6240\u5728\u4ee3\u7801\u7684\u4f4d\u7f6e\u4ee5\u53ca\u8bcd\u6cd5\u4e0a\u4e0b\u6587\u7684\u3002\u5728\u51fd\u6570p\u5b9a\u4e49\u7684\u65f6\u5019\uff0c\u663e\u7136\u5728\u4ed6\u7684\u8bcd\u6cd5\u4e0a\u4e0b\u6587\u4e2d\u5e76\u4e0d\u80fd\u627e\u5230\u53d8\u91cf\nx\n\u7684\u89e3\u6790\u7ed3\u679c\uff0c\u56e0\u6b64\u8fd9\u79cd\u60c5\u5f62\u5728\u8bcd\u6cd5\u4f5c\u7528\u57df\u4e2d\u65e0\u6548\u3002\n\n\n\u73b0\u4ee3\u7f16\u7a0b\u8bed\u8a00\u5927\u591a\u6570\u4f7f\u7528\u8bcd\u6cd5\u4f5c\u7528\u57df\uff0c\u5176\u4e2d\u5305\u62ec\u6211\u4eec\u65e5\u5e38\u4f7f\u7528\u7684Python\u3001Javascript\u3002\n\n\n\u521d\u5b66\u8005\u5bf9\u8bcd\u6cd5\u4f5c\u7528\u57df\u7684\"\u95ed\u5305\"\u4f1a\u975e\u5e38\u7591\u60d1\uff0c\u9700\u8981\u7406\u89e3\u7684\u662f\u201c\u8bcd\u6cd5\u4f5c\u7528\u57df\u4e2d\u7684\u95ed\u5305\uff0c\u53d6\u51b3\u4e8e\u95ed\u5305\n\u5b9a\u4e49\n\u65f6\u5019\u7684\u4e0a\u4e0b\u6587\uff0c\u800c\u4e0d\u662f\u8c03\u7528\u4ed6\u7684\u65f6\u5019\u7684\u4e0a\u4e0b\u6587\u201d\u3002\n\n\nExample: \u6709\u6548\u95ed\u5305\n\n\nfunction\n \nouter\n \n()\n \n{\n\n  \nvar\n \nvalue\n \n=\n \n0\n\n  \nreturn\n \nfunction\n \ninner\n \n()\n \n{\n\n    \nreturn\n \nvalue\n++\n\n  \n}\n\n\n}\n\n\n\nvar\n \ncount\n \n=\n \nouter\n()\n\n\n\ncount\n()\n \n// 0\n\n\ncount\n()\n \n// 1\n\n\ncount\n()\n \n// 2\n\n\n\n\n\nExample\uff1a\u65e0\u6548\u95ed\u5305\n\nfunction\n \ninner\n \n()\n \n{\n\n  \nreturn\n \nvalue\n++\n\n\n}\n\n\n\nfunction\n \nouter\n \n()\n \n{\n\n  \nvar\n \nvalue\n \n=\n \n0\n\n  \nreturn\n \ninner\n\n\n}\n\n\n\nvar\n \ncount\n \n=\n \nouter\n()\n\n\n\ncount\n()\n \n// Uncaught ReferenceError: value is not defined\n\n\n\n\n\u51fd\u6570\u4f5c\u7528\u57df\n\n\n\u8981\u70b9\uff1a\n\n\n\n\n\u6bcf\u4e2ajavascript\u7684\n\u51fd\u6570\n\u4f1a\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684\u4f5c\u7528\u57df\n\n\n\u4f5c\u7528\u57df\u51b3\u5b9a\u53d8\u91cf\u7684\u53ef\u8bbf\u95ee\u6027\n\n\n\u5728\u4e00\u4e2a\u51fd\u6570\u5185\u90e8\u5b9a\u4e49\u7684\u5c40\u90e8\u53d8\u91cf\u662f\u4e0d\u80fd\u5728\u51fd\u6570\u5916\u8bbf\u95ee\u7684\n\n\n\u76f8\u53cd\uff0c\u5728\u4e00\u4e2a\u51fd\u6570\u5185\u5b9a\u4e49\u7684\u53d8\u91cf\u53ef\u4ee5\u5728\u51fd\u6570\u5185\u88ab\u8bbf\u95ee\n\n\n\n\nExample\uff1a\n\n\nfunction\n \nf\n \n()\n \n{\n\n  \nvar\n \nx\n \n=\n \n1\n\n  \n// \u51fd\u6570\u5185\u90e8\u53ef\u4ee5\u8bbf\u95ee\u5230x\n\n  \nfunction\n \ng\n \n()\n \n{\n\n    \nvar\n \ny\n \n=\n \nx\n  \n// \u51fd\u6570\u5185\u90e8\u7684\u51fd\u6570\u4e5f\u53ef\u4ee5\u8bbf\u95ee\u5230\u53d8\u91cf\n\n  \n}\n\n  \nconsole\n.\nlog\n(\nx\n)\n\n\n}\n\n\n\n\n\nvar\u53d8\u91cf\u63d0\u5347\n\n\n\u6ce8\u610f\nvar\n\u58f0\u660e\u7684\u53d8\u91cf\u5177\u6709\u53d8\u91cf\u63d0\u5347\u7684\u7279\u6027\uff0c\u5728\u51fd\u6570\u4f5c\u7528\u57df\u4e2d\u65e0\u8bba\u5728\u4f55\u5904\u58f0\u660e\uff0c\u5904\u5904\u53ef\u4f7f\u7528\u3002\u4f46\u662f\u6309\u7167\u89c4\u8303\u4e00\u822c\u90fd\u5148\u58f0\u660e\u518d\u8fdb\u884c\u4f7f\u7528\u3002\n\n\nExample\uff1a\n\n\nfunction\n \nf\n \n()\n \n{\n\n  \n// \u53d8\u91cf\u63d0\u5347\uff0c\u6b64\u5904\u4e0d\u662f\u5168\u5c40\u53d8\u91cf\n\n  \nx\n \n=\n \n1\n\n  \nconsole\n.\nlog\n(\nx\n)\n\n  \nvar\n \nx\n\n\n}\n\n\n\n\n\nvar\u975e\u5757\u7ea7\u4f5c\u7528\u57df\n\n\n\u770b\u4ee5\u4e0b\u4f8b\u5b50\n\n\nfunction\n \nf\n \n()\n \n{\n\n  \nvar\n \narr\n \n=\n \n[\n1\n,\n2\n,\n3\n,\n4\n,\n5\n]\n\n  \nfor\n \n(\nvar\n \nx\n \nof\n \narr\n)\n \n{\n\n    \n// loop\n\n  \n}\n\n  \nconsole\n.\nlog\n(\nx\n)\n \n// 5\n\n\n  \nif\n \n(\ntrue\n)\n \n{\n\n    \nvar\n \ny\n \n=\n \n5\n  \n// \u4e0d\u5b58\u5728\u5757\u7ea7\u4f5c\u7528\u57df\n\n  \n}\n\n  \nconsole\n.\nlog\n(\ny\n)\n \n// 5\n\n\n}\n\n\n\n\n\nes6 let\u7684\u5757\u7ea7\u4f5c\u7528\u57df\n\n\n\u89e3\u51b3\u95ee\u9898\n\n\n\u5faa\u73af\u5f02\u6b65\u8c03\u7528\u95ee\u9898\u89e3\u51b3\n\n\n\u4f7f\u7528var, \u51fd\u6570\u4f5c\u7528\u57df\n\n\n\u4f7f\u7528let, \u5757\u7ea7\u4f5c\u7528\u57df\n\n\n\u5185\u5b58\u6cc4\u6f0f\u95ee\u9898\n\n\n\n\nFurther Reading\n\n\n\n\nwikipedia: Scope\n\n\nwhat is javascript lexial scope?", 
            "title": "JS\u95ed\u5305\u4ec0\u4e48\u9b3c"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u95ed\u5305\u4ec0\u4e48\u9b3c/#js", 
            "text": "", 
            "title": "JS\u95ed\u5305\u4ec0\u4e48\u9b3c"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u95ed\u5305\u4ec0\u4e48\u9b3c/#_1", 
            "text": "\u95ed\u5305\u95ee\u9898\u662fjs\u4e2d\u6bd4\u8f83\u56f0\u6270\u4eba\u7684\u4e00\u4e2a\u95ee\u9898\uff0c\u73b0\u5728\u6211\u4eec\u6765\u63a2\u7a76\u8fd9\u4e2a\u5230\u5e95\u662f\u4ec0\u4e48\u9b3c", 
            "title": "\u524d\u8a00"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u95ed\u5305\u4ec0\u4e48\u9b3c/#_2", 
            "text": "", 
            "title": "\u95ee\u9898\u8d77\u6e90"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u95ed\u5305\u4ec0\u4e48\u9b3c/#_3", 
            "text": "\u5178\u578b\u7684JS\u521d\u5b66\u8005\u72af\u4e0b\u9519\u8bef  for   ( var   i   =   0 ;   i     10 ;   i ++ )   { \n   setTimeout ( function   ()   { \n     console . log ( i ) \n   })  }   \u8fd9\u4e2a\u51fd\u6570\u770b\u4e0a\u53bb\u5e94\u8be5\u8f93\u51fa0 , 1 , 2, 3, 4, 5, 6, 7, 8, 9\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u6267\u884c\u4f1a\u53d1\u73b0\u8f93\u51fa\u4e8610\u4e2a10  \u4e3a\u4ec0\u4e48\uff1f", 
            "title": "\u95ee\u9898\uff1a\u5faa\u73af\u5f02\u6b65\u8c03\u7528"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u95ed\u5305\u4ec0\u4e48\u9b3c/#_4", 
            "text": "js\u95ed\u5305\u6700\u7b80\u5355\u7684\u89e3\u91ca\uff1a\u51fd\u6570x\u8fd4\u56de\u51fd\u6570y\uff0cy\u4e2d\u6240\u6709\u7684\u5916\u5c42\u53d8\u91cf\uff08\u5305\u62ecx\u7684\u53d8\u91cf\uff09\u5f62\u6210\u95ed\u5305\u3002\u5728y\u4e2d\u53ef\u4ee5\u4f7f\u7528\u5916\u5c42\u6240\u6709\u7684\u53d8\u91cf\uff0c\u5e76\u4e14y\u5f15\u7528\u7684x\u4e2d\u7684\u53d8\u91cf\u5c06\u4f1a\u4e0e\u51fd\u6570y\u5171\u5b58\u4ea1\uff0c\u5373\u4f7fx\u5df2\u7ecf\u8fd0\u884c\u5b8c\u6bd5\u88ab\u9500\u6bc1\u3002  Example:  function   inner", 
            "title": "\u95ed\u5305"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u95ed\u5305\u4ec0\u4e48\u9b3c/#_5", 
            "text": "In languages with lexical scope (also called static scope), name resolution depends on the location in the source code and the lexical context, which is defined by where the named variable or function is defined\n\u5728\u4f7f\u7528\u8bcd\u6cd5\u4f5c\u7528\u57df\uff08\u9759\u6001\u4f5c\u7528\u57df\uff09\u7684\u8bed\u8a00\u4e2d\uff0c\u540d\u5b57\u89e3\u6790\u4f9d\u8d56\u4e8e\u540d\u5b57\u5728\u4ee3\u7801\u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e\u4ee5\u53ca\u8bcd\u6cd5\u4e0a\u4e0b\u6587\uff0c\u800c\u8fd9\u662f\u5728\u547d\u540d\u7684\u53d8\u91cf\u6216\u51fd\u6570\u5904\u5b9a\u4e49\u7684\u3002   Example:  function   p   ()   { \n   print   x  }  function   q   ()   { \n   variable   x   =   1 \n   p ()  }   \u4ee5\u4e0a\u51fd\u6570\u793a\u4f8b\u6f14\u793a\u7684\u662f\u52a8\u6001\u4f5c\u7528\u57df\u7684\u95ed\u5305\u3002\u8fd9\u4e2a\u5728\u8bcd\u6cd5\u4f5c\u7528\u57df\u7684\u8bed\u8a00\u4e2d\u5c06\u65e0\u6cd5\u4f7f\u7528\uff0c\u56e0\u4e3a\u5728\u8bcd\u6cd5\u4f5c\u7528\u57df\u4e2d\uff0c\u540d\u5b57\u89e3\u6790\u662f\u4f9d\u8d56\u4e8e\u540d\u5b57\u6240\u5728\u4ee3\u7801\u7684\u4f4d\u7f6e\u4ee5\u53ca\u8bcd\u6cd5\u4e0a\u4e0b\u6587\u7684\u3002\u5728\u51fd\u6570p\u5b9a\u4e49\u7684\u65f6\u5019\uff0c\u663e\u7136\u5728\u4ed6\u7684\u8bcd\u6cd5\u4e0a\u4e0b\u6587\u4e2d\u5e76\u4e0d\u80fd\u627e\u5230\u53d8\u91cf x \u7684\u89e3\u6790\u7ed3\u679c\uff0c\u56e0\u6b64\u8fd9\u79cd\u60c5\u5f62\u5728\u8bcd\u6cd5\u4f5c\u7528\u57df\u4e2d\u65e0\u6548\u3002  \u73b0\u4ee3\u7f16\u7a0b\u8bed\u8a00\u5927\u591a\u6570\u4f7f\u7528\u8bcd\u6cd5\u4f5c\u7528\u57df\uff0c\u5176\u4e2d\u5305\u62ec\u6211\u4eec\u65e5\u5e38\u4f7f\u7528\u7684Python\u3001Javascript\u3002  \u521d\u5b66\u8005\u5bf9\u8bcd\u6cd5\u4f5c\u7528\u57df\u7684\"\u95ed\u5305\"\u4f1a\u975e\u5e38\u7591\u60d1\uff0c\u9700\u8981\u7406\u89e3\u7684\u662f\u201c\u8bcd\u6cd5\u4f5c\u7528\u57df\u4e2d\u7684\u95ed\u5305\uff0c\u53d6\u51b3\u4e8e\u95ed\u5305 \u5b9a\u4e49 \u65f6\u5019\u7684\u4e0a\u4e0b\u6587\uff0c\u800c\u4e0d\u662f\u8c03\u7528\u4ed6\u7684\u65f6\u5019\u7684\u4e0a\u4e0b\u6587\u201d\u3002  Example: \u6709\u6548\u95ed\u5305  function   outer   ()   { \n   var   value   =   0 \n   return   function   inner   ()   { \n     return   value ++ \n   }  }  var   count   =   outer ()  count ()   // 0  count ()   // 1  count ()   // 2   Example\uff1a\u65e0\u6548\u95ed\u5305 function   inner   ()   { \n   return   value ++  }  function   outer   ()   { \n   var   value   =   0 \n   return   inner  }  var   count   =   outer ()  count ()   // Uncaught ReferenceError: value is not defined", 
            "title": "\u8bcd\u6cd5\u4f5c\u7528\u57df"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u95ed\u5305\u4ec0\u4e48\u9b3c/#_6", 
            "text": "\u8981\u70b9\uff1a   \u6bcf\u4e2ajavascript\u7684 \u51fd\u6570 \u4f1a\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684\u4f5c\u7528\u57df  \u4f5c\u7528\u57df\u51b3\u5b9a\u53d8\u91cf\u7684\u53ef\u8bbf\u95ee\u6027  \u5728\u4e00\u4e2a\u51fd\u6570\u5185\u90e8\u5b9a\u4e49\u7684\u5c40\u90e8\u53d8\u91cf\u662f\u4e0d\u80fd\u5728\u51fd\u6570\u5916\u8bbf\u95ee\u7684  \u76f8\u53cd\uff0c\u5728\u4e00\u4e2a\u51fd\u6570\u5185\u5b9a\u4e49\u7684\u53d8\u91cf\u53ef\u4ee5\u5728\u51fd\u6570\u5185\u88ab\u8bbf\u95ee   Example\uff1a  function   f   ()   { \n   var   x   =   1 \n   // \u51fd\u6570\u5185\u90e8\u53ef\u4ee5\u8bbf\u95ee\u5230x \n   function   g   ()   { \n     var   y   =   x    // \u51fd\u6570\u5185\u90e8\u7684\u51fd\u6570\u4e5f\u53ef\u4ee5\u8bbf\u95ee\u5230\u53d8\u91cf \n   } \n   console . log ( x )  }", 
            "title": "\u51fd\u6570\u4f5c\u7528\u57df"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u95ed\u5305\u4ec0\u4e48\u9b3c/#var", 
            "text": "\u6ce8\u610f var \u58f0\u660e\u7684\u53d8\u91cf\u5177\u6709\u53d8\u91cf\u63d0\u5347\u7684\u7279\u6027\uff0c\u5728\u51fd\u6570\u4f5c\u7528\u57df\u4e2d\u65e0\u8bba\u5728\u4f55\u5904\u58f0\u660e\uff0c\u5904\u5904\u53ef\u4f7f\u7528\u3002\u4f46\u662f\u6309\u7167\u89c4\u8303\u4e00\u822c\u90fd\u5148\u58f0\u660e\u518d\u8fdb\u884c\u4f7f\u7528\u3002  Example\uff1a  function   f   ()   { \n   // \u53d8\u91cf\u63d0\u5347\uff0c\u6b64\u5904\u4e0d\u662f\u5168\u5c40\u53d8\u91cf \n   x   =   1 \n   console . log ( x ) \n   var   x  }", 
            "title": "var\u53d8\u91cf\u63d0\u5347"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u95ed\u5305\u4ec0\u4e48\u9b3c/#var_1", 
            "text": "\u770b\u4ee5\u4e0b\u4f8b\u5b50  function   f   ()   { \n   var   arr   =   [ 1 , 2 , 3 , 4 , 5 ] \n   for   ( var   x   of   arr )   { \n     // loop \n   } \n   console . log ( x )   // 5 \n\n   if   ( true )   { \n     var   y   =   5    // \u4e0d\u5b58\u5728\u5757\u7ea7\u4f5c\u7528\u57df \n   } \n   console . log ( y )   // 5  }", 
            "title": "var\u975e\u5757\u7ea7\u4f5c\u7528\u57df"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u95ed\u5305\u4ec0\u4e48\u9b3c/#es6_let", 
            "text": "", 
            "title": "es6 let\u7684\u5757\u7ea7\u4f5c\u7528\u57df"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u95ed\u5305\u4ec0\u4e48\u9b3c/#_7", 
            "text": "\u5faa\u73af\u5f02\u6b65\u8c03\u7528\u95ee\u9898\u89e3\u51b3", 
            "title": "\u89e3\u51b3\u95ee\u9898"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u95ed\u5305\u4ec0\u4e48\u9b3c/#var_2", 
            "text": "", 
            "title": "\u4f7f\u7528var, \u51fd\u6570\u4f5c\u7528\u57df"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u95ed\u5305\u4ec0\u4e48\u9b3c/#let", 
            "text": "", 
            "title": "\u4f7f\u7528let, \u5757\u7ea7\u4f5c\u7528\u57df"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u95ed\u5305\u4ec0\u4e48\u9b3c/#_8", 
            "text": "", 
            "title": "\u5185\u5b58\u6cc4\u6f0f\u95ee\u9898"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u95ed\u5305\u4ec0\u4e48\u9b3c/#further_reading", 
            "text": "wikipedia: Scope  what is javascript lexial scope?", 
            "title": "Further Reading"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u7684this\u4ec0\u4e48\u9b3c/", 
            "text": "Know this,use this!\n\n\n\u6458\u5f55\u81ea\uff1a\nlink\n\n\n\n\nthis\u5e94\u8be5\u662f\u4e00\u4e2a\u8ba8\u8bba\u4e86\u5f88\u4e45\u7684\u8bdd\u9898\u4e86\u3002\u5176\u4e2d\uff0c\u5173\u4e8ethis\u7684\u6587\u7ae0\uff0c\u5728\u5f88\u591a\u7684\u535a\u5ba2\u5f53\u4e2d\u4e5f\u6709\u5f88\u591a\u4ecb\u7ecd\uff0c\u4f46\u662f\uff0c\u4ee5\u524d\u6211\u90fd\u662f\u4e00\u77e5\u534a\u89e3\u7684\u53bb\u4e86\u89e3\u5b83\uff0c\u5c31\u662f\u770b\u535a\u5ba2\u5f53\u4e2d\uff0c\u53ea\u4ecb\u7ecd\u4e86\u4e00\u4e9b\u60c5\u51b5\u4e0b\u7684 this \u7684\u4f7f\u7528\u65b9\u5f0f\uff0c\u4f46\u662f\u4e5f\u5e76\u6ca1\u6709\u81ea\u5df1\u53bb\u505a\u8fc7\u603b\u7ed3\u3002\u521a\u597d\u662f\u5728\u6398\u91d1\u5f53\u4e2d\u6709\u770b\u5230\u4e00\u7bc7\u5173\u4e8ethis\u7684\u4e00\u4e9b\u8be6\u7ec6\u6587\u7ae0\uff0c\u6587\u672b\u4f1a\u9644\u4e0a\u94fe\u63a5\u4ee5\u53ca\u82f1\u6587\u539f\u6587\uff0c\u8fd9\u91cc\u7eaf\u7cb9\u662f\u81ea\u5df1\u8fdb\u884c\u4e00\u4e2a\u603b\u7ed3\uff0c\u4ee5\u540e\u65b9\u4fbf\u81ea\u5df1\u8fdb\u884c\u56de\u987e\u4ee5\u53ca\u52a0\u6df1\u5370\u8c61\u3002\u5e0c\u671b\u8fd9\u7bc7\u6587\u7ae0\u5bf9\u4e8e\u4f60\u4e86\u89e3this\u6709\u4e00\u5b9a\u7684\u5e2e\u52a9\uff0c\u6587\u672b\u8fd8\u6709\u4e00\u4e9b\u7ec3\u4e60\u9898\u5662~\u5e0c\u671b\u771f\u7684\u5bf9\u4f60\u4eec\u6709\u5e2e\u52a9\u3002(\u56e0\u4e3a\u5199\u9879\u76ee\u8fc7\u7a0b\u4e2d\uff0c\u4e00\u76f4\u88ab this \u5751\u8fc7\uff0c\u5374\u627e\u4e86\u5f88\u4e45\u7684 bug \uff0c\u6211\u771f\u662f \u4e50\u4e86\u72d7)\n\n\n\n\n\u5728\u4e86\u89e3this\u4e4b\u524d\uff0c\u76f8\u4fe1\u5927\u5bb6\u90fd\u5e94\u8be5\u4f1a\u77e5\u9053\u4f5c\u7528\u57df\u8fd9\u4e2a\u77e5\u8bc6\u70b9\u7684\u5b58\u5728\uff0c\u51fd\u6570\u5728\u521b\u5efa\u4e4b\u540e\uff0c\u4f1a\u6784\u5efa\u81ea\u5df1\u7684\u6267\u884c\u73af\u5883\u4ee5\u53ca\u4f5c\u7528\u57df\uff0c\u8fd9\u662f\u4e00\u5f00\u59cb\u5c31\u786e\u5b9a\u4e86\u3002\u4f46\u662f\u5b9e\u9645\u7684\u4e0a\u4e0b\u6587(context)\u73af\u5883\uff0c\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u5c31\u662fthis\uff0c\u5b83\u662f\u52a8\u6001\u786e\u5b9a\u7684\uff0c\u5373\u5728\u51fd\u6570\u8fd0\u884c\u65f6\u624d\u786e\u5b9athis\u6240\u6307\u5411\u7684\u5bf9\u8c61\uff0c\u800c\u975e\u58f0\u660e\u65f6\u6240\u6307\u5411\u7684\u5bf9\u8c61\u3002\n\n\n\u5173\u4e8ethis\uff0c\u603b\u7ed3\u8d77\u6765\uff0c\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u4e2a\u9014\u5f84\u80fd\u591f\u88ab\u8fd0\u7528\u5230\u3002\n\n\n\u5bf9\u8c61\u65b9\u6cd5\u4e2d\u8c03\u7528this\n\n\n\u5982\u679c\u51fd\u6570\u88ab\u5f53\u4e2d\u5bf9\u8c61\u7684\u4e00\u4e2a\u65b9\u6cd5\u8fdb\u884c\u8c03\u7528\uff0c\u5219this\u503c\u6307\u5411\u8be5\u5bf9\u8c61\u3002\n\nvar person = {\n    name: \nAlice\n,\n    sayName: function() {\n        alert(\nwelcome \n + this.name);\n    }\n}\n\nperson.sayName();    // this == person, alert: \nwelcome Alice\n\n\n\n\u5728\u8fd9\u91cc\uff0c\u51fd\u6570\u7684this\u6307\u5411\u8be5\u5bf9\u8c61(\u5373 person)\uff1b\u4f46\u662f\u6709\u4e00\u70b9\u9700\u8981\u6ce8\u610f\uff0c\u5c31\u662f\u5f53\u5bf9\u8c61\u7684\u65b9\u6cd5\u88ab\u8d4b\u4e88\u7ed9\u4e00\u4e2a\u53d8\u91cf\u65f6\uff0c\u5176\u5219\u53d8\u4e3a\u4e86\u51fd\u6570\u89e6\u53d1\uff0c\u6b64\u65f6\u7684this\u4e3a window \u6216\u8005 undefined(\u4e25\u683c\u6a21\u5f0f\u4e0b)\uff0c\u5982\u4e0b\uff1a\n\nvar name = \nBob\n;\nvar person;    // \u5373\u4e0a\u9762\u7684\u5b9a\u4e49\uff0c\u6b64\u4e0d\u62d3\u5c55\u8be6\u7ec6\uff0c\u76f4\u63a5\u4f7f\u7528\n\nvar say = person.sayName;    // this == window || undefined\nsay();    // \nwelcome Bob\n || throw an error: Cannot read property \nname\n of undefined(...)\n\n\n\n\u51fd\u6570\u5185\u90e8\u4f7f\u7528\n\n\n\u5728\u51fd\u6570\u5185\u90e8\u5f53\u4e2d\u4f7f\u7528\u4e86 this\uff0c\u5373\u51fd\u6570\u88ab\u5f53\u505a\u65b9\u6cd5\u4f7f\u7528\uff0c\u4e0d\u540c\u4e8e 1 \u5f53\u4e2d\u4f5c\u4e3a\u5bf9\u8c61\u7684\u65b9\u6cd5\u4f7f\u7528\uff0c\u6b64\u65f6\u8c03\u7528\uff0c\u662f\u5728\u5168\u5c40\u4f5c\u7528\u57df\u4e0b\u8fdb\u884c\u8c03\u7528\uff0c\u5373\u5728window\u4e0b\u8fdb\u884c\u8c03\u7528\uff0c\u7531\u5b9a\u4e49\u53ef\u4ee5\u77e5\u9053\uff0c\u5728\u5168\u5c40\u4f5c\u7528\u57df\u4e0b\u58f0\u660e\u4e00\u4e2a\u51fd\u6570\uff0c\u5176\u81ea\u52a8\u52a0\u4e3awindow\u7684\u4e00\u4e2a\u5c5e\u6027\u3002this\u6b64\u65f6\u540d\u6b63\u8a00\u987a\u7684\u4f1a\u6307\u5411window\uff0c\u4e25\u683c\u6a21\u5f0f\u4e0b\u4e3a undefined\n\nfunction sayThis() {\n    alert(this == window);// true\n}\n\n\n\u7ed3\u5408\u7b2c\u4e00\u70b9\uff0c\u51fd\u6570\u4f5c\u4e3a\u5bf9\u8c61\u7684\u4e00\u4e2a\u65b9\u6cd5\u4f7f\u7528\uff0c\u8fd9\u91cc\u5b58\u5728\u4e00\u4e2a\u5c0f\u5751\uff0c\u5373\u95ed\u5305\uff0c\u5565\u662f\u95ed\u5305\uff0c\u8fd9\u4e2a\u5728\u8fd9\u91cc\u5c31\u4e0d\u626f\u5f00\u4e86\uff0c\u6700\u7b80\u5355\u7684\u7406\u89e3\u5c31\u662f Function that returns function\uff0c\u5982\u679c\u4e0d\u7406\u89e3\u4ec0\u4e48\u662f\u95ed\u5305\u7684\u8bdd\uff0c\u53ef\u4ee5\u53bb\u7ffb\u7ffb \u300aJavaScript \u9ad8\u7ea7\u7a0b\u5e8f\u8bbe\u8ba1\u300b\u7b2c\u4e03\u7ae0\u5173\u4e8e\u95ed\u5305\u7684\u76f8\u5173\u5185\u5bb9\u3002\u7b2c\u4e00\u70b9\u5f53\u4e2d\u5b58\u5728\u4e00\u4e2a\u5c0f\u5751\uff0c\u5c31\u662f\u5c06\u5bf9\u8c61\u7684\u65b9\u6cd5\u8d4b\u4e88\u7ed9\u4e00\u4e2a\u53d8\u91cf\u7684\u65f6\u5019\uff0c\u5176\u53d8\u4e3a\u51fd\u6570\u89e6\u53d1\uff0c\u6b64\u65f6\u7684 this \u5b9e\u9645\u4e0a\u662f\u6307\u5411 window(\u975e\u4e25\u683c\u6a21\u5f0f)\u3002\n\n\n\u90a3\u4e48\uff0c\u5f53\u51fd\u6570\u4e2d\u8fd4\u56de\u4e00\u4e2a\u51fd\u6570\uff0c\u6b64\u65f6\u5728\u5bf9\u8c61\u5f53\u4e2d\u8c03\u7528\u8be5\u65b9\u6cd5\uff0c\u5176\u5c31\u76f8\u5f53\u4e8e\u662f\u51fd\u6570\u89e6\u53d1\uff0c\u6b64\u65f6\u7684 this\uff0c\u5728\u4e0d\u505a\u4efb\u4f55\u4e0a\u4e0b\u6587\u7ed1\u5b9a\u7684\u524d\u63d0\u4e4b\u4e0b\uff0c\u5176\u6307\u5411 window(\u975e\u4e25\u683c\u6a21\u5f0f)\u3002\n\nvar name = \nBob\n,\n    person = {\n        name: \nAlice\n,\n        sayName: function() {\n            console.log(this === person);    // true\n            return function() {\n                console.log(this === person);    // false\n                console.log(this === window);    // true\n                console.log(this.name);          // Bob\n            };\n        }\n    };\n\nperson.sayName()();\n\n\n\u5f53\u7136\uff0c\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u65b9\u6cd5\uff0c\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u7ed9\u4ed6\u7ed1\u5b9a\u4e00\u4e2a\u4e0a\u4e0b\u6587\u3002\n\nvar name = \nBob\n,\n    person = {\n        name: \nAlice\n,\n        sayName: function() {\n            console.log(this === person);// true\n            return function() {\n                console.log(this === person);    // true\n                console.log(this === window);    // false\n                console.log(this.name);          // Alice\n            }.bind(this);\n        }\n    };\n\nperson.sayName()();\n\n\n\nnew \u5f53\u4e2d\u8fdb\u884c\u4f7f\u7528\n\n\n\u6211\u4eec\u77e5\u9053\u5728\u4f7f\u7528 new \u65b9\u6cd5\u521b\u5efa\u5bf9\u8c61\u7684\u65f6\u5019\uff0c\u4f1a\u7ecf\u8fc7\u5982\u4e0b\u8fd9\u4e9b\u4e2a\u8fc7\u7a0b\uff1a\n\u521b\u5efa\u5bf9\u8c61\uff0c\u5c06 this \u503c\u8d4b\u4e88\u65b0\u7684\u5bf9\u8c61\n\u8c03\u7528\u6784\u9020\u51fd\u6570\uff0c\u4e3a this \u6dfb\u52a0\u5c5e\u6027\u548c\u65b9\u6cd5\n\u8fd4\u56de this \u7ed9\u5f53\u524d\u7684\u5bf9\u8c61\n\nfunction Person(name, age) {\n    this.name = name;\n    this.age = age;\n}\n\nvar person1 = new Person(\nAlice\n, 29);\nconsole.log(person1.name);    // Alice\n\n\n\u8fd9\u91cc\u8981\u8bb0\u5f97\u4f7f\u7528 new \u8fd0\u7b97\u7b26\uff0c\u5426\u5219\uff0c\u5176\u53ea\u80fd\u7b97\u662f\u666e\u901a\u7684\u8c03\u7528\uff0c\u800c\u4e0d\u662f\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5b9e\u4f8b\u5bf9\u8c61\u3002\u800c\u5f53\u505a\u666e\u901a\u51fd\u6570\u8c03\u7528\u7684\u8bdd\uff0c\u5b9e\u9645\u4e0a\u5373 \u7b2c 2 \u79cd\u60c5\u51b5\u4e0b\uff0c\u5bf9\u51fd\u6570\u666e\u901a\u8c03\u7528\uff0c\u6b64\u65f6\u7684 this \u6307\u5411 window\n\nfunction Person(name, age) {\n    this.name = name;\n    this.age = age;\n    return this;\n}\n\nvar person1 = Person(\nAlice\n, 29);\nconsole.log(person1.name);    // Alice\nconsole.log(window.name);     // Alice\nconsole.log(person1 === window);    // true\n\n\n\u8fd9\u662f\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0cthis \u4f1a\u6b63\u786e\u8fd4\u56de\u5e76\u4e14\u6307\u5411\u8be5\u5bf9\u8c61\uff0c\u4f46\u662f\u5728\u6784\u9020\u51fd\u6570\u5f53\u4e2d\uff0c\u5982\u679c\u8fd4\u56de\u4e86\u4e00\u4e2a\u5bf9\u8c61\uff0c\u90a3\u4e48 this \u4f1a\u6307\u5411\u8fd4\u56de\u7684\u90a3\u4e2a\u5bf9\u8c61\u3002\n\nfunction Person(name, age) {\n    this.name = name;\n    this.age = age;\n    return {\n        name: \nBob\n\n    };\n}\n\nvar person1 = new Person(\nAlice\n);\nconsole.log(person1.name);    // Bobconsole.log(person1.age);// undefined\n\n\n\u9898\u5916\u8bdd\uff0c\u7c7b\u4f3c\u7684\uff0c\u8054\u60f3\u5230 var a = new Person()\uff0c\u5219 a instanceof Person\u4e00\u5b9a\u8fd4\u56de true\u5417\uff1f\u7559\u7ed9\u4f60\u4eec\u60f3\u4e00\u60f3\u54af\u3002\n\n\n\u4f7f\u7528 call\u3001apply \u6216 bind \u6539\u53d8 this\n\n\n\u5728\u5f15\u7528\u7c7b\u578b Function\u5f53\u4e2d\uff0c\u51fd\u6570\u5b58\u5728\u4e24\u4e2a\u65b9\u6cd5\u5c5e\u6027\uff0ccall \u548c apply\uff0c\u5728 ECMAScript5\u5f53\u4e2d\uff0c\u52a0\u5165\u4e86 bind \u65b9\u6cd5\u3002\u9898\u5916\u8bdd\uff0c\u4ed6\u4eec\u4e09\u8005\u533a\u522b\uff0c\u5e94\u8be5\u90fd\u77e5\u9053\u4e86\u5427\uff0c\u4e0d\u77e5\u9053\u7684\u52a0\u7d27\u8865\u4e60\u5440\u3002\n\nvar name = \nBob\n;var person = {\n    name: \nAlice\n,\n    age: 29\n}\n\nfunction sayName() {\n    console.log(this.name);\n}\n\nsayName.call(person);    // Alice\n\n\n\u8fd9\u91cc\u662f\u4f7f\u7528\u4e86 call \u65b9\u6cd5\u6765\u6539\u53d8\u4e86 this\u7684\u6267\u884c\u73af\u5883\uff0c\u81f3\u4e8e\u4f7f\u7528 apply\uff0c\u6548\u679c\u4e00\u6837\uff0c\u53ea\u662f\u4e8c\u8005\u5dee\u522b\u5728\u4e8e\u4f20\u5165\u53c2\u6570\u7684\u4e0d\u540c\u3002\n\nfunc.call(context, arg1, arg2, ...)\nfunc.apply(context, [arg1, arg2, ...])\n\n\n\u4f7f\u7528 bind \u65b9\u6cd5\u8fdb\u884c\u4e0a\u4e0b\u6587\u7684\u6539\u53d8\uff0cbind \u65b9\u6cd5\u4e0e call \u548c apply\u6709\u7740\u672c\u8d28\u7684\u4e0d\u540c\uff0c\u5176\u4e0d\u540c\u70b9\u662f\uff0cbind()\u51fd\u6570\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u65b0\u7684\u51fd\u6570\uff0c\u5373\u65b9\u6cd5\uff0c\u800c\u540e\u4e24\u8005\u5219\u90fd\u662f\u7acb\u5373\u6267\u884c\u51fd\u6570\uff0c\u4f7f\u7528\u7684\u65f6\u5019\u5373\u8c03\u7528\u4e86\u8be5\u51fd\u6570\uff0c\u8fd4\u56de\u65b9\u6cd5\u64cd\u4f5c\u7684\u7ed3\u679c\u3002\n\n\n\u5e76\u4e14\uff0c\u4f7f\u7528 bind()\u65b9\u6cd5\u521b\u5efa\u7684 \u4e0a\u4e0b\u6587\uff0c\u5176\u4e3a\u6c38\u4e45\u7684\u4e0a\u4e0b\u6587\u73af\u5883\uff0c\u4e0d\u53ef\u4fee\u6539\uff0c\u5373\u4f7f\u662f\u4f7f\u7528 call \u6216\u8005 apply\u65b9\u6cd5\uff0c\u4e5f\u65e0\u6cd5\u4fee\u6539 this \u6240\u6307\u5411\u7684\u503c\u3002\n\nvar name = \nBob\n;\nvar person = {\n    name: \nAlice\n,\n    age: 29\n}\nfunction sayName() {\n    console.log(this.name);\n}\n\nvar say = sayName.bind(person);\nsay();        // Alice\nsayName();    // Bob\n\n\n\n\u7bad\u5934\u51fd\u6570\n\n\n\u7bad\u5934\u51fd\u6570\u5e76\u4e0d\u521b\u5efa\u5176\u81ea\u8eab\u7684\u4e0a\u4e0b\u6587\uff0c\u5176\u4e0a\u4e0b\u6587 this\uff0c\u53d6\u51b3\u4e8e\u5176\u5728\u5b9a\u4e49\u65f6\u7684\u5916\u90e8\u51fd\u6570\u3002\n\n\n\u5e76\u4e14\uff0c\u7bad\u5934\u51fd\u6570\u62e5\u6709\u9759\u6001\u7684\u4e0a\u4e0b\u6587\uff0c\u5373\u4e00\u6b21\u7ed1\u5b9a\u4e4b\u540e\uff0c\u4fbf\u4e0d\u53ef\u518d\u4fee\u6539\uff0c\u5373\u4f7f\u662f\u7528\u4e86 \u7b2c 4 \u79cd\u7528\u9014\u5f53\u4e2d\u7684\u6539\u53d8\u4e0a\u4e0b\u6587\u7684\u65b9\u6cd5\uff0c\u4e5f\u4e0d\u4e3a\u4e4b\u52a8\u5bb9\u3002\n\nvar num = [1, 2, 3];\n\n(function() {\n    var showNumber = () =\n {\n        console.log(this === num);    // true\n        console.log(this);            // [1, 2, 3]\n    }\n    console.log(this === num);        // true\n    showNumber();                     // true \n [1, 2, 3]\n    showNumber.call([1, 2]);          // true \n [1, 2, 3]\n    showNumber.apply([1, 2]);         // true \n [1, 2, 3]\n    showNumber.bind([1, 2])();        // true \n [1, 2, 3]\n}).call(num);\n\n\n\u7531\u4e8e\u7bad\u5934\u51fd\u6570\u7684\u5916\u90e8\u51b3\u5b9a\u4e0a\u4e0b\u6587\u4ee5\u53ca\u9759\u6001\u4e0a\u4e0b\u6587\u7b49\u7684\u7279\u6027\uff0c\u4e0d\u592a\u5efa\u8bae\u4f7f\u7528\u7bad\u5934\u51fd\u6570\u5728\u5168\u5c40\u73af\u5883\u4e0b\u6765\u5b9a\u4e49\u65b9\u6cd5\uff0c\u56e0\u4e3a\u4e0d\u80fd\u901a\u8fc7\u5176\u4ed6\u65b9\u6cd5\u6539\u53d8\u5176\u4e0a\u4e0b\u6587\u3002\u8fd9\u5f88\u86cb\u75bc\u3002\n\nfunction Period (hours, minutes) {    this.hours = hours;\n    this.minutes = minutes;\n}\nPeriod.prototype.format = () =\n {\n    console.log(this === window);    // =\n true\n    return this.hours + \n hours and \n + this.minutes + \n minutes\n;\n};\nvar walkPeriod = new Period(2, 30);\nconsole.log(walkPeriod.hours);\nwalkPeriod.format();    // =\n \nundefined hours and undefined minutes\n\n\n\n\u6b64\u65f6\u7684 this \u5b9e\u9645\u4e0a\u662f\u6307\u5411\u4e86 window\uff0c\u6240\u4ee5 this.hours \u548c this.minutes\u5b9e\u9645\u4e0a\u6ca1\u6709\u58f0\u660e\u7684\uff0c\u6545\u4e3a undefined\u3002\n\n\n\u5728\u5168\u5c40\u73af\u5883\u4e0b\uff0c\u8fd8\u662f\u9009\u7528 \u51fd\u6570\u8868\u8fbe\u5f0f \u6765\u8fdb\u884c\u51fd\u6570\u7684\u5b9a\u4e49\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u6b63\u786e\u7684\u4e0a\u4e0b\u6587\u73af\u5883\n\nfunction Period (hours, minutes) {\n    this.hours = hours;\n    this.minutes = minutes;\n}\nPeriod.prototype.format = function() {\n    console.log(this === walkPeriod);    // =\n true\n    return this.hours + \n hours and \n + this.minutes + \n minutes\n;\n};\nvar walkPeriod = new Period(2, 30);\nwalkPeriod.format(); // \n2 hours and 30 minutes\n\n\n\n\n\u603b\u7ed3\n\n\nthis\u53ef\u4ee5\u8bf4\u662fjavascript\u8bbe\u8ba1\u7ed9\u5927\u5bb6\u7684\u5751\uff0c\u4ed6\u7684\u6307\u5411\u4ee4\u4eba\u8ff7\u60d1\uff0c\u9971\u53d7\u610f\u4e49\u3002\u4f5c\u4e3a\u524d\u7aef\u5f00\u53d1\uff0c\u9700\u8981\u5145\u5206\u7406\u89e3this\u7684\u542b\u4e49\uff0c\u4ee5\u53ca\u4ed6\u5728\u4e0d\u540c\u60c5\u5f62\u4e0b\u7684\u6307\u5411\uff0c\u624d\u80fd\u771f\u6b63\u907f\u514d\u8e29\u5751\u3002\u603b\u7ed3\u4e00\u4e0b\u6700\u5e38\u89c1\u7684\u5751\uff1a\n\n\nthis\u4e22\u5931\n\n\nperson\n \n=\n \n{\n\n  \nname\n:\n \ngzyejiaqi\n,\n\n  \nsayName\n:\n \nfunction\n \n()\n \n{\n\n    \nsetTimeout\n(\nfunction\n()\n \n{\n\n      \nconsole\n.\nlog\n(\nMy name is \n \n+\n \nthis\n.\nname\n)\n\n    \n})\n\n  \n}\n\n\n}\n\n\n\n\n\n\u6b64\u65f6\u53d1\u751f\u4e86this\u4e22\u5931\u7684\u95ee\u9898\uff0c\n\n\n\u89e3\u51b3\u65b9\u68481: that\n\n\nperson = {\n  name: \ngzyejiaqi\n,\n  sayName: function () {\n    var that = this  // \u4fdd\u5b58this\n    setTimeout(function() {\n      console.log(\nMy name is \n + that.name)\n    })\n  }\n}\n\nperson.sayName()  // \nmy name is gzyejiaqi\n\n\n\n\n\n\u89e3\u51b3\u529e\u6cd52: \u7bad\u5934\u51fd\u6570\n\n\nperson = {\n  name: \ngzyejiaqi\n,\n  sayName: function () {\n    setTimeout(() =\n {\n      console.log(\nMy name is \n + this.name)\n    })\n  }\n}\n\nperson.sayName()  // \nmy name is gzyejiaqi\n\n\n\n\n\n\u5168\u5c40\u4f5c\u7528\u57df\u6c61\u67d3\n\n\nfunction Person(name, age) {\n    this.name = name;\n    this.age = age;\n}\n\n\n\u4e0a\u8ff0\u51fd\u6570\u5e94\u8be5\u901a\u8fc7new\u8fdb\u884c\u5b9e\u4f8b\u5316\uff0c\u4f46\u662f\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u4e2a\u51fd\u6570\u540c\u6837\u53ef\u4ee5\u4f7f\u7528\u666e\u901a\u51fd\u6570\u7684\u6267\u884c\u65b9\u5f0f\u8fdb\u884c\u6267\u884c\u3002\n\u8fd9\u6837\u6267\u884c\u7684\u540e\u679c\u662f\uff0cthis\u6307\u5411\u7684\u662f\u5168\u5c40\u547d\u540d\u7a7a\u95f4(browser\u4e0b\u662fwindow, node\u4e0b\u662fglobal)\uff0c\u4f1a\u4ea7\u751f\u5168\u5c40\u547d\u540d\u6c61\u67d3\n\u3002\u8fd9\u4e5f\u662fjavascript\u9971\u53d7\u6279\u8bc4\u7684\u4e00\u70b9\u3002\n\n\nPerson(\ngzyejiaqi\n. \n18\n)\nconsole.log(window.name)  // gzyejiaqi\nconsole.log(window.age)  // 18\n\n\n\n\n\u7ec3\u4e60\n\n\n// \u7ec3\u4e601\nvar func = (function(a) {\n    this.a = a;\n    return function(a) {\n        a += this.a;\n        return a;\n    }\n})(function(a, b) {\n    return a;\n}(1, 2))\n\nfunc(4) // ?\n// \u7ec3\u4e602\nvar x = 10,\n    foo = {\n        x: 20,\n        bar: function() {\n            var x = 30;\n            return this.x;\n        }\n    }\n\nconsole.log(foo.bar());\nconsole.log((foo.bar)());\nconsole.log((foo.bar = foo.bar)());\nconsole.log((foo.bar, foo.bar)());", 
            "title": "JS\u7684this\u4ec0\u4e48\u9b3c"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u7684this\u4ec0\u4e48\u9b3c/#know_thisuse_this", 
            "text": "\u6458\u5f55\u81ea\uff1a link   this\u5e94\u8be5\u662f\u4e00\u4e2a\u8ba8\u8bba\u4e86\u5f88\u4e45\u7684\u8bdd\u9898\u4e86\u3002\u5176\u4e2d\uff0c\u5173\u4e8ethis\u7684\u6587\u7ae0\uff0c\u5728\u5f88\u591a\u7684\u535a\u5ba2\u5f53\u4e2d\u4e5f\u6709\u5f88\u591a\u4ecb\u7ecd\uff0c\u4f46\u662f\uff0c\u4ee5\u524d\u6211\u90fd\u662f\u4e00\u77e5\u534a\u89e3\u7684\u53bb\u4e86\u89e3\u5b83\uff0c\u5c31\u662f\u770b\u535a\u5ba2\u5f53\u4e2d\uff0c\u53ea\u4ecb\u7ecd\u4e86\u4e00\u4e9b\u60c5\u51b5\u4e0b\u7684 this \u7684\u4f7f\u7528\u65b9\u5f0f\uff0c\u4f46\u662f\u4e5f\u5e76\u6ca1\u6709\u81ea\u5df1\u53bb\u505a\u8fc7\u603b\u7ed3\u3002\u521a\u597d\u662f\u5728\u6398\u91d1\u5f53\u4e2d\u6709\u770b\u5230\u4e00\u7bc7\u5173\u4e8ethis\u7684\u4e00\u4e9b\u8be6\u7ec6\u6587\u7ae0\uff0c\u6587\u672b\u4f1a\u9644\u4e0a\u94fe\u63a5\u4ee5\u53ca\u82f1\u6587\u539f\u6587\uff0c\u8fd9\u91cc\u7eaf\u7cb9\u662f\u81ea\u5df1\u8fdb\u884c\u4e00\u4e2a\u603b\u7ed3\uff0c\u4ee5\u540e\u65b9\u4fbf\u81ea\u5df1\u8fdb\u884c\u56de\u987e\u4ee5\u53ca\u52a0\u6df1\u5370\u8c61\u3002\u5e0c\u671b\u8fd9\u7bc7\u6587\u7ae0\u5bf9\u4e8e\u4f60\u4e86\u89e3this\u6709\u4e00\u5b9a\u7684\u5e2e\u52a9\uff0c\u6587\u672b\u8fd8\u6709\u4e00\u4e9b\u7ec3\u4e60\u9898\u5662~\u5e0c\u671b\u771f\u7684\u5bf9\u4f60\u4eec\u6709\u5e2e\u52a9\u3002(\u56e0\u4e3a\u5199\u9879\u76ee\u8fc7\u7a0b\u4e2d\uff0c\u4e00\u76f4\u88ab this \u5751\u8fc7\uff0c\u5374\u627e\u4e86\u5f88\u4e45\u7684 bug \uff0c\u6211\u771f\u662f \u4e50\u4e86\u72d7)   \u5728\u4e86\u89e3this\u4e4b\u524d\uff0c\u76f8\u4fe1\u5927\u5bb6\u90fd\u5e94\u8be5\u4f1a\u77e5\u9053\u4f5c\u7528\u57df\u8fd9\u4e2a\u77e5\u8bc6\u70b9\u7684\u5b58\u5728\uff0c\u51fd\u6570\u5728\u521b\u5efa\u4e4b\u540e\uff0c\u4f1a\u6784\u5efa\u81ea\u5df1\u7684\u6267\u884c\u73af\u5883\u4ee5\u53ca\u4f5c\u7528\u57df\uff0c\u8fd9\u662f\u4e00\u5f00\u59cb\u5c31\u786e\u5b9a\u4e86\u3002\u4f46\u662f\u5b9e\u9645\u7684\u4e0a\u4e0b\u6587(context)\u73af\u5883\uff0c\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u5c31\u662fthis\uff0c\u5b83\u662f\u52a8\u6001\u786e\u5b9a\u7684\uff0c\u5373\u5728\u51fd\u6570\u8fd0\u884c\u65f6\u624d\u786e\u5b9athis\u6240\u6307\u5411\u7684\u5bf9\u8c61\uff0c\u800c\u975e\u58f0\u660e\u65f6\u6240\u6307\u5411\u7684\u5bf9\u8c61\u3002  \u5173\u4e8ethis\uff0c\u603b\u7ed3\u8d77\u6765\uff0c\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u4e2a\u9014\u5f84\u80fd\u591f\u88ab\u8fd0\u7528\u5230\u3002", 
            "title": "Know this,use this!"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u7684this\u4ec0\u4e48\u9b3c/#this", 
            "text": "\u5982\u679c\u51fd\u6570\u88ab\u5f53\u4e2d\u5bf9\u8c61\u7684\u4e00\u4e2a\u65b9\u6cd5\u8fdb\u884c\u8c03\u7528\uff0c\u5219this\u503c\u6307\u5411\u8be5\u5bf9\u8c61\u3002 var person = {\n    name:  Alice ,\n    sayName: function() {\n        alert( welcome   + this.name);\n    }\n}\n\nperson.sayName();    // this == person, alert:  welcome Alice  \n\u5728\u8fd9\u91cc\uff0c\u51fd\u6570\u7684this\u6307\u5411\u8be5\u5bf9\u8c61(\u5373 person)\uff1b\u4f46\u662f\u6709\u4e00\u70b9\u9700\u8981\u6ce8\u610f\uff0c\u5c31\u662f\u5f53\u5bf9\u8c61\u7684\u65b9\u6cd5\u88ab\u8d4b\u4e88\u7ed9\u4e00\u4e2a\u53d8\u91cf\u65f6\uff0c\u5176\u5219\u53d8\u4e3a\u4e86\u51fd\u6570\u89e6\u53d1\uff0c\u6b64\u65f6\u7684this\u4e3a window \u6216\u8005 undefined(\u4e25\u683c\u6a21\u5f0f\u4e0b)\uff0c\u5982\u4e0b\uff1a var name =  Bob ;\nvar person;    // \u5373\u4e0a\u9762\u7684\u5b9a\u4e49\uff0c\u6b64\u4e0d\u62d3\u5c55\u8be6\u7ec6\uff0c\u76f4\u63a5\u4f7f\u7528\n\nvar say = person.sayName;    // this == window || undefined\nsay();    //  welcome Bob  || throw an error: Cannot read property  name  of undefined(...)", 
            "title": "\u5bf9\u8c61\u65b9\u6cd5\u4e2d\u8c03\u7528this"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u7684this\u4ec0\u4e48\u9b3c/#_1", 
            "text": "\u5728\u51fd\u6570\u5185\u90e8\u5f53\u4e2d\u4f7f\u7528\u4e86 this\uff0c\u5373\u51fd\u6570\u88ab\u5f53\u505a\u65b9\u6cd5\u4f7f\u7528\uff0c\u4e0d\u540c\u4e8e 1 \u5f53\u4e2d\u4f5c\u4e3a\u5bf9\u8c61\u7684\u65b9\u6cd5\u4f7f\u7528\uff0c\u6b64\u65f6\u8c03\u7528\uff0c\u662f\u5728\u5168\u5c40\u4f5c\u7528\u57df\u4e0b\u8fdb\u884c\u8c03\u7528\uff0c\u5373\u5728window\u4e0b\u8fdb\u884c\u8c03\u7528\uff0c\u7531\u5b9a\u4e49\u53ef\u4ee5\u77e5\u9053\uff0c\u5728\u5168\u5c40\u4f5c\u7528\u57df\u4e0b\u58f0\u660e\u4e00\u4e2a\u51fd\u6570\uff0c\u5176\u81ea\u52a8\u52a0\u4e3awindow\u7684\u4e00\u4e2a\u5c5e\u6027\u3002this\u6b64\u65f6\u540d\u6b63\u8a00\u987a\u7684\u4f1a\u6307\u5411window\uff0c\u4e25\u683c\u6a21\u5f0f\u4e0b\u4e3a undefined function sayThis() {\n    alert(this == window);// true\n} \n\u7ed3\u5408\u7b2c\u4e00\u70b9\uff0c\u51fd\u6570\u4f5c\u4e3a\u5bf9\u8c61\u7684\u4e00\u4e2a\u65b9\u6cd5\u4f7f\u7528\uff0c\u8fd9\u91cc\u5b58\u5728\u4e00\u4e2a\u5c0f\u5751\uff0c\u5373\u95ed\u5305\uff0c\u5565\u662f\u95ed\u5305\uff0c\u8fd9\u4e2a\u5728\u8fd9\u91cc\u5c31\u4e0d\u626f\u5f00\u4e86\uff0c\u6700\u7b80\u5355\u7684\u7406\u89e3\u5c31\u662f Function that returns function\uff0c\u5982\u679c\u4e0d\u7406\u89e3\u4ec0\u4e48\u662f\u95ed\u5305\u7684\u8bdd\uff0c\u53ef\u4ee5\u53bb\u7ffb\u7ffb \u300aJavaScript \u9ad8\u7ea7\u7a0b\u5e8f\u8bbe\u8ba1\u300b\u7b2c\u4e03\u7ae0\u5173\u4e8e\u95ed\u5305\u7684\u76f8\u5173\u5185\u5bb9\u3002\u7b2c\u4e00\u70b9\u5f53\u4e2d\u5b58\u5728\u4e00\u4e2a\u5c0f\u5751\uff0c\u5c31\u662f\u5c06\u5bf9\u8c61\u7684\u65b9\u6cd5\u8d4b\u4e88\u7ed9\u4e00\u4e2a\u53d8\u91cf\u7684\u65f6\u5019\uff0c\u5176\u53d8\u4e3a\u51fd\u6570\u89e6\u53d1\uff0c\u6b64\u65f6\u7684 this \u5b9e\u9645\u4e0a\u662f\u6307\u5411 window(\u975e\u4e25\u683c\u6a21\u5f0f)\u3002  \u90a3\u4e48\uff0c\u5f53\u51fd\u6570\u4e2d\u8fd4\u56de\u4e00\u4e2a\u51fd\u6570\uff0c\u6b64\u65f6\u5728\u5bf9\u8c61\u5f53\u4e2d\u8c03\u7528\u8be5\u65b9\u6cd5\uff0c\u5176\u5c31\u76f8\u5f53\u4e8e\u662f\u51fd\u6570\u89e6\u53d1\uff0c\u6b64\u65f6\u7684 this\uff0c\u5728\u4e0d\u505a\u4efb\u4f55\u4e0a\u4e0b\u6587\u7ed1\u5b9a\u7684\u524d\u63d0\u4e4b\u4e0b\uff0c\u5176\u6307\u5411 window(\u975e\u4e25\u683c\u6a21\u5f0f)\u3002 var name =  Bob ,\n    person = {\n        name:  Alice ,\n        sayName: function() {\n            console.log(this === person);    // true\n            return function() {\n                console.log(this === person);    // false\n                console.log(this === window);    // true\n                console.log(this.name);          // Bob\n            };\n        }\n    };\n\nperson.sayName()(); \n\u5f53\u7136\uff0c\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u65b9\u6cd5\uff0c\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u7ed9\u4ed6\u7ed1\u5b9a\u4e00\u4e2a\u4e0a\u4e0b\u6587\u3002 var name =  Bob ,\n    person = {\n        name:  Alice ,\n        sayName: function() {\n            console.log(this === person);// true\n            return function() {\n                console.log(this === person);    // true\n                console.log(this === window);    // false\n                console.log(this.name);          // Alice\n            }.bind(this);\n        }\n    };\n\nperson.sayName()();", 
            "title": "\u51fd\u6570\u5185\u90e8\u4f7f\u7528"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u7684this\u4ec0\u4e48\u9b3c/#new", 
            "text": "\u6211\u4eec\u77e5\u9053\u5728\u4f7f\u7528 new \u65b9\u6cd5\u521b\u5efa\u5bf9\u8c61\u7684\u65f6\u5019\uff0c\u4f1a\u7ecf\u8fc7\u5982\u4e0b\u8fd9\u4e9b\u4e2a\u8fc7\u7a0b\uff1a\n\u521b\u5efa\u5bf9\u8c61\uff0c\u5c06 this \u503c\u8d4b\u4e88\u65b0\u7684\u5bf9\u8c61\n\u8c03\u7528\u6784\u9020\u51fd\u6570\uff0c\u4e3a this \u6dfb\u52a0\u5c5e\u6027\u548c\u65b9\u6cd5\n\u8fd4\u56de this \u7ed9\u5f53\u524d\u7684\u5bf9\u8c61 function Person(name, age) {\n    this.name = name;\n    this.age = age;\n}\n\nvar person1 = new Person( Alice , 29);\nconsole.log(person1.name);    // Alice \n\u8fd9\u91cc\u8981\u8bb0\u5f97\u4f7f\u7528 new \u8fd0\u7b97\u7b26\uff0c\u5426\u5219\uff0c\u5176\u53ea\u80fd\u7b97\u662f\u666e\u901a\u7684\u8c03\u7528\uff0c\u800c\u4e0d\u662f\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5b9e\u4f8b\u5bf9\u8c61\u3002\u800c\u5f53\u505a\u666e\u901a\u51fd\u6570\u8c03\u7528\u7684\u8bdd\uff0c\u5b9e\u9645\u4e0a\u5373 \u7b2c 2 \u79cd\u60c5\u51b5\u4e0b\uff0c\u5bf9\u51fd\u6570\u666e\u901a\u8c03\u7528\uff0c\u6b64\u65f6\u7684 this \u6307\u5411 window function Person(name, age) {\n    this.name = name;\n    this.age = age;\n    return this;\n}\n\nvar person1 = Person( Alice , 29);\nconsole.log(person1.name);    // Alice\nconsole.log(window.name);     // Alice\nconsole.log(person1 === window);    // true \n\u8fd9\u662f\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0cthis \u4f1a\u6b63\u786e\u8fd4\u56de\u5e76\u4e14\u6307\u5411\u8be5\u5bf9\u8c61\uff0c\u4f46\u662f\u5728\u6784\u9020\u51fd\u6570\u5f53\u4e2d\uff0c\u5982\u679c\u8fd4\u56de\u4e86\u4e00\u4e2a\u5bf9\u8c61\uff0c\u90a3\u4e48 this \u4f1a\u6307\u5411\u8fd4\u56de\u7684\u90a3\u4e2a\u5bf9\u8c61\u3002 function Person(name, age) {\n    this.name = name;\n    this.age = age;\n    return {\n        name:  Bob \n    };\n}\n\nvar person1 = new Person( Alice );\nconsole.log(person1.name);    // Bobconsole.log(person1.age);// undefined \n\u9898\u5916\u8bdd\uff0c\u7c7b\u4f3c\u7684\uff0c\u8054\u60f3\u5230 var a = new Person()\uff0c\u5219 a instanceof Person\u4e00\u5b9a\u8fd4\u56de true\u5417\uff1f\u7559\u7ed9\u4f60\u4eec\u60f3\u4e00\u60f3\u54af\u3002", 
            "title": "new \u5f53\u4e2d\u8fdb\u884c\u4f7f\u7528"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u7684this\u4ec0\u4e48\u9b3c/#callapply_bind_this", 
            "text": "\u5728\u5f15\u7528\u7c7b\u578b Function\u5f53\u4e2d\uff0c\u51fd\u6570\u5b58\u5728\u4e24\u4e2a\u65b9\u6cd5\u5c5e\u6027\uff0ccall \u548c apply\uff0c\u5728 ECMAScript5\u5f53\u4e2d\uff0c\u52a0\u5165\u4e86 bind \u65b9\u6cd5\u3002\u9898\u5916\u8bdd\uff0c\u4ed6\u4eec\u4e09\u8005\u533a\u522b\uff0c\u5e94\u8be5\u90fd\u77e5\u9053\u4e86\u5427\uff0c\u4e0d\u77e5\u9053\u7684\u52a0\u7d27\u8865\u4e60\u5440\u3002 var name =  Bob ;var person = {\n    name:  Alice ,\n    age: 29\n}\n\nfunction sayName() {\n    console.log(this.name);\n}\n\nsayName.call(person);    // Alice \n\u8fd9\u91cc\u662f\u4f7f\u7528\u4e86 call \u65b9\u6cd5\u6765\u6539\u53d8\u4e86 this\u7684\u6267\u884c\u73af\u5883\uff0c\u81f3\u4e8e\u4f7f\u7528 apply\uff0c\u6548\u679c\u4e00\u6837\uff0c\u53ea\u662f\u4e8c\u8005\u5dee\u522b\u5728\u4e8e\u4f20\u5165\u53c2\u6570\u7684\u4e0d\u540c\u3002 func.call(context, arg1, arg2, ...)\nfunc.apply(context, [arg1, arg2, ...]) \n\u4f7f\u7528 bind \u65b9\u6cd5\u8fdb\u884c\u4e0a\u4e0b\u6587\u7684\u6539\u53d8\uff0cbind \u65b9\u6cd5\u4e0e call \u548c apply\u6709\u7740\u672c\u8d28\u7684\u4e0d\u540c\uff0c\u5176\u4e0d\u540c\u70b9\u662f\uff0cbind()\u51fd\u6570\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u65b0\u7684\u51fd\u6570\uff0c\u5373\u65b9\u6cd5\uff0c\u800c\u540e\u4e24\u8005\u5219\u90fd\u662f\u7acb\u5373\u6267\u884c\u51fd\u6570\uff0c\u4f7f\u7528\u7684\u65f6\u5019\u5373\u8c03\u7528\u4e86\u8be5\u51fd\u6570\uff0c\u8fd4\u56de\u65b9\u6cd5\u64cd\u4f5c\u7684\u7ed3\u679c\u3002  \u5e76\u4e14\uff0c\u4f7f\u7528 bind()\u65b9\u6cd5\u521b\u5efa\u7684 \u4e0a\u4e0b\u6587\uff0c\u5176\u4e3a\u6c38\u4e45\u7684\u4e0a\u4e0b\u6587\u73af\u5883\uff0c\u4e0d\u53ef\u4fee\u6539\uff0c\u5373\u4f7f\u662f\u4f7f\u7528 call \u6216\u8005 apply\u65b9\u6cd5\uff0c\u4e5f\u65e0\u6cd5\u4fee\u6539 this \u6240\u6307\u5411\u7684\u503c\u3002 var name =  Bob ;\nvar person = {\n    name:  Alice ,\n    age: 29\n}\nfunction sayName() {\n    console.log(this.name);\n}\n\nvar say = sayName.bind(person);\nsay();        // Alice\nsayName();    // Bob", 
            "title": "\u4f7f\u7528 call\u3001apply \u6216 bind \u6539\u53d8 this"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u7684this\u4ec0\u4e48\u9b3c/#_2", 
            "text": "\u7bad\u5934\u51fd\u6570\u5e76\u4e0d\u521b\u5efa\u5176\u81ea\u8eab\u7684\u4e0a\u4e0b\u6587\uff0c\u5176\u4e0a\u4e0b\u6587 this\uff0c\u53d6\u51b3\u4e8e\u5176\u5728\u5b9a\u4e49\u65f6\u7684\u5916\u90e8\u51fd\u6570\u3002  \u5e76\u4e14\uff0c\u7bad\u5934\u51fd\u6570\u62e5\u6709\u9759\u6001\u7684\u4e0a\u4e0b\u6587\uff0c\u5373\u4e00\u6b21\u7ed1\u5b9a\u4e4b\u540e\uff0c\u4fbf\u4e0d\u53ef\u518d\u4fee\u6539\uff0c\u5373\u4f7f\u662f\u7528\u4e86 \u7b2c 4 \u79cd\u7528\u9014\u5f53\u4e2d\u7684\u6539\u53d8\u4e0a\u4e0b\u6587\u7684\u65b9\u6cd5\uff0c\u4e5f\u4e0d\u4e3a\u4e4b\u52a8\u5bb9\u3002 var num = [1, 2, 3];\n\n(function() {\n    var showNumber = () =  {\n        console.log(this === num);    // true\n        console.log(this);            // [1, 2, 3]\n    }\n    console.log(this === num);        // true\n    showNumber();                     // true   [1, 2, 3]\n    showNumber.call([1, 2]);          // true   [1, 2, 3]\n    showNumber.apply([1, 2]);         // true   [1, 2, 3]\n    showNumber.bind([1, 2])();        // true   [1, 2, 3]\n}).call(num); \n\u7531\u4e8e\u7bad\u5934\u51fd\u6570\u7684\u5916\u90e8\u51b3\u5b9a\u4e0a\u4e0b\u6587\u4ee5\u53ca\u9759\u6001\u4e0a\u4e0b\u6587\u7b49\u7684\u7279\u6027\uff0c\u4e0d\u592a\u5efa\u8bae\u4f7f\u7528\u7bad\u5934\u51fd\u6570\u5728\u5168\u5c40\u73af\u5883\u4e0b\u6765\u5b9a\u4e49\u65b9\u6cd5\uff0c\u56e0\u4e3a\u4e0d\u80fd\u901a\u8fc7\u5176\u4ed6\u65b9\u6cd5\u6539\u53d8\u5176\u4e0a\u4e0b\u6587\u3002\u8fd9\u5f88\u86cb\u75bc\u3002 function Period (hours, minutes) {    this.hours = hours;\n    this.minutes = minutes;\n}\nPeriod.prototype.format = () =  {\n    console.log(this === window);    // =  true\n    return this.hours +   hours and   + this.minutes +   minutes ;\n};\nvar walkPeriod = new Period(2, 30);\nconsole.log(walkPeriod.hours);\nwalkPeriod.format();    // =   undefined hours and undefined minutes  \n\u6b64\u65f6\u7684 this \u5b9e\u9645\u4e0a\u662f\u6307\u5411\u4e86 window\uff0c\u6240\u4ee5 this.hours \u548c this.minutes\u5b9e\u9645\u4e0a\u6ca1\u6709\u58f0\u660e\u7684\uff0c\u6545\u4e3a undefined\u3002  \u5728\u5168\u5c40\u73af\u5883\u4e0b\uff0c\u8fd8\u662f\u9009\u7528 \u51fd\u6570\u8868\u8fbe\u5f0f \u6765\u8fdb\u884c\u51fd\u6570\u7684\u5b9a\u4e49\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u6b63\u786e\u7684\u4e0a\u4e0b\u6587\u73af\u5883 function Period (hours, minutes) {\n    this.hours = hours;\n    this.minutes = minutes;\n}\nPeriod.prototype.format = function() {\n    console.log(this === walkPeriod);    // =  true\n    return this.hours +   hours and   + this.minutes +   minutes ;\n};\nvar walkPeriod = new Period(2, 30);\nwalkPeriod.format(); //  2 hours and 30 minutes", 
            "title": "\u7bad\u5934\u51fd\u6570"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u7684this\u4ec0\u4e48\u9b3c/#_3", 
            "text": "this\u53ef\u4ee5\u8bf4\u662fjavascript\u8bbe\u8ba1\u7ed9\u5927\u5bb6\u7684\u5751\uff0c\u4ed6\u7684\u6307\u5411\u4ee4\u4eba\u8ff7\u60d1\uff0c\u9971\u53d7\u610f\u4e49\u3002\u4f5c\u4e3a\u524d\u7aef\u5f00\u53d1\uff0c\u9700\u8981\u5145\u5206\u7406\u89e3this\u7684\u542b\u4e49\uff0c\u4ee5\u53ca\u4ed6\u5728\u4e0d\u540c\u60c5\u5f62\u4e0b\u7684\u6307\u5411\uff0c\u624d\u80fd\u771f\u6b63\u907f\u514d\u8e29\u5751\u3002\u603b\u7ed3\u4e00\u4e0b\u6700\u5e38\u89c1\u7684\u5751\uff1a", 
            "title": "\u603b\u7ed3"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u7684this\u4ec0\u4e48\u9b3c/#this_1", 
            "text": "person   =   { \n   name :   gzyejiaqi , \n   sayName :   function   ()   { \n     setTimeout ( function ()   { \n       console . log ( My name is    +   this . name ) \n     }) \n   }  }   \u6b64\u65f6\u53d1\u751f\u4e86this\u4e22\u5931\u7684\u95ee\u9898\uff0c  \u89e3\u51b3\u65b9\u68481: that  person = {\n  name:  gzyejiaqi ,\n  sayName: function () {\n    var that = this  // \u4fdd\u5b58this\n    setTimeout(function() {\n      console.log( My name is   + that.name)\n    })\n  }\n}\n\nperson.sayName()  //  my name is gzyejiaqi   \u89e3\u51b3\u529e\u6cd52: \u7bad\u5934\u51fd\u6570  person = {\n  name:  gzyejiaqi ,\n  sayName: function () {\n    setTimeout(() =  {\n      console.log( My name is   + this.name)\n    })\n  }\n}\n\nperson.sayName()  //  my name is gzyejiaqi", 
            "title": "this\u4e22\u5931"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u7684this\u4ec0\u4e48\u9b3c/#_4", 
            "text": "function Person(name, age) {\n    this.name = name;\n    this.age = age;\n} \n\u4e0a\u8ff0\u51fd\u6570\u5e94\u8be5\u901a\u8fc7new\u8fdb\u884c\u5b9e\u4f8b\u5316\uff0c\u4f46\u662f\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u4e2a\u51fd\u6570\u540c\u6837\u53ef\u4ee5\u4f7f\u7528\u666e\u901a\u51fd\u6570\u7684\u6267\u884c\u65b9\u5f0f\u8fdb\u884c\u6267\u884c\u3002 \u8fd9\u6837\u6267\u884c\u7684\u540e\u679c\u662f\uff0cthis\u6307\u5411\u7684\u662f\u5168\u5c40\u547d\u540d\u7a7a\u95f4(browser\u4e0b\u662fwindow, node\u4e0b\u662fglobal)\uff0c\u4f1a\u4ea7\u751f\u5168\u5c40\u547d\u540d\u6c61\u67d3 \u3002\u8fd9\u4e5f\u662fjavascript\u9971\u53d7\u6279\u8bc4\u7684\u4e00\u70b9\u3002  Person( gzyejiaqi .  18 )\nconsole.log(window.name)  // gzyejiaqi\nconsole.log(window.age)  // 18", 
            "title": "\u5168\u5c40\u4f5c\u7528\u57df\u6c61\u67d3"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u7684this\u4ec0\u4e48\u9b3c/#_5", 
            "text": "// \u7ec3\u4e601\nvar func = (function(a) {\n    this.a = a;\n    return function(a) {\n        a += this.a;\n        return a;\n    }\n})(function(a, b) {\n    return a;\n}(1, 2))\n\nfunc(4) // ?\n// \u7ec3\u4e602\nvar x = 10,\n    foo = {\n        x: 20,\n        bar: function() {\n            var x = 30;\n            return this.x;\n        }\n    }\n\nconsole.log(foo.bar());\nconsole.log((foo.bar)());\nconsole.log((foo.bar = foo.bar)());\nconsole.log((foo.bar, foo.bar)());", 
            "title": "\u7ec3\u4e60"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u5e38\u89c1\u5927\u5751/", 
            "text": "\u539f\u578b\u94fe\n\n\ntypeof(null)\n\n\n\n\n\n\nthis\u6307\u5411\u61f5\u903c\n\n\n\u6784\u9020\u51fd\u6570\u9519\u8bef\u8c03\u7528\uff0c\u975enew\u8c03\u7528\n\n\n\n\n\n\npromise\n\n\n\u5e03\u5c14\u503c\u548c\u7c7b\u578b\u8f6c\u6362\n\n\n\"\" == 0\n\n\n\"\", {}, [], null, undefined, NaN\n\n\n[0] == false, Boolean([0]), [''], ['0'], [null], [undefined]\n\n\nvar b = 10 + 20 + 'abc' + 'cd'\n\n\nconsole.log(false == '0');\n\n\nconsole.log(null == undefined);\n\n\nconsole.log(\" trn\" == 0);\n\n\nconsole.log('' == 0);\n\n\nNumber\u548cparseInt\n\n\nNumber(false) 0\n\n\nNumber(true) 1\n\n\nNumber(undefined) NaN\n\n\nNumber(null) 0\n\n\nNumber(\"5.5 \") 5.5\n\n\nNumber(\"56 \") 56\n\n\nNumber(\"5.6.7 \") NaN\n\n\nNumber(new Object()) NaN\n\n\nNumber(100) 100\n\n\n\n\n\n\n\n\n\n\n\u6570\u5b57\u7cbe\u5ea6\n\n\nMath.pow(2,53) +1 === Math.pow(2,53) // true\n\n\n0.1+0.2!=0.3\u548c9999999999999999 == 10000000000000000;\n\n\n\n\n\n\n\u5b57\u7b26\u4e32\n\n\n3..toString;\n\n\nreplace \u53ea\u66ff\u6362\u4e00\u4e2a\n\n\n\n\n\n\n\u9ed8\u8ba4\u5168\u5c40\u58f0\u660e\n\n\nvar \u53d8\u91cf\u63d0\u5347\n\n\n\u51fd\u6570\u4f5c\u7528\u57df\n\n\n\u5206\u53f7\u95ee\u9898\n\n\nes6\n\n\n\u8fd0\u884c\u65f6\u652f\u6301\u95ee\u9898\n\n\nChrome\u65e7\u7248\u672c\u4e0e\u4e25\u683c\u6a21\u5f0f\u9650\u5236\n\n\nnode\u65e7\u7248\u672c\u4e0d\u652f\u6301\n\n\nbabel is not es6\n\n\n\n\n\n\nvar let = 1\n\n\nlet \u5757\u7ea7\u4f5c\u7528\u57df\u3001\u4e34\u65f6\u6b7b\u533a\u3001\u4e0d\u5b58\u5728\u53d8\u91cf\u63d0\u5347\u3001\u4e0d\u5141\u8bb8\u91cd\u590d\u58f0\u660e\n\n\n\u7bad\u5934\u51fd\u6570\u8fd4\u56de\u5b57\u9762\u91cf\u7684object\n\n\n\u7bad\u5934\u51fd\u6570\u4e0d\u80fd\u4f5c\u4e3a\u6784\u9020\u51fd\u6570\n\n\n\n\n\n\nlodash \n angular\n\n\n\u526f\u4f5c\u7528\u51fd\u6570\uff0c\u548c\u975e\u526f\u4f5c\u7528\u7684\u51fd\u6570\n\n\n\u5b57\u7b26\u4e32\u89e3\u6790\n\n\nisObject \u4e0d\u4e00\u6837\u903b\u8f91\n\n\n\n\n\n\nDate\u7c7b\u4f7f\u7528\u7684\u65f6\u95f4\u6233\u548cunix\u7684\u5dee\u522b\n\n\n\n\n\u539f\u578b\u94fe\n\n\ntypeof(null)\n\n\ntypeof\n(\nnull\n)\n \n===\n \nObject\n \n// true!\n\n\n\n\n\n\u9519\u8bef\u7684\u5224\u65ad\u5bf9\u8c61\n\n\nvar\n \na\n \n=\n \n{}\n\n\nif\n \n(\ntypeof\n \na\n \n===\n \nObject\n)\n \n{\n\n    \n// ...\n\n\n}\n\n\n\n\n\n\u6240\u4ee5\u4f7f\u7528typeof\u5224\u65ad\u5bf9\u8c61\u7684\u6b63\u786e\u4f7f\u7528\u65b9\u6cd5\n\n\nvar\n \na\n \n=\n \n{}\n\n\nif\n \n(\na\n \n!=\n \nnull\n \n \n(\ntypeof\n \na\n \n===\n \nobject\n \n||\n \ntypeof\n \na\n \n===\n \nfunction\n))\n \n{\n \n// \u6ce8\u610f\u51fd\u6570\u4e5f\u662fobject...\n\n    \n// ...\n\n\n}\n\n\n\n\n\n\u5ffd\u7565\u539f\u578b\u94fe\u5c5e\u6027\n\n\nlet\n \nsumUp\n \n=\n \n{}\n\n\nlet\n \ncontent\n \n=\n \nproviding constructor for your classes. A class contains constructors that are invoked to create objects from the class blueprint\n\n\n\nfor\n \n(\nlet\n \nword\n \nof\n \ncontent\n.\nsplit\n(\n \n))\n \n{\n\n    \nif\n \n(\n!\nsumUp\n[\nword\n])\n \n{\n\n        \nsumUp\n[\nword\n]\n \n=\n \n1\n\n    \n}\n \nelse\n \n{\n\n        \nsumUp\n[\nword\n]\n \n+=\n \n1\n\n    \n}\n\n\n}\n\n\n\nconsole\n.\nlog\n(\nsumUp\n)\n\n\n\n\n\n{ providing: 1,\n  constructor: \nfunction Object() { [native code] }1\n,\n  for: 1,\n  your: 1,\n  \nclasses.\n: 1,\n  A: 1,\n  class: 2,\n  contains: 1,\n  constructors: 1,\n  that: 1,\n  are: 1,\n  invoked: 1,\n  to: 1,\n  create: 1,\n  objects: 1,\n  from: 1,\n  the: 1,\n  blueprint: 1 }\n\n\n\n\nlet sumUp = Object.create(null)\n\n\n\n\nfor\nin \u64cd\u4f5c\n\n\n\u8fd0\u7ef4\u5f00\u53d1\u5199python\u5199\u7684\u6bd4\u8f83\u591a\u3002\u4f46\u662f\u5728python\u4e2d\u7684for in \u548cjs\u4e2d\u7684for in \u4e0d\u662f\u540c\u4e00\u4e2a\u542b\u4e49\u3002\n\n\n\n\nfor\nin\u5faa\u73af\u5b9a\u4e49\n\n\nfor\nin \u5faa\u73af\u53ea\u904d\u5386\u53ef\u679a\u4e3e\u5c5e\u6027\u3002\u50cf Array\u548c Object\u4f7f\u7528\u5185\u7f6e\u6784\u9020\u51fd\u6570\u6240\u521b\u5efa\u7684\u5bf9\u8c61\u90fd\u4f1a\u7ee7\u627f\u81eaObject.prototype\u548cString.prototype\u7684\u4e0d\u53ef\u679a\u4e3e\u5c5e\u6027\uff0c\u4f8b\u5982 String \u7684 indexOf()  \u65b9\u6cd5\u6216 Object\u7684toString()\u65b9\u6cd5\u3002\u5faa\u73af\u5c06\u904d\u5386\u5bf9\u8c61\u672c\u8eab\u7684\u6240\u6709\u53ef\u679a\u4e3e\u5c5e\u6027\uff0c\u4ee5\u53ca\u5bf9\u8c61\u4ece\u5176\u6784\u9020\u51fd\u6570\u539f\u578b\u4e2d\u7ee7\u627f\u7684\u5c5e\u6027\uff08\u66f4\u63a5\u8fd1\u539f\u578b\u94fe\u4e2d\u5bf9\u8c61\u7684\u5c5e\u6027\u8986\u76d6\u539f\u578b\u5c5e\u6027\uff09\u3002\n\n\n\n\n\n\n\u53ef\u679a\u4e3e\u5c5e\u6027\n\n\n\u53ef\u679a\u4e3e\u5c5e\u6027\u662f\u6307\u90a3\u4e9b\u5185\u90e8 \u201c\u53ef\u679a\u4e3e\u201d \u6807\u5fd7\u8bbe\u7f6e\u4e3a true \u7684\u5c5e\u6027\n\u9ed8\u8ba4\u6807\u8bb0\u4e3atrue\u60c5\u51b5\uff1a\n    - \u5b57\u9762\u91cf\u65b9\u5f0f\u5b9a\u4e49\u7684\u5c5e\u6027\n    - \u76f4\u63a5\u7684\u8d4b\u503c\u7684\u5c5e\u6027\n\n\n\n\nExample: \u5ffd\u89c6\u539f\u578b\u94fe\u5c5e\u6027\u5bfc\u81f4\u7684\u9519\u8bef\n\n\nlet\n \narr\n \n=\n \n[\n1\n,\n \n2\n,\n \n3\n,\n \n4\n,\n \n5\n]\n\n\n\nfor\n \n(\nlet\n \nx\n \nin\n \narr\n)\n \n{\n\n    \nlet\n \nele\n \n=\n \narr\n[\nx\n]\n\n    \nconsole\n.\nlog\n(\nele\n)\n\n\n}\n\n\n// 1\n\n\n// 2\n\n\n// 3\n\n\n// 4\n\n\n// 5\n\n\n\n\n\nArray\n.\nprototype\n.\ntest\n \n=\n \nfunction\n \n()\n \n{}\n\n\n\nlet\n \narr\n \n=\n \n[\n1\n,\n \n2\n,\n \n3\n,\n \n4\n,\n \n5\n]\n\n\n\nfor\n \n(\nlet\n \nx\n \nin\n \narr\n)\n \n{\n\n    \nlet\n \nele\n \n=\n \narr\n[\nx\n]\n\n    \nconsole\n.\nlog\n(\nele\n)\n\n\n}\n\n\n// 1\n\n\n// 2\n\n\n// 3\n\n\n// 4\n\n\n// 5\n\n\n// test \n-- wrong!\n\n\n\n\n\n\u6570\u7ec4\u904d\u5386\u63a8\u8350\u4f7f\u7528 for\nof\n\n\n\n\n\u8bed\u6cd5\n\n\n    \nfor\n \n(\nvariable\n \nof\n \niterable\n)\n \n{\n\n        \n//statements\n\n    \n}\n\n\n\n\n\n\n\nExample: for\nof\u7528\u6cd5\n\n\n\u53ef\u4ee5\u7406\u89e3\u4e3a\u771f\u6b63\u7684js\u7c7b\u4f3cpython\u7684for each\u5faa\u73af\n\n\nArray\n.\nprototype\n.\nvlaue\n \n=\n \ntest\n\n\n\nlet\n \narr\n \n=\n \n[\n1\n,\n \n2\n,\n \n3\n,\n \n4\n,\n \n5\n]\n\n\n\nfor\n \n(\nlet\n \nx\n \nof\n \narr\n)\n \n{\n\n    \nconsole\n.\nlog\n(\nx\n)\n\n\n}\n\n\n\n\n\n\u5b9e\u529b\u61f5\u903c\u7684\u539f\u578b\u94fe\u5173\u7cfb\n\n\n\n\ntypeof null // Object ???\n\n\nObject instanceof Object // true\n\n\nFunction instanceof Object // true ???\n\n\nObject instanceof Function // true ???\n\n\nFunction instanceof Function // true ???\n\n\nFunction.prototype instanceof Object // true\n\n\nFunction.prototype instanceof Function // ture ???\n\n\nObject.__proto__.__proto__.constructor == Object // true ???\n\n\nFunction.constructor === Function // true ???\n\n\n\n\n\u8fd8\u662f\u5224\u65ad\u4e00\u4e2a\u53d8\u91cf\u662f\u4e0d\u662f\u5bf9\u8c61\uff0c\u4f7f\u7528instanceof", 
            "title": "JS\u5e38\u89c1\u5927\u5751"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u5e38\u89c1\u5927\u5751/#_1", 
            "text": "", 
            "title": "\u539f\u578b\u94fe"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u5e38\u89c1\u5927\u5751/#typeofnull", 
            "text": "typeof ( null )   ===   Object   // true!   \u9519\u8bef\u7684\u5224\u65ad\u5bf9\u8c61  var   a   =   {}  if   ( typeof   a   ===   Object )   { \n     // ...  }   \u6240\u4ee5\u4f7f\u7528typeof\u5224\u65ad\u5bf9\u8c61\u7684\u6b63\u786e\u4f7f\u7528\u65b9\u6cd5  var   a   =   {}  if   ( a   !=   null     ( typeof   a   ===   object   ||   typeof   a   ===   function ))   {   // \u6ce8\u610f\u51fd\u6570\u4e5f\u662fobject... \n     // ...  }", 
            "title": "typeof(null)"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u5e38\u89c1\u5927\u5751/#_2", 
            "text": "let   sumUp   =   {}  let   content   =   providing constructor for your classes. A class contains constructors that are invoked to create objects from the class blueprint  for   ( let   word   of   content . split (   ))   { \n     if   ( ! sumUp [ word ])   { \n         sumUp [ word ]   =   1 \n     }   else   { \n         sumUp [ word ]   +=   1 \n     }  }  console . log ( sumUp )   { providing: 1,\n  constructor:  function Object() { [native code] }1 ,\n  for: 1,\n  your: 1,\n   classes. : 1,\n  A: 1,\n  class: 2,\n  contains: 1,\n  constructors: 1,\n  that: 1,\n  are: 1,\n  invoked: 1,\n  to: 1,\n  create: 1,\n  objects: 1,\n  from: 1,\n  the: 1,\n  blueprint: 1 }  let sumUp = Object.create(null)", 
            "title": "\u5ffd\u7565\u539f\u578b\u94fe\u5c5e\u6027"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u5e38\u89c1\u5927\u5751/#forin", 
            "text": "\u8fd0\u7ef4\u5f00\u53d1\u5199python\u5199\u7684\u6bd4\u8f83\u591a\u3002\u4f46\u662f\u5728python\u4e2d\u7684for in \u548cjs\u4e2d\u7684for in \u4e0d\u662f\u540c\u4e00\u4e2a\u542b\u4e49\u3002   for in\u5faa\u73af\u5b9a\u4e49  for in \u5faa\u73af\u53ea\u904d\u5386\u53ef\u679a\u4e3e\u5c5e\u6027\u3002\u50cf Array\u548c Object\u4f7f\u7528\u5185\u7f6e\u6784\u9020\u51fd\u6570\u6240\u521b\u5efa\u7684\u5bf9\u8c61\u90fd\u4f1a\u7ee7\u627f\u81eaObject.prototype\u548cString.prototype\u7684\u4e0d\u53ef\u679a\u4e3e\u5c5e\u6027\uff0c\u4f8b\u5982 String \u7684 indexOf()  \u65b9\u6cd5\u6216 Object\u7684toString()\u65b9\u6cd5\u3002\u5faa\u73af\u5c06\u904d\u5386\u5bf9\u8c61\u672c\u8eab\u7684\u6240\u6709\u53ef\u679a\u4e3e\u5c5e\u6027\uff0c\u4ee5\u53ca\u5bf9\u8c61\u4ece\u5176\u6784\u9020\u51fd\u6570\u539f\u578b\u4e2d\u7ee7\u627f\u7684\u5c5e\u6027\uff08\u66f4\u63a5\u8fd1\u539f\u578b\u94fe\u4e2d\u5bf9\u8c61\u7684\u5c5e\u6027\u8986\u76d6\u539f\u578b\u5c5e\u6027\uff09\u3002    \u53ef\u679a\u4e3e\u5c5e\u6027  \u53ef\u679a\u4e3e\u5c5e\u6027\u662f\u6307\u90a3\u4e9b\u5185\u90e8 \u201c\u53ef\u679a\u4e3e\u201d \u6807\u5fd7\u8bbe\u7f6e\u4e3a true \u7684\u5c5e\u6027\n\u9ed8\u8ba4\u6807\u8bb0\u4e3atrue\u60c5\u51b5\uff1a\n    - \u5b57\u9762\u91cf\u65b9\u5f0f\u5b9a\u4e49\u7684\u5c5e\u6027\n    - \u76f4\u63a5\u7684\u8d4b\u503c\u7684\u5c5e\u6027", 
            "title": "for...in \u64cd\u4f5c"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u5e38\u89c1\u5927\u5751/#example", 
            "text": "let   arr   =   [ 1 ,   2 ,   3 ,   4 ,   5 ]  for   ( let   x   in   arr )   { \n     let   ele   =   arr [ x ] \n     console . log ( ele )  }  // 1  // 2  // 3  // 4  // 5   Array . prototype . test   =   function   ()   {}  let   arr   =   [ 1 ,   2 ,   3 ,   4 ,   5 ]  for   ( let   x   in   arr )   { \n     let   ele   =   arr [ x ] \n     console . log ( ele )  }  // 1  // 2  // 3  // 4  // 5  // test  -- wrong!   \u6570\u7ec4\u904d\u5386\u63a8\u8350\u4f7f\u7528 for of   \u8bed\u6cd5       for   ( variable   of   iterable )   { \n         //statements \n     }", 
            "title": "Example: \u5ffd\u89c6\u539f\u578b\u94fe\u5c5e\u6027\u5bfc\u81f4\u7684\u9519\u8bef"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u5e38\u89c1\u5927\u5751/#example_forof", 
            "text": "\u53ef\u4ee5\u7406\u89e3\u4e3a\u771f\u6b63\u7684js\u7c7b\u4f3cpython\u7684for each\u5faa\u73af  Array . prototype . vlaue   =   test  let   arr   =   [ 1 ,   2 ,   3 ,   4 ,   5 ]  for   ( let   x   of   arr )   { \n     console . log ( x )  }", 
            "title": "Example: for...of\u7528\u6cd5"
        }, 
        {
            "location": "/posts/front-end/javascript/JS\u5e38\u89c1\u5927\u5751/#_3", 
            "text": "typeof null // Object ???  Object instanceof Object // true  Function instanceof Object // true ???  Object instanceof Function // true ???  Function instanceof Function // true ???  Function.prototype instanceof Object // true  Function.prototype instanceof Function // ture ???  Object.__proto__.__proto__.constructor == Object // true ???  Function.constructor === Function // true ???   \u8fd8\u662f\u5224\u65ad\u4e00\u4e2a\u53d8\u91cf\u662f\u4e0d\u662f\u5bf9\u8c61\uff0c\u4f7f\u7528instanceof", 
            "title": "\u5b9e\u529b\u61f5\u903c\u7684\u539f\u578b\u94fe\u5173\u7cfb"
        }, 
        {
            "location": "/posts/front-end/share/React\u6280\u672f\u751f\u6001\u548c\u670d\u52a1\u7aef\u6e32\u67d3/", 
            "text": "React\u6280\u672f\u751f\u6001\u548c\u670d\u52a1\u7aef\u6e32\u67d3\n\n\n\n\n@auth \u5434\u5bb6\u8363 \nhttps://github.com/wujr5\n\n\n\u8fd9\u7bc7\u6587\u7ae0\u662f\u6211\u5728Matrix\u505a\u5185\u90e8\u5206\u4eab\u7684\u5177\u4f53\u5185\u5bb9\u3002\u5206\u4eab\u65f6\u95f4\uff1a2016\u5e7412\u670824\u65e5 \u4e0a\u534810:30\uff0c\u5730\u70b9\uff1a\u4e2d\u5c71\u5927\u5b66\u6570\u636e\u79d1\u5b66\u4e0e\u8ba1\u7b97\u673a\u5b66\u9662 A319\u3002\u5206\u4eabPPT\uff1a\nReact\u6280\u672f\u751f\u6001\u548c\u670d\u52a1\u7aef\u6e32\u67d3\n\u3002\u6b64\u6587\u7ae0\u662f\u503e\u5411\u4e8e\u8bb2\u7a3f\u7684\uff0c\u56e0\u6b64\u53e3\u8bed\u5316\u53ef\u80fd\u6bd4\u8f83\u4e25\u91cd\u3002\n\n\n\n\nA hello world of react\n\n\n\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u5bf9React\u6709\u4e00\u4e2a\u76f4\u89c2\u7684\u8ba4\u8bc6\u3002\n\n\n\u9996\u5148\u660e\u786e\u4e24\u70b9\uff1a\n\n\n\n\nReact\u662f\u4e00\u4e2aView\u5c42\u7684\u5e93\n\n\nBrowser\u7aef\u7684\u5185\u5bb9\uff0c\u4e07\u53d8\u4e0d\u79bb\u5176\u5b97\uff0c\u6700\u7ec8\u90fd\u8981\u53d8\u6210JS\uff0cCSS\uff0cHTML\u5728\u6d4f\u89c8\u5668\u7aef\u88ab\u89e3\u6790\u6216\u6267\u884c\n\n\n\n\n\u4e0b\u9762\u7684\u4ee3\u7801\u662f\u6f14\u793a\u7a0b\u5e8f\u7684\u57fa\u672c\u7ed3\u6784\u3002\n\n\n!DOCTYPE html\n\n\n\nhtml\n\n  \nhead\n\n    \nmeta\n \ncharset\n=\nUTF-8\n \n/\n\n    \ntitle\nHello World\n/\ntitle\n\n    \nscript\n \nsrc\n=\nhttps://unpkg.com/react@latest/dist/react.js\n/\nscript\n\n    \nscript\n \nsrc\n=\nhttps://unpkg.com/react-dom@latest/dist/react-dom.js\n/\nscript\n\n    \nscript\n \nsrc\n=\nhttps://unpkg.com/babel-standalone@6.15.0/babel.min.js\n/\nscript\n\n  \n/\nhead\n\n\n  \nbody\n\n    \ndiv\n \nid\n=\nroot\n/\ndiv\n\n    \nscript\n \ntype\n=\ntext/babel\n\n      \n!--\n \nYour\n \nbabel\n \nreact\n \ncode\n \ngoes\n \nhere\n \n--\n\n    \n/\nscript\n\n    \nscript\n \ntype\n=\ntext/javascript\n\n      \n// Your javascript code goes here\n\n    \n/\nscript\n\n  \n/\nbody\n\n\n/\nhtml\n\n\n\n\n\nJavaScript\u5199\u6cd5\n\n\n\n\nJavaScript\u5199\u6cd5\n\u8fd9\u4e2a\u8bf4\u6cd5\u53ef\u80fd\u4e0d\u51c6\u786e\uff0c\u5148\u59d1\u4e14\u8fd9\u6837\u8bf4\u3002\u5927\u6982\u610f\u601d\u662f\u4e0d\u7ecf\u8fc7\u9884\u5904\u7406\u7684JS\u4ee3\u7801\u3002\n\n\n\n\nReactDom\n.\nrender\n(\n\n  \nReact\n.\ncreateElement\n(\nh1\n,\n \nnull\n,\n \nHello World!\n),\n\n  \ndocument\n.\ngetElementById\n(\nroot\n)\n\n\n);\n\n\n\n\n\nBabel+jsx\u5199\u6cd5\n\n\nReactDom.render(\n  \nh1\nHello World!\n/h1\n,\n  document.getElementById(\nroot\n)\n);\n\n\n\n\n\u6548\u679c\n\n\nSee the Pen \nZpvBNJ\n by Dan Abramov (\n@gaearon\n) on \nCodePen\n.\n\n\n\n\n\u4e0a\u9762\u4e24\u79cd\u5199\u6cd5\u7684\u6548\u679c\u662f\u4e00\u6837\u7684\uff0c\u533a\u522b\u5c31\u662f\u540e\u8005\u9700\u8981\u7ecf\u8fc7Babel\u8fdb\u884c\u9884\u5904\u7406\uff0c\u628a\nJSX\n\u4ee3\u7801\u8f6c\u5316\u6210\u80fd\u5728\u6d4f\u89c8\u5668\u7aef\u8fd0\u884c\u7684\nJS\n\u4ee3\u7801\uff0c\u4ee3\u7801\u653e\u7f6e\u7684\u5730\u65b9\u4e5f\u4e0d\u4e00\u6837\uff0c\u524d\u8005\u653e\u5728\nscript type=\ntext/babel\n/script\n\u5185\uff0c\u540e\u8005\u653e\u5728\nscript type=\ntext/javascript\n/script\n\u5185\u3002\n\n\nReact\u662f\u524d\u7aefView\u5c42\u7684\u5e93\uff0c\u5b83\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u8ddf\u5176\u4ed6\nMV*\n\u6846\u67b6\u7ed3\u5408\u4f7f\u7528\uff0c\u672c\u8eab\u4e0d\u6d89\u53ca\u6570\u636e\u7ba1\u7406\u3001\u72b6\u6001\u7ba1\u7406\u7b49\u3002\u4ece\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u53ef\u4ee5\u770b\u5230\u4e00\u4e2a\u5927\u6982\uff0c\u5b83\u7684\u505a\u6cd5\u662f\uff0c\u751f\u6210\u4e00\u4e2a\nReact Dom\n\uff0c\u4e5f\u5c31\u662f\u865a\u62dfDOM\uff0c\u6700\u540e\u628a\u751f\u6210\u7684\u771f\u6b63\u7684DOM\u63d2\u5165\u5230\u6307\u5b9a\u7684DOM Tree\u8282\u70b9\u4e2d\u3002\n\n\n\u8fd9\u91cc\u89e3\u6790\u4e00\u4e0b\u865a\u62dfDOM\u3002\u5b9e\u73b0\u4e86\u865a\u62dfDOM\u7684\u5e93\u6216\u67b6\u6784\uff0c\u53ef\u80fd\u6709\u4e0d\u540c\u7684\u5b9e\u73b0\u65b9\u6848\uff0c\u4f46\u5927\u6982\u601d\u8def\u662f\uff1a\u901a\u8fc7 \nelement creation\n \u64cd\u4f5c\uff0c\u6784\u5efa\u865a\u62dfDOM\u6811\n\uff08virtual dom tree\uff09\n\uff0c\u7136\u540e\u628a\u865a\u62dfDOM\u6811\nrender\n\u6210\u771f\u6b63\u7684DOM\uff0c\u6700\u540e\u628a\u5b83\u63d2\u5165\u5230\nDOM Tree\n\u7684\u67d0\u4e2a\u8282\u70b9\u4e2d\u3002\u865a\u62dfDOM\u6280\u672f\uff0c\u8fd8\u4f1a\u8bb0\u5f55\u865a\u62dfDOM\u7684\u72b6\u6001\uff0c\u5f53\u7531\u4e8e\u67d0\u4e9b\u4e8b\u4ef6\u6216\u64cd\u4f5c\u800c\u5bfc\u81f4\u72b6\u6001\u53d1\u751f\u6539\u53d8\u7684\u65f6\u5019\uff0c\u865a\u62dfDOM\u4f1a\u901a\u8fc7 \ndiff computation\n \u64cd\u4f5c\u9ad8\u6548\u4f4e\u8ba1\u7b97\u51fa\u53d1\u751f\u6539\u53d8\u7684\u5730\u65b9\uff0c\u7136\u540e\u901a\u8fc7 \npatch operations\n \u64cd\u4f5c\u6765\u5e94\u7528\u6539\u53d8\uff0c\u6700\u5c0f\u4ee3\u4ef7\u5730\u89e6\u53d1\u6d4f\u89c8\u5668\u7684\u91cd\u7ed8\u6216\u91cd\u6392\u3002\n\n\nJSX\n\n\n\u521d\u5b66\u8005\u5bf9\u4e8e\u4e0a\u9762\u7684\nBabel + JSX\n\u5199\u6cd5\u53ef\u80fd\u6709\u70b9\u7591\u60d1\u3002\nJSX\n\u53ef\u4ee5\u7406\u89e3\u4e3a\u67d0\u79cd\u610f\u4e49\u4e0a\u7684\u6587\u672c\uff0c\u5141\u8bb8\u4f60\u5728\nJS\n\u4ee3\u7801\u91cc\u9762\u5199\u643a\u5e26\nHTML\n\u6807\u7b7e\u7684\u4ee3\u7801\uff0c\u7136\u800c\u8fd9\u4e9b\u6807\u7b7e\u4ee5\u53ca\u6807\u7b7e\u5185\u7684\u5143\u7d20\u65e2\u4e0d\u662f\u5b57\u7b26\u4e32\u4e5f\u4e0d\u662f\nHTML\n\u3002\n\n\n\u539f\u751f\u7684EcmaScript\u662f\u4e0d\u652f\u6301\nJSX\n\u7684\uff0c\u56e0\u6b64\u771f\u6b63\u5e94\u7528\nJSX\n\u4e4b\u524d\uff0c\u9700\u8981\u9884\u5904\u7406\u4e00\u4e0b\uff0c\u8f6c\u5316\u6210\u4e3a\u7b49\u6548\u7684JS\u4ee3\u7801\u3002\u5728\u8fd9\u91cc\uff0c\u5145\u5f53\u9884\u5904\u7406\u5668\u4f5c\u7528\u7684\u662f\nBabel\n\u3002\u5f88\u5bb9\u6613\u60f3\u5230\uff0c\nBabel\n\u5728\u5904\u7406\nJSX\n\u7684\u65f6\u5019\uff0c\u5176\u5b9e\u662f\u5c06\u5b83\u8f6c\u5316\u6210\u4f7f\u7528\nJS\n\u76f8\u5173\u7684\u7528\u4e8eDOM\u7684\u521b\u5efa\u6216\u64cd\u4f5c\u7684\u4ee3\u7801\u3002\n\n\nReact DOM vs. DOM\n\n\n\u4e0d\u53ef\u5426\u8ba4\uff0cReact\u7684\u706b\u70ed\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u5f97\u76ca\u4e8e\u5927\u5382\u6548\u5e94\uff0c\u4f46React\u786e\u5b9e\u6709\u8fc7\u4eba\u4e4b\u5904\u3002\u5176\u4e2d\u6700\u5f15\u4eba\u77a9\u76ee\u7684\u4e00\u70b9\u662f\uff0cReact DOM\uff08\u4e5f\u5c31\u662fReact\u65b9\u5f0f\u7684\u865a\u62dfDOM\uff09\u4e0e\u539f\u751fDOM\u7684\u6bd4\u8f83\u3002\n\n\n\u865a\u62dfDOM\u7684\u521b\u5efa\u548c\u6e32\u67d3\uff0c\u90fd\u662f\u5728\u524d\u7aef\u5b8c\u6210\u7684\uff0c\u8fd0\u884c\u5728\u771f\u6b63\u7684DOM\u5728\u6d4f\u89c8\u5668\u4ea7\u751f\u548c\u5448\u73b0\u4e4b\u524d\uff0c\u8fd9\u4e2a\u65f6\u95f4\u662f\nReact\u7684\u8fd0\u884c\u65f6\n\u3002\u76f8\u5bf9\u4e8e\u76f4\u63a5\u7684HTML\u6587\u672c\u4ee3\u7801\uff0cReact\u591a\u4e86\u4e00\u4e2a\u865a\u62dfDOM\u751f\u6210\u548c\u6e32\u67d3\u7684\u65f6\u95f4\u3002\u8fd9\u4e2a\u65f6\u95f4\uff0c\u5728\u4e0d\u540c\u673a\u5668\u7684\u4e0d\u540c\u6d4f\u89c8\u5668\u4e0a\uff0c\u90fd\u6709\u5dee\u5f02\u3002\u9664\u6b64\u4ee5\u5916\uff0c\u7531\u4e8e\u5728\u5185\u5b58\u91cc\u9762\u5b58\u50a8\u865a\u62dfDOM\u7684\u5185\u5bb9\u3001\u72b6\u6001\u7b49\u6570\u636e\uff0cReact\u7684\u5185\u5b58\u5360\u7528\u91cf\u4e5f\u4f1a\u6bd4DOM\u8981\u5927\u3002\n\n\n\u5bf9\u4e8e\u524d\u7aef\u6765\u8bf4\uff0c\u6d4f\u89c8\u5668\u54cd\u5e94\u7528\u6237\u4e8b\u4ef6\u540e\uff0c\u975e\u5e38\u6602\u8d35\u7684\u64cd\u4f5c\u662f\uff0c\u6d4f\u89c8\u5668\u7684\u91cd\u7ed8\u548c\u91cd\u6392\u3002\n\n\n\n\n\u91cd\u7ed8\uff1a\u91cd\u7ed8\u662f\u4e00\u4e2a\u5143\u7d20\u5916\u89c2\u7684\u6539\u53d8\u6240\u89e6\u53d1\u7684\u6d4f\u89c8\u5668\u884c\u4e3a\uff0c\u4f8b\u5982\u6539\u53d8visibility\u3001outline\u3001\u80cc\u666f\u8272\u7b49\u5c5e\u6027\u3002\u6d4f\u89c8\u5668\u4f1a\u6839\u636e\u5143\u7d20\u7684\u65b0\u5c5e\u6027\u91cd\u65b0\u7ed8\u5236\uff0c\u4f7f\u5143\u7d20\u5448\u73b0\u65b0\u7684\u5916\u89c2\u3002\u91cd\u7ed8\u4e0d\u4f1a\u5e26\u6765\u91cd\u65b0\u5e03\u5c40\uff0c\u5e76\u4e0d\u4e00\u5b9a\u4f34\u968f\u91cd\u6392\u3002\n\n\n\u91cd\u6392\uff1a\u5f53DOM\u7684\u53d8\u5316\u5f71\u54cd\u4e86\u5143\u7d20\u7684\u51e0\u4f55\u5c5e\u6027\uff08\u5bbd\u6216\u9ad8\uff09\uff0c\u6d4f\u89c8\u5668\u9700\u8981\u91cd\u65b0\u8ba1\u7b97\u5143\u7d20\u7684\u51e0\u4f55\u5c5e\u6027\uff0c\u540c\u6837\u5176\u4ed6\u5143\u7d20\u7684\u51e0\u4f55\u5c5e\u6027\u548c\u4f4d\u7f6e\u4e5f\u4f1a\u56e0\u6b64\u53d7\u5230\u5f71\u54cd\u3002\u6d4f\u89c8\u5668\u4f1a\u4f7f\u6e32\u67d3\u6811\u4e2d\u53d7\u5230\u5f71\u54cd\u7684\u90e8\u5206\u5931\u6548\uff0c\u5e76\u91cd\u65b0\u6784\u9020\u6e32\u67d3\u6811\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u79f0\u4e3a\u91cd\u6392\u3002\u6bcf\u6b21\u91cd\u6392\uff0c\u5fc5\u7136\u4f1a\u5bfc\u81f4\u91cd\u7ed8\u3002\n\n\n\u5bfc\u81f4\u91cd\u6392\u7684\u60c5\u51b5\uff1a\n  \n1. \u6dfb\u52a0\u6216\u8005\u5220\u9664\u53ef\u89c1\u7684DOM\u5143\u7d20\n2. \u5143\u7d20\u4f4d\u7f6e\u6539\u53d8\n3. \u5143\u7d20\u5c3a\u5bf8\u6539\u53d8\n4. \u5143\u7d20\u5185\u5bb9\u6539\u53d8\uff08\u4f8b\u5982\uff1a\u4e00\u4e2a\u6587\u672c\u88ab\u53e6\u4e00\u4e2a\u4e0d\u540c\u5c3a\u5bf8\u7684\u56fe\u7247\u66ff\u4ee3\uff09\n5. \u9875\u9762\u6e32\u67d3\u521d\u59cb\u5316\uff08\u8fd9\u4e2a\u65e0\u6cd5\u907f\u514d\uff09\n7. \u6d4f\u89c8\u5668\u7a97\u53e3\u5c3a\u5bf8\u6539\u53d8\n\n\n\n\n\n\n\n\n\n\u5f88\u660e\u663e\uff0c\u76f8\u5bf9\u4e8e\u6e32\u67d3\u65f6\u95f4\u548c\u5185\u5b58\u5360\u7528\uff0c\u63d0\u9ad8\u524d\u7aef\u6027\u80fd\u66f4\u4e3a\u6838\u5fc3\u7684\u4efb\u52a1\u662f\uff0c\u5c3d\u53ef\u80fd\u5730\u51cf\u5c11\u91cd\u7ed8\u548c\u91cd\u6392\u7684\u6b21\u6570\u3002React\u7684\u865a\u62dfDOM\u6280\u672f\u548c\u5404\u4e2a\u751f\u547d\u5468\u671f\u53ca\u5176\u94a9\u5b50\u51fd\u6570\u6b63\u662f\u7528\u6765\u89e3\u51b3\u4e0a\u8ff0\u95ee\u9898\u7684\u3002\n\n\nReact\u7ec4\u4ef6\u7684\u751f\u547d\u5468\u671f\n\n\n\u4e0b\u9762\u662fReact\u7ec4\u4ef6\u7684\u5e38\u7528\u7684\u5199\u6cd5\uff0c\u7c7b\u5185\u7684\u51fd\u6570\u90fd\u662fReact\u7684\u94a9\u5b50\u51fd\u6570\uff0c\u6bcf\u4e2a\u51fd\u6570\u90fd\u5bf9\u5e94React\u7ec4\u4ef6\u4e00\u4e2a\u751f\u547d\u5468\u671f\u3002\n\n\nimport\n \nreact\n,\n \n{\n \nComponent\n \n}\n \nfrom\n \nreact\n;\n\n\n\nclass\n \nExampleComponent\n \nextends\n \nComponent\n \n{\n\n\n  \n// Mounting\n\n\n  \nconstructor\n()\n \n{\n\n    \n// do something initialized, set default props or initial state\n\n  \n}\n\n\n  \ncomponentWillMount\n()\n \n{\n\n    \n// do something before component mounting\n\n  \n}\n\n\n  \nrender\n()\n \n{\n\n    \n// return the jsx code, it will be the component\ns dom content, if state changes, it will be rerun\n\n  \n}\n\n\n  \ncomponentDidMount\n()\n \n{\n\n    \n// do something after component mounting\n\n  \n}\n\n\n  \n// Updating\n\n\n  \ncomponentWillRecieveProps\n()\n \n{\n\n    \n// do something before a mounted component receives new props\n\n  \n}\n\n\n  \nshouldComponentUpdate\n()\n \n{\n\n    \n// do something before rendering when new props or state are being received\n\n  \n}\n\n\n  \ncomponentWillUpdate\n()\n \n{\n\n    \n// do something before rendering when new props or state are being received\n\n  \n}\n\n\n  \ncomponentDidUpdate\n()\n \n{\n\n    \n// do something after updating occurs\n\n  \n}\n\n\n  \n// Unmounting\n\n\n  \ncomponentWillUnmount\n()\n \n{\n\n    \n// do something before a component is unmounted and destroyed\n\n  \n}\n\n\n\n}\n\n\n\n\n\n\u5173\u952e\u70b9\n\n\n\n\n\u7ec4\u4ef6\u7684\nprops\n\uff0c\nstate\n\u975e\u5e38\u91cd\u8981\uff0c\u7ec4\u4ef6\u7684\u52a8\u6001\u5185\u5bb9\u4e3b\u8981\u4f9d\u8d56\u8fd9\u4e24\u4e2a\u5c5e\u6027\n\n\n\u6539\u53d8\nprops\n\u7684\u65b9\u5f0f\uff1a\u6539\u53d8\u7236\u7ea7\u5143\u7d20\u4f20\u9012\u7684\nprops\n\u3001\u76f4\u63a5\u6539\u53d8\nthis.prpos\n\n\n\u6539\u53d8\nstate\n\u7684\u65b9\u5f0f\uff1a\u901a\u8fc7\u7ec4\u4ef6\u7684\nsetState\n\u51fd\u6570\u6539\u53d8\u3001\n\n\n\u7ec4\u4ef6\u7684\nstate\n\u53d8\u5316\uff0c\u4f1a\u5f15\u8d77\u7ec4\u4ef6\u7684\nrerender\n\n\n\u7ec4\u4ef6\u6709\u591a\u79cd\u7ec4\u5408\u65b9\u5f0f\uff0c\u540c\u7ea7\u7ec4\u5408\u3001\u7236\u5b50\u7ec4\u5408\u7b49\n\n\n\u7ec4\u4ef6\u5728\u4e0d\u540c\u7684\u751f\u547d\u5468\u671f\uff0c\u53ef\u4ee5\u89e6\u53d1\u4e0d\u540c\u7684\u94a9\u5b50\u51fd\u6570\n\n\n\n\n\u901a\u8fc7\u7075\u6d3b\u4f7f\u7528\u7ec4\u5408\u65b9\u5f0f\u3001\u7ec4\u4ef6\u7684\u751f\u547d\u5468\u671f\u51fd\u6570\uff0c\u501f\u52a9React\u9ad8\u6548\u7684\u66f4\u65b0\u548c\u6e32\u67d3\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5728\u524d\u7aef\u505a\u52a8\u6001\u6027\u3001\u8868\u73b0\u529b\u90fd\u5f88\u5f3a\u7684\u5355\u9875\u9762\u5e94\u7528\u3001\u591a\u9875\u9762\u5e94\u7528\u3001H5\u5e94\u7528\u7b49\u3002\n\n\nA game demo of react\n\n\n\u6211\u4eec\u6765\u770b\u4e00\u4e2a\u4f7f\u7528React\u6765\u505a\u7684\u4fc4\u7f57\u65af\u65b9\u5757\u6e38\u620f\u7684Demo\u3002\n\n\ngithub: \u7528React\u3001Redux\u3001Immutable\u505a\u4fc4\u7f57\u65af\u65b9\u5757\n\n\nDemo\n\n\n\u5173\u952e\u6280\u672f\uff1aReact, Redux, Immutable, Webpack, Babel, Web Audio\n\n\nReact\u751f\u6001\n\n\n\u7531\u4e8eReact\u662f\u524d\u7aefView\u5c42\u7684\u5e93\uff0c\u4f7f\u7528\u65b9\u5f0f\u5341\u5206\u7075\u6d3b\uff0c\u53ef\u4ee5\u8ddf\u73b0\u6709\u7684\u5f88\u591a\u5e93\u6216\u6846\u67b6\u7ed3\u5408\u4f7f\u7528\u3002\u4e5f\u56e0\u6b64\u884d\u751f\u4e86React\u7684\u6280\u672f\u751f\u6001\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u9875\u9762\u4e00\u7aa5\u7a76\u7adf\uff1a\nComplementary Tools\n\n\n\n\n\u6211\u6240\u80fd\u60f3\u5230\u7684React\u7684\u4f7f\u7528\u65b9\u5f0f\u6709\uff1a\n\n\n\n\n\u4f20\u7edf\u9875\u9762\u5e94\u7528 or MV*\uff1areact + others library or framework\n\n\nSPA\uff1areact + react-router\n\n\nSPA + flux\uff1areact + react-router + flux\u5e93\uff08Redux\u7b49\uff09\n\n\nReact Native\u5f00\u53d1\u8de8\u5e73\u53f0\u79fb\u52a8\u5e94\u7528\n\n\nUniversal App\uff1aServer Side Rendering\n\n\n\n\nReact\u751f\u6001\uff1areact-router\n\n\n\n\nreact\u7684\u524d\u7aef\u8def\u7531\uff0c\u53ef\u4ee5\u7ed3\u5408redux\u4f7f\u7528\uff0c\u662f\u5229\u7528React\u505aSPA\u7684\u4e0d\u53ef\u6216\u7f3a\u7684\u6280\u672f\u3002\u5b9e\u73b0\u65b9\u5f0f\uff1a\n\n\n\n\n\u57fa\u4e8eHTML5 history API\n\n\n\u57fa\u4e8e\u524d\u7aef\n#\u5b57\u7b26\u4e32\n\n\n\n\n\u4e0e\u5176\u4ed6SPA\u6846\u67b6\u5b9e\u73b0\u601d\u8def\u7c7b\u4f3c\u3002\n\n\nReact\u751f\u6001\uff1aflux\n\n\n\u51e0\u4e2a\u5173\u952e\u70b9\uff1a\n\n\n\n\nfacebook\u63d0\u51fa\u7684flux\u66f4\u591a\u662f\u4e00\u79cd\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u800c\u4e0d\u662f\u6846\u67b6\n\n\nflux\u6709\u591a\u91cd\u5b9e\u73b0\u65b9\u6848\uff0credux\u662f\u5176\u4e2d\u4e4b\u4e00\n\n\n\u601d\u8def\uff1a\u5355\u5411\u6570\u636e\u6d41\n\n\n\u5173\u952e\u70b9\uff1a\ndispatcher\n\uff0c\nstore\n\uff0c\naction\n\uff0c\nreducer\n\uff0c\nview\n\n\nstore\n\u53ef\u4ee5\u7ba1\u7406react\u7ec4\u4ef6\u7684\u72b6\u6001\uff0c\u5f53\nstore\n\u6539\u53d8\u7684\u65f6\u5019\uff0c\u4f1a\u6700\u4f4e\u4ee3\u4ef7\u5730\u66f4\u65b0react\u7ec4\u4ef6\n\n\n\n\n\n\nFlux is the application architecture that Facebook uses for building client-side web applications. It complements React's composable view components by utilizing a unidirectional data flow. It's more of a pattern rather than a formal framework, and you can start using Flux immediately without a lot of new code.\n\n\nFrom \nFlux: In Depth Overview\n\n\n\n\n\u5173\u952e\u601d\u60f3\uff1a\n\n\n\n\nRedux\n\n\n\n\nRedux is a predictable state container for JavaScript apps.\n\n\n\n\nRedux\u662f\u4e00\u4e2a\u53ef\u9884\u6d4b\u7684\u72b6\u6001\u5bb9\u5668\uff0c\u662fflux\u601d\u60f3\u7684\u4e00\u79cd\u5b9e\u73b0\u65b9\u6848\u3002\n\n\n\n\nRedux \u7684\u7075\u611f\u6765\u6e90\u4e8e Flux \u7684\u51e0\u4e2a\u91cd\u8981\u7279\u6027\u3002\u548c Flux \u4e00\u6837\uff0cRedux \u89c4\u5b9a\uff0c\u5c06\u6a21\u578b\u7684\u66f4\u65b0\u903b\u8f91\u5168\u90e8\u96c6\u4e2d\u4e8e\u4e00\u4e2a\u7279\u5b9a\u7684\u5c42\uff08Flux \u91cc\u7684 store\uff0cRedux \u91cc\u7684 reducer\uff09\u3002Flux \u548c Redux \u90fd\u4e0d\u5141\u8bb8\u7a0b\u5e8f\u76f4\u63a5\u4fee\u6539\u6570\u636e\uff0c\u800c\u662f\u7528\u4e00\u4e2a\u53eb\u4f5c \u201caction\u201d \u7684\u666e\u901a\u5bf9\u8c61\u6765\u5bf9\u66f4\u6539\u8fdb\u884c\u63cf\u8ff0\u3002\n\n\n\u800c\u4e0d\u540c\u4e8e Flux \uff0cRedux \u5e76\u6ca1\u6709 dispatcher \u7684\u6982\u5ff5\u3002\u539f\u56e0\u662f\u5b83\u4f9d\u8d56\u7eaf\u51fd\u6570\u6765\u66ff\u4ee3\u4e8b\u4ef6\u5904\u7406\u5668\u3002\u7eaf\u51fd\u6570\u6784\u5efa\u7b80\u5355\uff0c\u4e5f\u4e0d\u9700\u989d\u5916\u7684\u5b9e\u4f53\u6765\u7ba1\u7406\u5b83\u4eec\u3002\u4f60\u53ef\u4ee5\u5c06\u8fd9\u70b9\u770b\u4f5c\u8fd9\u4e24\u4e2a\u6846\u67b6\u7684\u5dee\u5f02\u6216\u7ec6\u8282\u5b9e\u73b0\uff0c\u53d6\u51b3\u4e8e\u4f60\u600e\u4e48\u770b Flux\u3002Flux \u5e38\u5e38\u88ab\u8868\u8ff0\u4e3a (state, action) =\n state\u3002\u4ece\u8fd9\u4e2a\u610f\u4e49\u4e0a\u8bf4\uff0cRedux \u65e0\u7591\u662f Flux \u67b6\u6784\u7684\u5b9e\u73b0\uff0c\u4e14\u5f97\u76ca\u4e8e\u7eaf\u51fd\u6570\u800c\u66f4\u4e3a\u7b80\u5355\u3002\n\n\n\u548c Flux \u7684\u53e6\u4e00\u4e2a\u91cd\u8981\u533a\u522b\uff0c\u662f Redux \u8bbe\u60f3\u4f60\u6c38\u8fdc\u4e0d\u4f1a\u53d8\u52a8\u4f60\u7684\u6570\u636e\u3002\u4f60\u53ef\u4ee5\u5f88\u597d\u5730\u4f7f\u7528\u666e\u901a\u5bf9\u8c61\u548c\u6570\u7ec4\u6765\u7ba1\u7406 state \uff0c\u800c\u4e0d\u662f\u5728\u591a\u4e2a reducer \u91cc\u53d8\u52a8\u6570\u636e\u3002\u6b63\u786e\u4e14\u7b80\u4fbf\u7684\u65b9\u5f0f\u662f\uff0c\u4f60\u5e94\u8be5\u5728 reducer \u4e2d\u8fd4\u56de\u4e00\u4e2a\u65b0\u5bf9\u8c61\u6765\u66f4\u65b0 state\uff0c \u540c\u65f6\u914d\u5408 object spread \u8fd0\u7b97\u7b26\u63d0\u6848 \u6216\u4e00\u4e9b\u5e93\uff0c\u5982 Immutable\u3002\n\n\n\u867d\u7136\u51fa\u4e8e\u6027\u80fd\u65b9\u9762\u7684\u8003\u8651\uff0c\u5199\u4e0d\u7eaf\u7684 reducer \u6765\u53d8\u52a8\u6570\u636e\u5728\u6280\u672f\u4e0a\u662f\u53ef\u884c\u7684\uff0c\u4f46\u6211\u4eec\u5e76\u4e0d\u9f13\u52b1\u8fd9\u4e48\u505a\u3002\u4e0d\u7eaf\u7684 reducer \u4f1a\u4f7f\u4e00\u4e9b\u5f00\u53d1\u7279\u6027\uff0c\u5982\u65f6\u95f4\u65c5\u884c\u3001\u8bb0\u5f55/\u56de\u653e\u6216\u70ed\u52a0\u8f7d\u4e0d\u53ef\u5b9e\u73b0\u3002\u6b64\u5916\uff0c\u5728\u5927\u90e8\u5206\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u8fd9\u79cd\u6570\u636e\u4e0d\u53ef\u53d8\u52a8\u7684\u7279\u6027\u5e76\u4e0d\u4f1a\u5e26\u6765\u6027\u80fd\u95ee\u9898\uff0c\u5c31\u50cf Om \u6240\u8868\u73b0\u7684\uff0c\u5373\u4f7f\u5bf9\u8c61\u5206\u914d\u5931\u8d25\uff0c\u4ecd\u53ef\u4ee5\u9632\u6b62\u6602\u8d35\u7684\u91cd\u6e32\u67d3\u548c\u91cd\u8ba1\u7b97\u3002\u800c\u5f97\u76ca\u4e8e reducer \u7684\u7eaf\u5ea6\uff0c\u5e94\u7528\u5185\u7684\u53d8\u5316\u66f4\u662f\u4e00\u76ee\u4e86\u7136\u3002\n\n\n\n\nReact\u751f\u6001\uff1aUI\u7ec4\u4ef6\u5e93\n\n\nUI\u6709\u5f88\u591a\u7ec4\u4ef6\u5e93\uff0c\u8fd9\u91cc\u662f\u5b98\u65b9\u5217\u4e3e\u7684\u7ec4\u4ef6\u5e93\u8d44\u6e90\uff1a\uff08\u66f4\u65b0\u4e8e2016/12/24\uff09\n\n\n\n\nColor Picker\n Color picker control with single and multiple select\n\n\nResponsive Calendar\n Responsive Calendar for mobile, tablet and desktop\n\n\nMobile date \n time picker control\n Cross platfrom mobile date \n time picker control for React.\n\n\nMobiscroll\n UI components for mobile web and hybrid apps.\n\n\nag-Grid\n Advanced data grid / data table for React.\n\n\nGrommet\n The most advanced open source UX framework for enterprise applications.\n\n\nReact Web\n A framework for building web apps with React.\n\n\nReact Mdl\n React Components for Material Design Lite.\n\n\nAmaze UI React\n (in Chinese):\n \nAmaze UI\n components built with React.\n\n\nBelle\n:\n Configurable React Components with great UX\n\n\nKhan Academy's component library\n\n\nElemental UI\n:\n A UI toolkit for React websites and apps, themeable and composed of individually packaged components\n\n\nHalogen\n:\n A collection of highly customizable loading spinner animations with React.\n\n\nreact-bootstrap\n:\n Bootstrap 3 components built with React.\n\n\nreact-bootstrap-table\n:\n It's a react table for Bootstrap.\n\n\nreact-bootstrap-dialog\n:\n React Dialog component for react-bootstrap, instead of \nwindow.alert\n or \nwindow.confirm\n\n\nTopcoat UI Components\n:\n Topcoat UI Components built with react.\n\n\nreact-foundation-apps\n:\n Foundation Apps components built with React\n\n\norb\n:\n React pivot grid.\n\n\nreact-topcoat\n:\n Topcoat components built with React.\n\n\nreact-slick\n:\n Carousel component built with React\n\n\nreact-lorem-component\n:\n Lorem Ipsum placeholder component.\n\n\nwingspan-forms\n:\n React library for dynamic forms \n grids; widgets provided by KendoUI.\n\n\nreact-translate-component\n:\n React component for i18n.\n\n\nnewforms\n:\n Form-handling library which renders to \nReact.DOM\n components on the client and the server.\n\n\nreact-highlight\n:\n React component for syntax highlighting\n\n\nreact-responsive-mixin\n:\n Mixin to develop responsive react components\n\n\nreact-chosen\n:\n React wrapper for Chosen jQuery.\n\n\nreact-select\n:\n Native React Select / Multiselect input field, similar to Selectize / Chosen / Select2\n\n\nreact-ladda\n:\n React wrapper for Ladda buttons.\n\n\nreact-scroll-components\n:\n A set of components and mixins that react to page scrolling.\n\n\nreact-forms\n:\n Form rendering and validation for React\n\n\nvaluelink\n:\n Full-featured two-way data binding and forms validation with extended React links.\n\n\ntcomb-form\n:\n Automatically generate form markup, automatic labels and inline validation from a domain model\n\n\nreact-treeview\n:\n Easy, light, flexible tree view.\n\n\nreact-multiselect\n:\n Filter and select from a list of items.\n\n\nreact-date-picker\n:\n A simple and reusable datepicker component for React.\n\n\nreact-textarea-autosize\n:\n Like \ntextarea /\n but resizes automatically to fit all its content.\n\n\nreact-growable-textarea\n:\n Resizes \ntextarea /\n to fit all its content using a css shim (no javascript calculations).\n\n\nreact-input-autosize\n:\n Like \ninput /\n but resizes automatically to fit all its content.\n\n\nReact-TimeAgo\n A minimal live updating Time Ago component that smartly converts any time to a \u2018ago\u2019 or \u2018from now\u2019 format and keeps it updated.\n\n\nreact-maps\n Embed Google Maps. Supports markers, polylines and programmatic mutation.\n\n\nmaterial-ui\n A set of React Components that implement Google's Material Design.\n\n\nstorybook-addon-material-ui\n A storybook addon for material-ui\n\n\nAnt Design of React\n An enterprise-class UI design language and React-based implementation.\n\n\nreact-tappable\n A Tappable React Component that provides native-feeling onTap events for mobile React apps\n\n\nreact-tour-guide\nA ReactJS mixin to give new users a popup-based tour of your application\n\n\nreact-contentEditable\n Example component for contentEditable elements\n\n\nreact-dnd\n Flexible HTML5 drag-and-drop mixin for React with full DOM control\n\n\nreact-autosuggest\n WAI-ARIA compliant React autosuggest component\n\n\nreact-document-title\n Declarative, nested, stateful, isomorphic document.title for React\n\n\nreact-image\n:\n Like \nimg /\n and Enhanced Image Component for React.\n\n\nreact-intense\n:\n A component for viewing large images up close\n\n\nreact-mq\n:\n Easy Media Query Helper for React.\n\n\nreact-timesheet\n:\n Visualize your data and events with sexy time sheet component.\n\n\nreact-switch-button\n:\n Beautiful React Switch button component\n\n\nreact-amiga-guru-meditation\n:\n React JS Class to display a Amiga Guru Meditation Tribute\n\n\nreact-notification\n:\n Snackbar style notifications\n\n\nreact-swipe-views\n:\n React Swipe Views\n\n\nreact-spreadsheet\n:\n React Spreadsheets / Editable tables with Excel-Style keyboard input and navigation\n\n\nreact-dropzone\n:\n React Dropzone for File-Uploads\n\n\nreact-twitter-typeahead\n:\n React auto-suggestion component\n\n\nreact-sparklines\n:\n Beautiful and expressive sparklines component\n\n\nWinterfell\n:\n Generate complex, validated and extendable JSON-based forms in React\n\n\nreact-selectize\n:\n A stateless \n flexible Select component, designed as a drop in replacement for React.DOM.Select, inspired by Selectize \n\n\nreact-joyride\n:\n Create walkthroughs and guided tours for your ReactJS apps.\n\n\nreact-stamp\n:\n Composables for React.\n\n\nmobservable-react-buttons\n:\n These are rollover buttons with some extra functionality. A more elaborate demo is running at \nhttp://schalk.ninja\n but I don't presently have a repo available.\n\n\nUXCore\n (in Chinese):\n \nUXCore\n UXCore components built with React.\n\n\nreactstrap\n:\n Simple Bootstrap 4 components built with \ntether\n\n\nOnsen UI React Components\n:\n UI components for hybrid mobile apps with both Material Design for Android and flat design for iOS.\n\n\nreact-pagenav\n:\n react pagenav component. [\ndemo\n]\n\n\nReact Amazing Grid\n Flex grid with inline styles.\n\n\nSelectivity\n:\n Modular and light-weight selection library.\n\n\nreact-jogwheel\n: Take control of your CSS keyframe animations with React\n\n\nWijmo React Interop\n: How to use Wijmo controls in ReactJS apps.\n\n\nWijmo FlexGrid for React\n: A high-performance datagrid that is small and extensible with ReactJS support.\n\n\nWijmo FlexChart for React\n: A full-featured chart control with ReactJS support.\n\n\nWijmo Input controls for React\n: A set of form input controls (AutoComplete, InputDate, InputNumber, InputMask, etc) with ReactJS support.\n\n\nWijmo Gauges for React\n: Linear and radial gauges and a bullet graph with ReactJS support.\n\n\nSemantic-ui\n: The official Semantic-UI-React integration, Advanced components and declarative UI.\n\n\nmarkdown-to-jsx\n: compiles markdown into safe React JSX without using dangerous escape hatches\n\n\nchartify\n: Ultra lightweight and customizable React.js chart component\n\n\nreact-sigma\n: Lightweight but powerful library for drawing network graphs\n\n\n\n\nReact\u751f\u6001\uff1aReact Native\n\n\nReact Native\n \u662f\u4e00\u4e2a\u53ef\u4ee5\u8ba9\u4f60\u4ec5\u4ec5\u4f7f\u7528JS\u5c31\u80fd\u5199\u8de8\u5e73\u53f0\u79fb\u52a8\u5e94\u7528\u7684\u5e93\u3002\n\n\n\u5199\u6cd5\u4e0e\u5199React\u975e\u5e38\u7c7b\u4f3c\u3002\u540c\u65f6\u53ef\u4ee5\u7ed3\u5408Native\u7684\u4ee3\u7801\u4e00\u8d77\u6784\u5efaNative Application\u3002\n\n\nimport React, { Component } from \nreact\n;\nimport { Text, View } from \nreact-native\n;\n\nclass WhyReactNativeIsSoGreat extends Component {\n  render() {\n    return (\n      \nView\n\n        \nText\n\n          If you like React on the web, you\nll like React Native.\n        \n/Text\n\n        \nText\n\n          You just use native components like \nView\n and \nText\n,\n          instead of web components like \ndiv\n and \nspan\n.\n        \n/Text\n\n      \n/View\n\n    );\n  }\n}\n\n\n\n\nimport React, { Component } from \nreact\n;\nimport { Image, ScrollView, Text } from \nreact-native\n;\n\nclass AwkwardScrollingImageWithText extends Component {\n  render() {\n    return (\n      \nScrollView\n\n        \nImage source={{uri: \nhttps://i.chzbgr.com/full/7345954048/h7E2C65F9/\n}} /\n\n        \nText\n\n          On iOS, a React Native ScrollView uses a native UIScrollView.\n          On Android, it uses a native ScrollView.\n\n          On iOS, a React Native Image uses a native UIImageView.\n          On Android, it uses a native ImageView.\n\n          React Native wraps the fundamental native components, giving you\n          the performance of a native app, plus the clean design of React.\n        \n/Text\n\n      \n/ScrollView\n\n    );\n  }\n}\n\n\n\n\n\u670d\u52a1\u7aef\u6e32\u67d3\n\n\n\u524d\u7aef\u6846\u67b6\u7684\u8fd0\u884c\u65f6\u662f\u5728\u524d\u7aef\u8fdb\u884c\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\u4ece\u9875\u9762\u52a0\u8f7d\u5b8c\u6210\uff0c\u5230\u7528\u6237\u770b\u5230\u5b8c\u6574\u7684\u9875\u9762\uff0c\u4e2d\u95f4\u6709\u4e00\u4e2a\u6267\u884c\u8fc7\u7a0b\uff0c\u800c\u8fd9\u4e2a\u6267\u884c\u65f6\u95f4\u7684\u957f\u77ed\uff0c\u8ddf\u5e94\u7528\u7684\u590d\u6742\u5ea6\u6709\u5173\uff0c\u4e5f\u8ddf\u6846\u67b6\u7684\u5b9e\u73b0\u65b9\u5f0f\u6709\u5173\u3002React\u7684\u6e32\u67d3\u65f6\u95f4\u4e0e\u5176\u4ed6\u6846\u67b6\u7684\u6e32\u67d3\u65f6\u95f4\uff0c\u5bf9\u6bd4\u5982\u4e0b\uff1a\n\n\n\n\n\n\nfrom \navalon\n\n\n\n\n\u76f4\u89c2\u7684\u4f53\u9a8c\u5c31\u662f\uff0c\u5982\u679c\u6e32\u67d3\u65f6\u95f4\u8fc7\u957f\uff0c\u4f1a\u6709\u4e00\u79cd\u767d\u5c4f\u6216\u5361\u987f\u7684\u611f\u89c9\u3002\n\n\n\u670d\u52a1\u7aef\u6e32\u67d3\uff0c\u5c31\u662f\u8fd9\u4e2a\u95ee\u9898\u7684\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u3002\u6211\u4eec\u518d\u770b\u4e00\u4e0b\u524d\u7aef\u6e32\u67d3\u5b58\u5728\u7684\u5176\u4ed6\u95ee\u9898\u3002\n\n\n\u524d\u7aef\u6e32\u67d3\u5b58\u5728\u7684\u95ee\u9898\n\n\n\n\n\n\nSEO\u95ee\u9898\n\n\n\u6027\u80fd\u95ee\u9898\uff08\u52a0\u8f7d\u65f6\u95f4\u3001\u6253\u5305\u5927\u5c0f\u3001\u89e3\u6790\u6e32\u67d3\u7b49\uff09\n\n\n\n\nUniversal app\n\n\n\n\nIsomorphism\n is the functional aspect of seamlessly switching between client- and server-side rendering without losing state. \nUniversal\n is a term used to emphasize the fact that a particular piece of JavaScript code is able to run in multiple environments.\n\n\n\n\nIsomorphism: not losing state, rendering everywhere\n\n\nUniversal: no duplication, example: \nLodash\n, uesed everywhere\n\n\nServer Side Rendering\n\n\nReact\u7684\u505a\u6cd5\n\n\n\u8981\u601d\u8003\u7684\u95ee\u9898\uff1a\n\n\n\n\n\u8def\u7531\u95ee\u9898\n\n\n\u72b6\u6001\u95ee\u9898\n\n\n\u6570\u636e\u9884\u8bf7\u6c42\u95ee\u9898\n\n\n\n\nreact\u7684\u505a\u6cd5\uff1a\n\n\nimport\n \n{\n \nrenderToString\n \n}\n \nfrom\n \nreact-dom/server\n;\n\n\n\n\n\nreact + react-router + redux\u7684\u505a\u6cd5\uff1a\n\n\nimport { renderToString } from \nreact-dom/server\n;\n\n// a peice of code\nrenderToString(\n  \nProvider store={ store }\n\n    \nRouterContext { ...props } /\n\n  \n/Provider\n\n);\n\n// a peice of code\nmatch({ routes, location }, (error, redirectLocation, renderProps) =\n {\n  if (error) {\n    res.status(500).send(error.message);\n  } else if (redirectLocation) {\n    res.status(302).redirect(redirectLocation.pathname + redirectLocation.search);\n  } else if (renderProps) {\n    serverSideRender(\n      renderProps,\n      pugText,\n      store\n    ).then(function (html) {\n      res.status(200).send(html);\n    }, function (error2) {\n      res.status(500).send(JSON.stringify(error2));\n    });\n  } else {\n    res.status(404).send();\n  }\n});\n\n\n\n\nReference\n\n\n\n\nHTML Presentation Framework: Reveal.js\n\n\nComparing React.js performance vs. native DOM\n\n\n\u9ad8\u6027\u80fdJavaScript \u91cd\u6392\u4e0e\u91cd\u7ed8\n\n\n\u6d4f\u89c8\u5668\u7684\u91cd\u7ed8\u4e0e\u91cd\u6392\n\n\nVirtual DOM and diffing algorithm\n\n\nvirtual-dom\n\n\nIsomorphic JavaScript: The Future of Web Apps\n\n\nIsomorphism vs Universal JavaScript", 
            "title": "\u5434\u5bb6\u8363\u5927\u4f6c-React\u6280\u672f\u751f\u6001\u548c\u670d\u52a1\u7aef\u6e32\u67d3"
        }, 
        {
            "location": "/posts/front-end/share/React\u6280\u672f\u751f\u6001\u548c\u670d\u52a1\u7aef\u6e32\u67d3/#react", 
            "text": "@auth \u5434\u5bb6\u8363  https://github.com/wujr5  \u8fd9\u7bc7\u6587\u7ae0\u662f\u6211\u5728Matrix\u505a\u5185\u90e8\u5206\u4eab\u7684\u5177\u4f53\u5185\u5bb9\u3002\u5206\u4eab\u65f6\u95f4\uff1a2016\u5e7412\u670824\u65e5 \u4e0a\u534810:30\uff0c\u5730\u70b9\uff1a\u4e2d\u5c71\u5927\u5b66\u6570\u636e\u79d1\u5b66\u4e0e\u8ba1\u7b97\u673a\u5b66\u9662 A319\u3002\u5206\u4eabPPT\uff1a React\u6280\u672f\u751f\u6001\u548c\u670d\u52a1\u7aef\u6e32\u67d3 \u3002\u6b64\u6587\u7ae0\u662f\u503e\u5411\u4e8e\u8bb2\u7a3f\u7684\uff0c\u56e0\u6b64\u53e3\u8bed\u5316\u53ef\u80fd\u6bd4\u8f83\u4e25\u91cd\u3002", 
            "title": "React\u6280\u672f\u751f\u6001\u548c\u670d\u52a1\u7aef\u6e32\u67d3"
        }, 
        {
            "location": "/posts/front-end/share/React\u6280\u672f\u751f\u6001\u548c\u670d\u52a1\u7aef\u6e32\u67d3/#a_hello_world_of_react", 
            "text": "\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u5bf9React\u6709\u4e00\u4e2a\u76f4\u89c2\u7684\u8ba4\u8bc6\u3002  \u9996\u5148\u660e\u786e\u4e24\u70b9\uff1a   React\u662f\u4e00\u4e2aView\u5c42\u7684\u5e93  Browser\u7aef\u7684\u5185\u5bb9\uff0c\u4e07\u53d8\u4e0d\u79bb\u5176\u5b97\uff0c\u6700\u7ec8\u90fd\u8981\u53d8\u6210JS\uff0cCSS\uff0cHTML\u5728\u6d4f\u89c8\u5668\u7aef\u88ab\u89e3\u6790\u6216\u6267\u884c   \u4e0b\u9762\u7684\u4ee3\u7801\u662f\u6f14\u793a\u7a0b\u5e8f\u7684\u57fa\u672c\u7ed3\u6784\u3002  !DOCTYPE html  html \n   head \n     meta   charset = UTF-8   / \n     title Hello World / title \n     script   src = https://unpkg.com/react@latest/dist/react.js / script \n     script   src = https://unpkg.com/react-dom@latest/dist/react-dom.js / script \n     script   src = https://unpkg.com/babel-standalone@6.15.0/babel.min.js / script \n   / head \n\n   body \n     div   id = root / div \n     script   type = text/babel \n       !--   Your   babel   react   code   goes   here   -- \n     / script \n     script   type = text/javascript \n       // Your javascript code goes here \n     / script \n   / body  / html   JavaScript\u5199\u6cd5   JavaScript\u5199\u6cd5 \u8fd9\u4e2a\u8bf4\u6cd5\u53ef\u80fd\u4e0d\u51c6\u786e\uff0c\u5148\u59d1\u4e14\u8fd9\u6837\u8bf4\u3002\u5927\u6982\u610f\u601d\u662f\u4e0d\u7ecf\u8fc7\u9884\u5904\u7406\u7684JS\u4ee3\u7801\u3002   ReactDom . render ( \n   React . createElement ( h1 ,   null ,   Hello World! ), \n   document . getElementById ( root )  );   Babel+jsx\u5199\u6cd5  ReactDom.render(\n   h1 Hello World! /h1 ,\n  document.getElementById( root )\n);  \u6548\u679c  See the Pen  ZpvBNJ  by Dan Abramov ( @gaearon ) on  CodePen .  \u4e0a\u9762\u4e24\u79cd\u5199\u6cd5\u7684\u6548\u679c\u662f\u4e00\u6837\u7684\uff0c\u533a\u522b\u5c31\u662f\u540e\u8005\u9700\u8981\u7ecf\u8fc7Babel\u8fdb\u884c\u9884\u5904\u7406\uff0c\u628a JSX \u4ee3\u7801\u8f6c\u5316\u6210\u80fd\u5728\u6d4f\u89c8\u5668\u7aef\u8fd0\u884c\u7684 JS \u4ee3\u7801\uff0c\u4ee3\u7801\u653e\u7f6e\u7684\u5730\u65b9\u4e5f\u4e0d\u4e00\u6837\uff0c\u524d\u8005\u653e\u5728 script type= text/babel /script \u5185\uff0c\u540e\u8005\u653e\u5728 script type= text/javascript /script \u5185\u3002  React\u662f\u524d\u7aefView\u5c42\u7684\u5e93\uff0c\u5b83\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u8ddf\u5176\u4ed6 MV* \u6846\u67b6\u7ed3\u5408\u4f7f\u7528\uff0c\u672c\u8eab\u4e0d\u6d89\u53ca\u6570\u636e\u7ba1\u7406\u3001\u72b6\u6001\u7ba1\u7406\u7b49\u3002\u4ece\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u53ef\u4ee5\u770b\u5230\u4e00\u4e2a\u5927\u6982\uff0c\u5b83\u7684\u505a\u6cd5\u662f\uff0c\u751f\u6210\u4e00\u4e2a React Dom \uff0c\u4e5f\u5c31\u662f\u865a\u62dfDOM\uff0c\u6700\u540e\u628a\u751f\u6210\u7684\u771f\u6b63\u7684DOM\u63d2\u5165\u5230\u6307\u5b9a\u7684DOM Tree\u8282\u70b9\u4e2d\u3002  \u8fd9\u91cc\u89e3\u6790\u4e00\u4e0b\u865a\u62dfDOM\u3002\u5b9e\u73b0\u4e86\u865a\u62dfDOM\u7684\u5e93\u6216\u67b6\u6784\uff0c\u53ef\u80fd\u6709\u4e0d\u540c\u7684\u5b9e\u73b0\u65b9\u6848\uff0c\u4f46\u5927\u6982\u601d\u8def\u662f\uff1a\u901a\u8fc7  element creation  \u64cd\u4f5c\uff0c\u6784\u5efa\u865a\u62dfDOM\u6811 \uff08virtual dom tree\uff09 \uff0c\u7136\u540e\u628a\u865a\u62dfDOM\u6811 render \u6210\u771f\u6b63\u7684DOM\uff0c\u6700\u540e\u628a\u5b83\u63d2\u5165\u5230 DOM Tree \u7684\u67d0\u4e2a\u8282\u70b9\u4e2d\u3002\u865a\u62dfDOM\u6280\u672f\uff0c\u8fd8\u4f1a\u8bb0\u5f55\u865a\u62dfDOM\u7684\u72b6\u6001\uff0c\u5f53\u7531\u4e8e\u67d0\u4e9b\u4e8b\u4ef6\u6216\u64cd\u4f5c\u800c\u5bfc\u81f4\u72b6\u6001\u53d1\u751f\u6539\u53d8\u7684\u65f6\u5019\uff0c\u865a\u62dfDOM\u4f1a\u901a\u8fc7  diff computation  \u64cd\u4f5c\u9ad8\u6548\u4f4e\u8ba1\u7b97\u51fa\u53d1\u751f\u6539\u53d8\u7684\u5730\u65b9\uff0c\u7136\u540e\u901a\u8fc7  patch operations  \u64cd\u4f5c\u6765\u5e94\u7528\u6539\u53d8\uff0c\u6700\u5c0f\u4ee3\u4ef7\u5730\u89e6\u53d1\u6d4f\u89c8\u5668\u7684\u91cd\u7ed8\u6216\u91cd\u6392\u3002", 
            "title": "A hello world of react"
        }, 
        {
            "location": "/posts/front-end/share/React\u6280\u672f\u751f\u6001\u548c\u670d\u52a1\u7aef\u6e32\u67d3/#jsx", 
            "text": "\u521d\u5b66\u8005\u5bf9\u4e8e\u4e0a\u9762\u7684 Babel + JSX \u5199\u6cd5\u53ef\u80fd\u6709\u70b9\u7591\u60d1\u3002 JSX \u53ef\u4ee5\u7406\u89e3\u4e3a\u67d0\u79cd\u610f\u4e49\u4e0a\u7684\u6587\u672c\uff0c\u5141\u8bb8\u4f60\u5728 JS \u4ee3\u7801\u91cc\u9762\u5199\u643a\u5e26 HTML \u6807\u7b7e\u7684\u4ee3\u7801\uff0c\u7136\u800c\u8fd9\u4e9b\u6807\u7b7e\u4ee5\u53ca\u6807\u7b7e\u5185\u7684\u5143\u7d20\u65e2\u4e0d\u662f\u5b57\u7b26\u4e32\u4e5f\u4e0d\u662f HTML \u3002  \u539f\u751f\u7684EcmaScript\u662f\u4e0d\u652f\u6301 JSX \u7684\uff0c\u56e0\u6b64\u771f\u6b63\u5e94\u7528 JSX \u4e4b\u524d\uff0c\u9700\u8981\u9884\u5904\u7406\u4e00\u4e0b\uff0c\u8f6c\u5316\u6210\u4e3a\u7b49\u6548\u7684JS\u4ee3\u7801\u3002\u5728\u8fd9\u91cc\uff0c\u5145\u5f53\u9884\u5904\u7406\u5668\u4f5c\u7528\u7684\u662f Babel \u3002\u5f88\u5bb9\u6613\u60f3\u5230\uff0c Babel \u5728\u5904\u7406 JSX \u7684\u65f6\u5019\uff0c\u5176\u5b9e\u662f\u5c06\u5b83\u8f6c\u5316\u6210\u4f7f\u7528 JS \u76f8\u5173\u7684\u7528\u4e8eDOM\u7684\u521b\u5efa\u6216\u64cd\u4f5c\u7684\u4ee3\u7801\u3002", 
            "title": "JSX"
        }, 
        {
            "location": "/posts/front-end/share/React\u6280\u672f\u751f\u6001\u548c\u670d\u52a1\u7aef\u6e32\u67d3/#react_dom_vs_dom", 
            "text": "\u4e0d\u53ef\u5426\u8ba4\uff0cReact\u7684\u706b\u70ed\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u5f97\u76ca\u4e8e\u5927\u5382\u6548\u5e94\uff0c\u4f46React\u786e\u5b9e\u6709\u8fc7\u4eba\u4e4b\u5904\u3002\u5176\u4e2d\u6700\u5f15\u4eba\u77a9\u76ee\u7684\u4e00\u70b9\u662f\uff0cReact DOM\uff08\u4e5f\u5c31\u662fReact\u65b9\u5f0f\u7684\u865a\u62dfDOM\uff09\u4e0e\u539f\u751fDOM\u7684\u6bd4\u8f83\u3002  \u865a\u62dfDOM\u7684\u521b\u5efa\u548c\u6e32\u67d3\uff0c\u90fd\u662f\u5728\u524d\u7aef\u5b8c\u6210\u7684\uff0c\u8fd0\u884c\u5728\u771f\u6b63\u7684DOM\u5728\u6d4f\u89c8\u5668\u4ea7\u751f\u548c\u5448\u73b0\u4e4b\u524d\uff0c\u8fd9\u4e2a\u65f6\u95f4\u662f React\u7684\u8fd0\u884c\u65f6 \u3002\u76f8\u5bf9\u4e8e\u76f4\u63a5\u7684HTML\u6587\u672c\u4ee3\u7801\uff0cReact\u591a\u4e86\u4e00\u4e2a\u865a\u62dfDOM\u751f\u6210\u548c\u6e32\u67d3\u7684\u65f6\u95f4\u3002\u8fd9\u4e2a\u65f6\u95f4\uff0c\u5728\u4e0d\u540c\u673a\u5668\u7684\u4e0d\u540c\u6d4f\u89c8\u5668\u4e0a\uff0c\u90fd\u6709\u5dee\u5f02\u3002\u9664\u6b64\u4ee5\u5916\uff0c\u7531\u4e8e\u5728\u5185\u5b58\u91cc\u9762\u5b58\u50a8\u865a\u62dfDOM\u7684\u5185\u5bb9\u3001\u72b6\u6001\u7b49\u6570\u636e\uff0cReact\u7684\u5185\u5b58\u5360\u7528\u91cf\u4e5f\u4f1a\u6bd4DOM\u8981\u5927\u3002  \u5bf9\u4e8e\u524d\u7aef\u6765\u8bf4\uff0c\u6d4f\u89c8\u5668\u54cd\u5e94\u7528\u6237\u4e8b\u4ef6\u540e\uff0c\u975e\u5e38\u6602\u8d35\u7684\u64cd\u4f5c\u662f\uff0c\u6d4f\u89c8\u5668\u7684\u91cd\u7ed8\u548c\u91cd\u6392\u3002   \u91cd\u7ed8\uff1a\u91cd\u7ed8\u662f\u4e00\u4e2a\u5143\u7d20\u5916\u89c2\u7684\u6539\u53d8\u6240\u89e6\u53d1\u7684\u6d4f\u89c8\u5668\u884c\u4e3a\uff0c\u4f8b\u5982\u6539\u53d8visibility\u3001outline\u3001\u80cc\u666f\u8272\u7b49\u5c5e\u6027\u3002\u6d4f\u89c8\u5668\u4f1a\u6839\u636e\u5143\u7d20\u7684\u65b0\u5c5e\u6027\u91cd\u65b0\u7ed8\u5236\uff0c\u4f7f\u5143\u7d20\u5448\u73b0\u65b0\u7684\u5916\u89c2\u3002\u91cd\u7ed8\u4e0d\u4f1a\u5e26\u6765\u91cd\u65b0\u5e03\u5c40\uff0c\u5e76\u4e0d\u4e00\u5b9a\u4f34\u968f\u91cd\u6392\u3002  \u91cd\u6392\uff1a\u5f53DOM\u7684\u53d8\u5316\u5f71\u54cd\u4e86\u5143\u7d20\u7684\u51e0\u4f55\u5c5e\u6027\uff08\u5bbd\u6216\u9ad8\uff09\uff0c\u6d4f\u89c8\u5668\u9700\u8981\u91cd\u65b0\u8ba1\u7b97\u5143\u7d20\u7684\u51e0\u4f55\u5c5e\u6027\uff0c\u540c\u6837\u5176\u4ed6\u5143\u7d20\u7684\u51e0\u4f55\u5c5e\u6027\u548c\u4f4d\u7f6e\u4e5f\u4f1a\u56e0\u6b64\u53d7\u5230\u5f71\u54cd\u3002\u6d4f\u89c8\u5668\u4f1a\u4f7f\u6e32\u67d3\u6811\u4e2d\u53d7\u5230\u5f71\u54cd\u7684\u90e8\u5206\u5931\u6548\uff0c\u5e76\u91cd\u65b0\u6784\u9020\u6e32\u67d3\u6811\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u79f0\u4e3a\u91cd\u6392\u3002\u6bcf\u6b21\u91cd\u6392\uff0c\u5fc5\u7136\u4f1a\u5bfc\u81f4\u91cd\u7ed8\u3002  \u5bfc\u81f4\u91cd\u6392\u7684\u60c5\u51b5\uff1a\n   1. \u6dfb\u52a0\u6216\u8005\u5220\u9664\u53ef\u89c1\u7684DOM\u5143\u7d20\n2. \u5143\u7d20\u4f4d\u7f6e\u6539\u53d8\n3. \u5143\u7d20\u5c3a\u5bf8\u6539\u53d8\n4. \u5143\u7d20\u5185\u5bb9\u6539\u53d8\uff08\u4f8b\u5982\uff1a\u4e00\u4e2a\u6587\u672c\u88ab\u53e6\u4e00\u4e2a\u4e0d\u540c\u5c3a\u5bf8\u7684\u56fe\u7247\u66ff\u4ee3\uff09\n5. \u9875\u9762\u6e32\u67d3\u521d\u59cb\u5316\uff08\u8fd9\u4e2a\u65e0\u6cd5\u907f\u514d\uff09\n7. \u6d4f\u89c8\u5668\u7a97\u53e3\u5c3a\u5bf8\u6539\u53d8     \u5f88\u660e\u663e\uff0c\u76f8\u5bf9\u4e8e\u6e32\u67d3\u65f6\u95f4\u548c\u5185\u5b58\u5360\u7528\uff0c\u63d0\u9ad8\u524d\u7aef\u6027\u80fd\u66f4\u4e3a\u6838\u5fc3\u7684\u4efb\u52a1\u662f\uff0c\u5c3d\u53ef\u80fd\u5730\u51cf\u5c11\u91cd\u7ed8\u548c\u91cd\u6392\u7684\u6b21\u6570\u3002React\u7684\u865a\u62dfDOM\u6280\u672f\u548c\u5404\u4e2a\u751f\u547d\u5468\u671f\u53ca\u5176\u94a9\u5b50\u51fd\u6570\u6b63\u662f\u7528\u6765\u89e3\u51b3\u4e0a\u8ff0\u95ee\u9898\u7684\u3002", 
            "title": "React DOM vs. DOM"
        }, 
        {
            "location": "/posts/front-end/share/React\u6280\u672f\u751f\u6001\u548c\u670d\u52a1\u7aef\u6e32\u67d3/#react_1", 
            "text": "\u4e0b\u9762\u662fReact\u7ec4\u4ef6\u7684\u5e38\u7528\u7684\u5199\u6cd5\uff0c\u7c7b\u5185\u7684\u51fd\u6570\u90fd\u662fReact\u7684\u94a9\u5b50\u51fd\u6570\uff0c\u6bcf\u4e2a\u51fd\u6570\u90fd\u5bf9\u5e94React\u7ec4\u4ef6\u4e00\u4e2a\u751f\u547d\u5468\u671f\u3002  import   react ,   {   Component   }   from   react ;  class   ExampleComponent   extends   Component   { \n\n   // Mounting \n\n   constructor ()   { \n     // do something initialized, set default props or initial state \n   } \n\n   componentWillMount ()   { \n     // do something before component mounting \n   } \n\n   render ()   { \n     // return the jsx code, it will be the component s dom content, if state changes, it will be rerun \n   } \n\n   componentDidMount ()   { \n     // do something after component mounting \n   } \n\n   // Updating \n\n   componentWillRecieveProps ()   { \n     // do something before a mounted component receives new props \n   } \n\n   shouldComponentUpdate ()   { \n     // do something before rendering when new props or state are being received \n   } \n\n   componentWillUpdate ()   { \n     // do something before rendering when new props or state are being received \n   } \n\n   componentDidUpdate ()   { \n     // do something after updating occurs \n   } \n\n   // Unmounting \n\n   componentWillUnmount ()   { \n     // do something before a component is unmounted and destroyed \n   }  }   \u5173\u952e\u70b9   \u7ec4\u4ef6\u7684 props \uff0c state \u975e\u5e38\u91cd\u8981\uff0c\u7ec4\u4ef6\u7684\u52a8\u6001\u5185\u5bb9\u4e3b\u8981\u4f9d\u8d56\u8fd9\u4e24\u4e2a\u5c5e\u6027  \u6539\u53d8 props \u7684\u65b9\u5f0f\uff1a\u6539\u53d8\u7236\u7ea7\u5143\u7d20\u4f20\u9012\u7684 props \u3001\u76f4\u63a5\u6539\u53d8 this.prpos  \u6539\u53d8 state \u7684\u65b9\u5f0f\uff1a\u901a\u8fc7\u7ec4\u4ef6\u7684 setState \u51fd\u6570\u6539\u53d8\u3001  \u7ec4\u4ef6\u7684 state \u53d8\u5316\uff0c\u4f1a\u5f15\u8d77\u7ec4\u4ef6\u7684 rerender  \u7ec4\u4ef6\u6709\u591a\u79cd\u7ec4\u5408\u65b9\u5f0f\uff0c\u540c\u7ea7\u7ec4\u5408\u3001\u7236\u5b50\u7ec4\u5408\u7b49  \u7ec4\u4ef6\u5728\u4e0d\u540c\u7684\u751f\u547d\u5468\u671f\uff0c\u53ef\u4ee5\u89e6\u53d1\u4e0d\u540c\u7684\u94a9\u5b50\u51fd\u6570   \u901a\u8fc7\u7075\u6d3b\u4f7f\u7528\u7ec4\u5408\u65b9\u5f0f\u3001\u7ec4\u4ef6\u7684\u751f\u547d\u5468\u671f\u51fd\u6570\uff0c\u501f\u52a9React\u9ad8\u6548\u7684\u66f4\u65b0\u548c\u6e32\u67d3\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5728\u524d\u7aef\u505a\u52a8\u6001\u6027\u3001\u8868\u73b0\u529b\u90fd\u5f88\u5f3a\u7684\u5355\u9875\u9762\u5e94\u7528\u3001\u591a\u9875\u9762\u5e94\u7528\u3001H5\u5e94\u7528\u7b49\u3002", 
            "title": "React\u7ec4\u4ef6\u7684\u751f\u547d\u5468\u671f"
        }, 
        {
            "location": "/posts/front-end/share/React\u6280\u672f\u751f\u6001\u548c\u670d\u52a1\u7aef\u6e32\u67d3/#a_game_demo_of_react", 
            "text": "\u6211\u4eec\u6765\u770b\u4e00\u4e2a\u4f7f\u7528React\u6765\u505a\u7684\u4fc4\u7f57\u65af\u65b9\u5757\u6e38\u620f\u7684Demo\u3002  github: \u7528React\u3001Redux\u3001Immutable\u505a\u4fc4\u7f57\u65af\u65b9\u5757  Demo  \u5173\u952e\u6280\u672f\uff1aReact, Redux, Immutable, Webpack, Babel, Web Audio", 
            "title": "A game demo of react"
        }, 
        {
            "location": "/posts/front-end/share/React\u6280\u672f\u751f\u6001\u548c\u670d\u52a1\u7aef\u6e32\u67d3/#react_2", 
            "text": "\u7531\u4e8eReact\u662f\u524d\u7aefView\u5c42\u7684\u5e93\uff0c\u4f7f\u7528\u65b9\u5f0f\u5341\u5206\u7075\u6d3b\uff0c\u53ef\u4ee5\u8ddf\u73b0\u6709\u7684\u5f88\u591a\u5e93\u6216\u6846\u67b6\u7ed3\u5408\u4f7f\u7528\u3002\u4e5f\u56e0\u6b64\u884d\u751f\u4e86React\u7684\u6280\u672f\u751f\u6001\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u9875\u9762\u4e00\u7aa5\u7a76\u7adf\uff1a Complementary Tools   \u6211\u6240\u80fd\u60f3\u5230\u7684React\u7684\u4f7f\u7528\u65b9\u5f0f\u6709\uff1a   \u4f20\u7edf\u9875\u9762\u5e94\u7528 or MV*\uff1areact + others library or framework  SPA\uff1areact + react-router  SPA + flux\uff1areact + react-router + flux\u5e93\uff08Redux\u7b49\uff09  React Native\u5f00\u53d1\u8de8\u5e73\u53f0\u79fb\u52a8\u5e94\u7528  Universal App\uff1aServer Side Rendering", 
            "title": "React\u751f\u6001"
        }, 
        {
            "location": "/posts/front-end/share/React\u6280\u672f\u751f\u6001\u548c\u670d\u52a1\u7aef\u6e32\u67d3/#reactreact-router", 
            "text": "react\u7684\u524d\u7aef\u8def\u7531\uff0c\u53ef\u4ee5\u7ed3\u5408redux\u4f7f\u7528\uff0c\u662f\u5229\u7528React\u505aSPA\u7684\u4e0d\u53ef\u6216\u7f3a\u7684\u6280\u672f\u3002\u5b9e\u73b0\u65b9\u5f0f\uff1a   \u57fa\u4e8eHTML5 history API  \u57fa\u4e8e\u524d\u7aef #\u5b57\u7b26\u4e32   \u4e0e\u5176\u4ed6SPA\u6846\u67b6\u5b9e\u73b0\u601d\u8def\u7c7b\u4f3c\u3002", 
            "title": "React\u751f\u6001\uff1areact-router"
        }, 
        {
            "location": "/posts/front-end/share/React\u6280\u672f\u751f\u6001\u548c\u670d\u52a1\u7aef\u6e32\u67d3/#reactflux", 
            "text": "\u51e0\u4e2a\u5173\u952e\u70b9\uff1a   facebook\u63d0\u51fa\u7684flux\u66f4\u591a\u662f\u4e00\u79cd\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u800c\u4e0d\u662f\u6846\u67b6  flux\u6709\u591a\u91cd\u5b9e\u73b0\u65b9\u6848\uff0credux\u662f\u5176\u4e2d\u4e4b\u4e00  \u601d\u8def\uff1a\u5355\u5411\u6570\u636e\u6d41  \u5173\u952e\u70b9\uff1a dispatcher \uff0c store \uff0c action \uff0c reducer \uff0c view  store \u53ef\u4ee5\u7ba1\u7406react\u7ec4\u4ef6\u7684\u72b6\u6001\uff0c\u5f53 store \u6539\u53d8\u7684\u65f6\u5019\uff0c\u4f1a\u6700\u4f4e\u4ee3\u4ef7\u5730\u66f4\u65b0react\u7ec4\u4ef6    Flux is the application architecture that Facebook uses for building client-side web applications. It complements React's composable view components by utilizing a unidirectional data flow. It's more of a pattern rather than a formal framework, and you can start using Flux immediately without a lot of new code.  From  Flux: In Depth Overview   \u5173\u952e\u601d\u60f3\uff1a   Redux   Redux is a predictable state container for JavaScript apps.   Redux\u662f\u4e00\u4e2a\u53ef\u9884\u6d4b\u7684\u72b6\u6001\u5bb9\u5668\uff0c\u662fflux\u601d\u60f3\u7684\u4e00\u79cd\u5b9e\u73b0\u65b9\u6848\u3002   Redux \u7684\u7075\u611f\u6765\u6e90\u4e8e Flux \u7684\u51e0\u4e2a\u91cd\u8981\u7279\u6027\u3002\u548c Flux \u4e00\u6837\uff0cRedux \u89c4\u5b9a\uff0c\u5c06\u6a21\u578b\u7684\u66f4\u65b0\u903b\u8f91\u5168\u90e8\u96c6\u4e2d\u4e8e\u4e00\u4e2a\u7279\u5b9a\u7684\u5c42\uff08Flux \u91cc\u7684 store\uff0cRedux \u91cc\u7684 reducer\uff09\u3002Flux \u548c Redux \u90fd\u4e0d\u5141\u8bb8\u7a0b\u5e8f\u76f4\u63a5\u4fee\u6539\u6570\u636e\uff0c\u800c\u662f\u7528\u4e00\u4e2a\u53eb\u4f5c \u201caction\u201d \u7684\u666e\u901a\u5bf9\u8c61\u6765\u5bf9\u66f4\u6539\u8fdb\u884c\u63cf\u8ff0\u3002  \u800c\u4e0d\u540c\u4e8e Flux \uff0cRedux \u5e76\u6ca1\u6709 dispatcher \u7684\u6982\u5ff5\u3002\u539f\u56e0\u662f\u5b83\u4f9d\u8d56\u7eaf\u51fd\u6570\u6765\u66ff\u4ee3\u4e8b\u4ef6\u5904\u7406\u5668\u3002\u7eaf\u51fd\u6570\u6784\u5efa\u7b80\u5355\uff0c\u4e5f\u4e0d\u9700\u989d\u5916\u7684\u5b9e\u4f53\u6765\u7ba1\u7406\u5b83\u4eec\u3002\u4f60\u53ef\u4ee5\u5c06\u8fd9\u70b9\u770b\u4f5c\u8fd9\u4e24\u4e2a\u6846\u67b6\u7684\u5dee\u5f02\u6216\u7ec6\u8282\u5b9e\u73b0\uff0c\u53d6\u51b3\u4e8e\u4f60\u600e\u4e48\u770b Flux\u3002Flux \u5e38\u5e38\u88ab\u8868\u8ff0\u4e3a (state, action) =  state\u3002\u4ece\u8fd9\u4e2a\u610f\u4e49\u4e0a\u8bf4\uff0cRedux \u65e0\u7591\u662f Flux \u67b6\u6784\u7684\u5b9e\u73b0\uff0c\u4e14\u5f97\u76ca\u4e8e\u7eaf\u51fd\u6570\u800c\u66f4\u4e3a\u7b80\u5355\u3002  \u548c Flux \u7684\u53e6\u4e00\u4e2a\u91cd\u8981\u533a\u522b\uff0c\u662f Redux \u8bbe\u60f3\u4f60\u6c38\u8fdc\u4e0d\u4f1a\u53d8\u52a8\u4f60\u7684\u6570\u636e\u3002\u4f60\u53ef\u4ee5\u5f88\u597d\u5730\u4f7f\u7528\u666e\u901a\u5bf9\u8c61\u548c\u6570\u7ec4\u6765\u7ba1\u7406 state \uff0c\u800c\u4e0d\u662f\u5728\u591a\u4e2a reducer \u91cc\u53d8\u52a8\u6570\u636e\u3002\u6b63\u786e\u4e14\u7b80\u4fbf\u7684\u65b9\u5f0f\u662f\uff0c\u4f60\u5e94\u8be5\u5728 reducer \u4e2d\u8fd4\u56de\u4e00\u4e2a\u65b0\u5bf9\u8c61\u6765\u66f4\u65b0 state\uff0c \u540c\u65f6\u914d\u5408 object spread \u8fd0\u7b97\u7b26\u63d0\u6848 \u6216\u4e00\u4e9b\u5e93\uff0c\u5982 Immutable\u3002  \u867d\u7136\u51fa\u4e8e\u6027\u80fd\u65b9\u9762\u7684\u8003\u8651\uff0c\u5199\u4e0d\u7eaf\u7684 reducer \u6765\u53d8\u52a8\u6570\u636e\u5728\u6280\u672f\u4e0a\u662f\u53ef\u884c\u7684\uff0c\u4f46\u6211\u4eec\u5e76\u4e0d\u9f13\u52b1\u8fd9\u4e48\u505a\u3002\u4e0d\u7eaf\u7684 reducer \u4f1a\u4f7f\u4e00\u4e9b\u5f00\u53d1\u7279\u6027\uff0c\u5982\u65f6\u95f4\u65c5\u884c\u3001\u8bb0\u5f55/\u56de\u653e\u6216\u70ed\u52a0\u8f7d\u4e0d\u53ef\u5b9e\u73b0\u3002\u6b64\u5916\uff0c\u5728\u5927\u90e8\u5206\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u8fd9\u79cd\u6570\u636e\u4e0d\u53ef\u53d8\u52a8\u7684\u7279\u6027\u5e76\u4e0d\u4f1a\u5e26\u6765\u6027\u80fd\u95ee\u9898\uff0c\u5c31\u50cf Om \u6240\u8868\u73b0\u7684\uff0c\u5373\u4f7f\u5bf9\u8c61\u5206\u914d\u5931\u8d25\uff0c\u4ecd\u53ef\u4ee5\u9632\u6b62\u6602\u8d35\u7684\u91cd\u6e32\u67d3\u548c\u91cd\u8ba1\u7b97\u3002\u800c\u5f97\u76ca\u4e8e reducer \u7684\u7eaf\u5ea6\uff0c\u5e94\u7528\u5185\u7684\u53d8\u5316\u66f4\u662f\u4e00\u76ee\u4e86\u7136\u3002", 
            "title": "React\u751f\u6001\uff1aflux"
        }, 
        {
            "location": "/posts/front-end/share/React\u6280\u672f\u751f\u6001\u548c\u670d\u52a1\u7aef\u6e32\u67d3/#reactui", 
            "text": "UI\u6709\u5f88\u591a\u7ec4\u4ef6\u5e93\uff0c\u8fd9\u91cc\u662f\u5b98\u65b9\u5217\u4e3e\u7684\u7ec4\u4ef6\u5e93\u8d44\u6e90\uff1a\uff08\u66f4\u65b0\u4e8e2016/12/24\uff09   Color Picker  Color picker control with single and multiple select  Responsive Calendar  Responsive Calendar for mobile, tablet and desktop  Mobile date   time picker control  Cross platfrom mobile date   time picker control for React.  Mobiscroll  UI components for mobile web and hybrid apps.  ag-Grid  Advanced data grid / data table for React.  Grommet  The most advanced open source UX framework for enterprise applications.  React Web  A framework for building web apps with React.  React Mdl  React Components for Material Design Lite.  Amaze UI React  (in Chinese):   Amaze UI  components built with React.  Belle :  Configurable React Components with great UX  Khan Academy's component library  Elemental UI :  A UI toolkit for React websites and apps, themeable and composed of individually packaged components  Halogen :  A collection of highly customizable loading spinner animations with React.  react-bootstrap :  Bootstrap 3 components built with React.  react-bootstrap-table :  It's a react table for Bootstrap.  react-bootstrap-dialog :  React Dialog component for react-bootstrap, instead of  window.alert  or  window.confirm  Topcoat UI Components :  Topcoat UI Components built with react.  react-foundation-apps :  Foundation Apps components built with React  orb :  React pivot grid.  react-topcoat :  Topcoat components built with React.  react-slick :  Carousel component built with React  react-lorem-component :  Lorem Ipsum placeholder component.  wingspan-forms :  React library for dynamic forms   grids; widgets provided by KendoUI.  react-translate-component :  React component for i18n.  newforms :  Form-handling library which renders to  React.DOM  components on the client and the server.  react-highlight :  React component for syntax highlighting  react-responsive-mixin :  Mixin to develop responsive react components  react-chosen :  React wrapper for Chosen jQuery.  react-select :  Native React Select / Multiselect input field, similar to Selectize / Chosen / Select2  react-ladda :  React wrapper for Ladda buttons.  react-scroll-components :  A set of components and mixins that react to page scrolling.  react-forms :  Form rendering and validation for React  valuelink :  Full-featured two-way data binding and forms validation with extended React links.  tcomb-form :  Automatically generate form markup, automatic labels and inline validation from a domain model  react-treeview :  Easy, light, flexible tree view.  react-multiselect :  Filter and select from a list of items.  react-date-picker :  A simple and reusable datepicker component for React.  react-textarea-autosize :  Like  textarea /  but resizes automatically to fit all its content.  react-growable-textarea :  Resizes  textarea /  to fit all its content using a css shim (no javascript calculations).  react-input-autosize :  Like  input /  but resizes automatically to fit all its content.  React-TimeAgo  A minimal live updating Time Ago component that smartly converts any time to a \u2018ago\u2019 or \u2018from now\u2019 format and keeps it updated.  react-maps  Embed Google Maps. Supports markers, polylines and programmatic mutation.  material-ui  A set of React Components that implement Google's Material Design.  storybook-addon-material-ui  A storybook addon for material-ui  Ant Design of React  An enterprise-class UI design language and React-based implementation.  react-tappable  A Tappable React Component that provides native-feeling onTap events for mobile React apps  react-tour-guide A ReactJS mixin to give new users a popup-based tour of your application  react-contentEditable  Example component for contentEditable elements  react-dnd  Flexible HTML5 drag-and-drop mixin for React with full DOM control  react-autosuggest  WAI-ARIA compliant React autosuggest component  react-document-title  Declarative, nested, stateful, isomorphic document.title for React  react-image :  Like  img /  and Enhanced Image Component for React.  react-intense :  A component for viewing large images up close  react-mq :  Easy Media Query Helper for React.  react-timesheet :  Visualize your data and events with sexy time sheet component.  react-switch-button :  Beautiful React Switch button component  react-amiga-guru-meditation :  React JS Class to display a Amiga Guru Meditation Tribute  react-notification :  Snackbar style notifications  react-swipe-views :  React Swipe Views  react-spreadsheet :  React Spreadsheets / Editable tables with Excel-Style keyboard input and navigation  react-dropzone :  React Dropzone for File-Uploads  react-twitter-typeahead :  React auto-suggestion component  react-sparklines :  Beautiful and expressive sparklines component  Winterfell :  Generate complex, validated and extendable JSON-based forms in React  react-selectize :  A stateless   flexible Select component, designed as a drop in replacement for React.DOM.Select, inspired by Selectize   react-joyride :  Create walkthroughs and guided tours for your ReactJS apps.  react-stamp :  Composables for React.  mobservable-react-buttons :  These are rollover buttons with some extra functionality. A more elaborate demo is running at  http://schalk.ninja  but I don't presently have a repo available.  UXCore  (in Chinese):   UXCore  UXCore components built with React.  reactstrap :  Simple Bootstrap 4 components built with  tether  Onsen UI React Components :  UI components for hybrid mobile apps with both Material Design for Android and flat design for iOS.  react-pagenav :  react pagenav component. [ demo ]  React Amazing Grid  Flex grid with inline styles.  Selectivity :  Modular and light-weight selection library.  react-jogwheel : Take control of your CSS keyframe animations with React  Wijmo React Interop : How to use Wijmo controls in ReactJS apps.  Wijmo FlexGrid for React : A high-performance datagrid that is small and extensible with ReactJS support.  Wijmo FlexChart for React : A full-featured chart control with ReactJS support.  Wijmo Input controls for React : A set of form input controls (AutoComplete, InputDate, InputNumber, InputMask, etc) with ReactJS support.  Wijmo Gauges for React : Linear and radial gauges and a bullet graph with ReactJS support.  Semantic-ui : The official Semantic-UI-React integration, Advanced components and declarative UI.  markdown-to-jsx : compiles markdown into safe React JSX without using dangerous escape hatches  chartify : Ultra lightweight and customizable React.js chart component  react-sigma : Lightweight but powerful library for drawing network graphs", 
            "title": "React\u751f\u6001\uff1aUI\u7ec4\u4ef6\u5e93"
        }, 
        {
            "location": "/posts/front-end/share/React\u6280\u672f\u751f\u6001\u548c\u670d\u52a1\u7aef\u6e32\u67d3/#reactreact_native", 
            "text": "React Native  \u662f\u4e00\u4e2a\u53ef\u4ee5\u8ba9\u4f60\u4ec5\u4ec5\u4f7f\u7528JS\u5c31\u80fd\u5199\u8de8\u5e73\u53f0\u79fb\u52a8\u5e94\u7528\u7684\u5e93\u3002  \u5199\u6cd5\u4e0e\u5199React\u975e\u5e38\u7c7b\u4f3c\u3002\u540c\u65f6\u53ef\u4ee5\u7ed3\u5408Native\u7684\u4ee3\u7801\u4e00\u8d77\u6784\u5efaNative Application\u3002  import React, { Component } from  react ;\nimport { Text, View } from  react-native ;\n\nclass WhyReactNativeIsSoGreat extends Component {\n  render() {\n    return (\n       View \n         Text \n          If you like React on the web, you ll like React Native.\n         /Text \n         Text \n          You just use native components like  View  and  Text ,\n          instead of web components like  div  and  span .\n         /Text \n       /View \n    );\n  }\n}  import React, { Component } from  react ;\nimport { Image, ScrollView, Text } from  react-native ;\n\nclass AwkwardScrollingImageWithText extends Component {\n  render() {\n    return (\n       ScrollView \n         Image source={{uri:  https://i.chzbgr.com/full/7345954048/h7E2C65F9/ }} / \n         Text \n          On iOS, a React Native ScrollView uses a native UIScrollView.\n          On Android, it uses a native ScrollView.\n\n          On iOS, a React Native Image uses a native UIImageView.\n          On Android, it uses a native ImageView.\n\n          React Native wraps the fundamental native components, giving you\n          the performance of a native app, plus the clean design of React.\n         /Text \n       /ScrollView \n    );\n  }\n}", 
            "title": "React\u751f\u6001\uff1aReact Native"
        }, 
        {
            "location": "/posts/front-end/share/React\u6280\u672f\u751f\u6001\u548c\u670d\u52a1\u7aef\u6e32\u67d3/#_1", 
            "text": "\u524d\u7aef\u6846\u67b6\u7684\u8fd0\u884c\u65f6\u662f\u5728\u524d\u7aef\u8fdb\u884c\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\u4ece\u9875\u9762\u52a0\u8f7d\u5b8c\u6210\uff0c\u5230\u7528\u6237\u770b\u5230\u5b8c\u6574\u7684\u9875\u9762\uff0c\u4e2d\u95f4\u6709\u4e00\u4e2a\u6267\u884c\u8fc7\u7a0b\uff0c\u800c\u8fd9\u4e2a\u6267\u884c\u65f6\u95f4\u7684\u957f\u77ed\uff0c\u8ddf\u5e94\u7528\u7684\u590d\u6742\u5ea6\u6709\u5173\uff0c\u4e5f\u8ddf\u6846\u67b6\u7684\u5b9e\u73b0\u65b9\u5f0f\u6709\u5173\u3002React\u7684\u6e32\u67d3\u65f6\u95f4\u4e0e\u5176\u4ed6\u6846\u67b6\u7684\u6e32\u67d3\u65f6\u95f4\uff0c\u5bf9\u6bd4\u5982\u4e0b\uff1a    from  avalon   \u76f4\u89c2\u7684\u4f53\u9a8c\u5c31\u662f\uff0c\u5982\u679c\u6e32\u67d3\u65f6\u95f4\u8fc7\u957f\uff0c\u4f1a\u6709\u4e00\u79cd\u767d\u5c4f\u6216\u5361\u987f\u7684\u611f\u89c9\u3002  \u670d\u52a1\u7aef\u6e32\u67d3\uff0c\u5c31\u662f\u8fd9\u4e2a\u95ee\u9898\u7684\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u3002\u6211\u4eec\u518d\u770b\u4e00\u4e0b\u524d\u7aef\u6e32\u67d3\u5b58\u5728\u7684\u5176\u4ed6\u95ee\u9898\u3002", 
            "title": "\u670d\u52a1\u7aef\u6e32\u67d3"
        }, 
        {
            "location": "/posts/front-end/share/React\u6280\u672f\u751f\u6001\u548c\u670d\u52a1\u7aef\u6e32\u67d3/#_2", 
            "text": "SEO\u95ee\u9898  \u6027\u80fd\u95ee\u9898\uff08\u52a0\u8f7d\u65f6\u95f4\u3001\u6253\u5305\u5927\u5c0f\u3001\u89e3\u6790\u6e32\u67d3\u7b49\uff09", 
            "title": "\u524d\u7aef\u6e32\u67d3\u5b58\u5728\u7684\u95ee\u9898"
        }, 
        {
            "location": "/posts/front-end/share/React\u6280\u672f\u751f\u6001\u548c\u670d\u52a1\u7aef\u6e32\u67d3/#universal_app", 
            "text": "Isomorphism  is the functional aspect of seamlessly switching between client- and server-side rendering without losing state.  Universal  is a term used to emphasize the fact that a particular piece of JavaScript code is able to run in multiple environments.   Isomorphism: not losing state, rendering everywhere  Universal: no duplication, example:  Lodash , uesed everywhere", 
            "title": "Universal app"
        }, 
        {
            "location": "/posts/front-end/share/React\u6280\u672f\u751f\u6001\u548c\u670d\u52a1\u7aef\u6e32\u67d3/#server_side_rendering", 
            "text": "React\u7684\u505a\u6cd5  \u8981\u601d\u8003\u7684\u95ee\u9898\uff1a   \u8def\u7531\u95ee\u9898  \u72b6\u6001\u95ee\u9898  \u6570\u636e\u9884\u8bf7\u6c42\u95ee\u9898   react\u7684\u505a\u6cd5\uff1a  import   {   renderToString   }   from   react-dom/server ;   react + react-router + redux\u7684\u505a\u6cd5\uff1a  import { renderToString } from  react-dom/server ;\n\n// a peice of code\nrenderToString(\n   Provider store={ store } \n     RouterContext { ...props } / \n   /Provider \n);\n\n// a peice of code\nmatch({ routes, location }, (error, redirectLocation, renderProps) =  {\n  if (error) {\n    res.status(500).send(error.message);\n  } else if (redirectLocation) {\n    res.status(302).redirect(redirectLocation.pathname + redirectLocation.search);\n  } else if (renderProps) {\n    serverSideRender(\n      renderProps,\n      pugText,\n      store\n    ).then(function (html) {\n      res.status(200).send(html);\n    }, function (error2) {\n      res.status(500).send(JSON.stringify(error2));\n    });\n  } else {\n    res.status(404).send();\n  }\n});", 
            "title": "Server Side Rendering"
        }, 
        {
            "location": "/posts/front-end/share/React\u6280\u672f\u751f\u6001\u548c\u670d\u52a1\u7aef\u6e32\u67d3/#reference", 
            "text": "HTML Presentation Framework: Reveal.js  Comparing React.js performance vs. native DOM  \u9ad8\u6027\u80fdJavaScript \u91cd\u6392\u4e0e\u91cd\u7ed8  \u6d4f\u89c8\u5668\u7684\u91cd\u7ed8\u4e0e\u91cd\u6392  Virtual DOM and diffing algorithm  virtual-dom  Isomorphic JavaScript: The Future of Web Apps  Isomorphism vs Universal JavaScript", 
            "title": "Reference"
        }, 
        {
            "location": "/posts/old/Quantization-and-Scaling/", 
            "text": "Scaling\n\n\nFirst, we create an image object which has the desired input size. The calculat the Scaling\nRate(size_new/size_origin) for both height( m ) and width(\u2018n\u2019). Then we will have a nested \u2018for\u2019 loop to\ncalculate the gray value for each pixel for the new image.\nFor down scaling, Isometric sampling and Mean sampling will be applied (respectively) to the image.\nFor Isometric sampling, there is a corresponding relationship, and we can easily calculate the gray\nvalue of the pixel.\n\n\n  x = int(i/m)\n  y = int(j/n)\n  new_image[i, j] = old_img[x,y]\n\n\n\n\nFor mean sampling,we will split the image into serveral small pieces which equals to the new down\nscaling image and then we will calculate a area of pixels and then sum up then, and then calculate the average of the new pixel.\n\n\n  (x1,y1)...(x1,yn)\n  .\n  .\n  .\n  .\n  (xn,y1)...(xn,yn)\n\n  average = sum(xi,yi) / n^2\n\n\n\n\nWell, it\u2019s very surprised to find that mean scaling is not always better than the Isometric sampling.\nFor up scaling , I use the Isometric sampling, for example, if we scale width = 2*width, the matrix of the\nimage will become:\n\n\n    11 12 13\n    14 15 16\n    17 18 19\n\n    11 11 12 12 13 13\n    14 14 15 15 16 16\n    17 17 18 18 19 19\n\n\n\n\nDown-Scaling and Up-Scaling Formula(Isometric sampling):\n\n\n\\[\n  G(x,y) = F(x/m, y/n);\n\\]\nUp-Scaling Formula:\n\n\nUp-Scaling Formula (Interpolation scaling)\n\n\n\\[\nf(i,j)=w1 \\cdot p1+w2 \\cdot p2+w3 \\cdot p3+w4 \\cdot p4\n\\]\nOrigin Picture:\n\n\n\n\n96 * 64:\n\n\n\n\n450 * 300\n\n\n\n\n\n\nQuantization\n\n\nFor quantization, we similarily create a new image firstly. Then, we will calculat two values level and\nsegment. For a given gray level for example 4. It will divided the rgb set into 4 segemnts (0~64, 64\n128,\n128\n172, 172~256), numbering with 0, 1, 2, 3 respctively. The variable segement represent the number.\nThen we will have 4 gray values for 4-l level(0, 85, 170, 255). Then for each numbered position, there is\na solution for the new image:\n\n\n    segement = 256 / level\n    level = 255.0 / float(level - 1)\n    new_image[i,j]\n    = int(old_image[i.j] / segement) * level\n\n\n\n\nThen we can calculate all the gray values for other pixels.\n\n\nOrigin Picture:\n\n\n\n\nNote that, in practice computers always represent \u201cwhite\u201d via the pixel value of 255, so you should also follow this rule. For example, when the gray level resolution is reduced to 4 levels,the resulting image should contain pixels of 0, 85, 170, 255, instead of 0, 1, 2, 3.\n\n\nTo 32 gray levels:\n\n\n\n\nTo 2 gray levels:\n\n\n\n\nGithub:\n\n\nhttps://github.com/ghostbody/Image-Processing", 
            "title": "Quantization and Scaling"
        }, 
        {
            "location": "/posts/old/Quantization-and-Scaling/#scaling", 
            "text": "First, we create an image object which has the desired input size. The calculat the Scaling\nRate(size_new/size_origin) for both height( m ) and width(\u2018n\u2019). Then we will have a nested \u2018for\u2019 loop to\ncalculate the gray value for each pixel for the new image.\nFor down scaling, Isometric sampling and Mean sampling will be applied (respectively) to the image.\nFor Isometric sampling, there is a corresponding relationship, and we can easily calculate the gray\nvalue of the pixel.    x = int(i/m)\n  y = int(j/n)\n  new_image[i, j] = old_img[x,y]  For mean sampling,we will split the image into serveral small pieces which equals to the new down\nscaling image and then we will calculate a area of pixels and then sum up then, and then calculate the average of the new pixel.    (x1,y1)...(x1,yn)\n  .\n  .\n  .\n  .\n  (xn,y1)...(xn,yn)\n\n  average = sum(xi,yi) / n^2  Well, it\u2019s very surprised to find that mean scaling is not always better than the Isometric sampling.\nFor up scaling , I use the Isometric sampling, for example, if we scale width = 2*width, the matrix of the\nimage will become:      11 12 13\n    14 15 16\n    17 18 19\n\n    11 11 12 12 13 13\n    14 14 15 15 16 16\n    17 17 18 18 19 19  Down-Scaling and Up-Scaling Formula(Isometric sampling):  \\[\n  G(x,y) = F(x/m, y/n);\n\\] Up-Scaling Formula:  Up-Scaling Formula (Interpolation scaling)  \\[\nf(i,j)=w1 \\cdot p1+w2 \\cdot p2+w3 \\cdot p3+w4 \\cdot p4\n\\] Origin Picture:   96 * 64:   450 * 300", 
            "title": "Scaling"
        }, 
        {
            "location": "/posts/old/Quantization-and-Scaling/#quantization", 
            "text": "For quantization, we similarily create a new image firstly. Then, we will calculat two values level and\nsegment. For a given gray level for example 4. It will divided the rgb set into 4 segemnts (0~64, 64 128,\n128 172, 172~256), numbering with 0, 1, 2, 3 respctively. The variable segement represent the number.\nThen we will have 4 gray values for 4-l level(0, 85, 170, 255). Then for each numbered position, there is\na solution for the new image:      segement = 256 / level\n    level = 255.0 / float(level - 1)\n    new_image[i,j]\n    = int(old_image[i.j] / segement) * level  Then we can calculate all the gray values for other pixels.  Origin Picture:   Note that, in practice computers always represent \u201cwhite\u201d via the pixel value of 255, so you should also follow this rule. For example, when the gray level resolution is reduced to 4 levels,the resulting image should contain pixels of 0, 85, 170, 255, instead of 0, 1, 2, 3.  To 32 gray levels:   To 2 gray levels:", 
            "title": "Quantization"
        }, 
        {
            "location": "/posts/old/Quantization-and-Scaling/#github", 
            "text": "https://github.com/ghostbody/Image-Processing", 
            "title": "Github:"
        }, 
        {
            "location": "/posts/old/Filtering(1)/", 
            "text": "Spatial Domain Filtering\n\n\nTasks:\n\n\nBasic:\n\n\n\n\nBlur the Image. (Mean filtering)\n\n\nSharpen the Image. (Laplacian filtering)\n\n\n\n\nNoise Reduction:(with introduction to image restoration)\n\n\nNoise modles: Gussian, Salt and Pepper.\n\n\n\n\nContraharmonic mean filtering\n\n\nArthmetic mean filtering\n\n\nGeometric mean filtering\n\n\nMedian filtering\n\n\n\n\nBasic\n\n\nFor a selected filter and a selected pixel, we need to calculate the as we want the convolution result of the image. We defined a function to calculate the gray value for the exactly one pixel.\n\n\nConvolution(x, y, filter) \u2192 new_gray_value\n\ndef convolution(arguments):\n  for i in range(filter_size):\n    for j in range(filter_size):\n      if out_of_range:\n        center_value += 0\n      else:\n        center_value += filter[i][j] * image_p\n  center_value /= filter_size * filter_size\n\n\n\n\nThen we can calculate the center_value for one pixel in the origin image. Then we can have a nested for loop to calculate the whole image.\n\n\ndef filter2d(arguments):\n  for i in range(height):\n    for j in range(width):\n      new_image[i,j] = convolution(i,j, filter)\n\n\n\n\nNotice that, when I am doing laplacian_filter, the result is very wired. As a result, we need to compelete scaling after operation. What\u2019s more, I did a gama correction as wil to have a better view.\n\n\nscaling method:\n\n\n\\[\ns = |S(x,y)| = |\\frac{f(x,y)-min(f(x,y))}{max(f(x,y)) - min(f(x,y))}| \\times 255\n\\]\nI use the same method in histogram equalization that to set up a table for gama function.\n\n\n  for i in range(256):\n    val = pow(float(i)/255.0 ,scale) * 255.0\n    if val\n255:\n      val = 255\n    elif val\n0:\n      val = 0\n    table[i]= val\n\n\n\n\nI meet a problem when using the laplacian method. The noise of the image is also enhanced. So I adjust the method with:\n\n\n\\[\ng = G(x,y) = k\\times f(x) + L(x,y)\n\\]\nFor high_boost_filtering:\n\n\nFirst we should calculate the Fuzzy image:\n\n\nfor i in range(height):\n  for j in range(width):\n    sub_img[i ,j] = img[i, j][0] - fuzzy_img[i][j]\n\n\n\n\nAnd we get the mask sub_img , and then we calculate the output image:\n\n\nfor i in range(height):\n  for j in range(width):\n    enhanced_img[i, j] = img[i, j][0] + k * sub_img[i][j]\n\n\n\n\nAnd then we get the enhanced_img by doing the formula.\n\n\n\\[\ng(x,y) = f(x,y) + k\\times g_m(x,y)\n\\]\nThe function of image sharpening is to make the gray contrast enhanced, so that the fuzzy image becomes more clear. The essence of the image is that the image is subjected to an average operation or an integral operation, so it can be carried out on the inverse operation, such as differential operation can highlight the image details, so that the image becomes more clear.\n\n\n\\[\n\\nabla f^2 = [f(x+1,y)+f(x-1,y)+f(x,y+1)+f(x, y-1)\n\\]\n\\[\n+f(x+1, y+1)+f(x+1,y-1)+ f(x-1,x+1)+f(x-1,y-1)] - 8f(x,y)\n\\]\nResult\n\n\noriginal image:\n\n\n\n\n3*3 Mean Filter:\n\n\n\\[\n  \\frac{1}{9} \\left[\n  \\begin{matrix}\n   1 \n 1 \n 1 \\\\\n   1 \n 1 \n 1 \\\\\n   1 \n 1 \n 1\n  \\end{matrix} \\right]\n\\]\n\n\n7*7 Mean Filter:\n\n\n\n\n11*11 Mean Filter:\n\n\n\n\nlaplacian sharpen result:\n\n\n\n\nhigh_boost_filtering result with k = 0.8:\n\n\n\n\n\n\nBar Picture Testing\n\n\nFilter input image with 3 \u00d7 3 and 9 \u00d7 9 arithmetic mean filters respectively.\n\n\nOrigin Image:\n\n\n\n\n3*3 arithmetic mean filter:\n\n\n\n\n9*9 arithmetic mean filter:\n\n\n\n\n3*3 contraharmonic mean filter:\n\n\n\n\n9*9 contraharmonic mean filter:\n\n\n\n\n3*3 harmonic mean filter:\n\n\n\n\n9*9 harmonic mean filter:\n\n\n\n\n\n\nNoise Reduction\n\n\nReview that:\n\n\narithmetic:\n\n\n\\[\nf(x,y) = \\frac{\\sum_{i,j\\in S(x,y)} f(i,j)}{m\\times n}\n\\]\ngeometric:\n\n\n\\[\nf(x,y) = \\sqrt[nm]{\\prod_{i,j \\in S(x,y)}{f(i,j)}}\n\\]\nharmonic: Notice that we defined\n\n\n\\[\n\\frac{1}{0} = max(\\frac{1}{f(x,y)}) = 1\n\\]\nif img[img_x, img_y] == 0:\n  centre_gray_value += 1\nelse:\n  centre_gray_value += 1.0 / (img[img_x, img_y] * img_filter[i][j])\n\n\n\n\ncontraharmonic: Calculate two converlosion\n\n\n  centre_gray_value1 = Convolution(img, img_filter, x, y, method,q+1)\n  centre_gray_value2 = Convolution(img, img_filter, x, y, method, q)\n  if centre_gray_value2 != 0:\n    return int(float(centre_gray_value1) / centre_gray_value2)\n  else:\n    return 0\n\n\n\n\nmax, median and min: Write another function to process the points, store them to new array.\n\n\n  if method == \nmedian\n:\n    array.sort()\n  if filter_size ** 2 % 2 == 0:\n    return array[filter_size*filter_size / 2]\n  else:\n    return int(float(array[filter_size*filter_size / 2] + array[filter_size filter_size / 2 -1])/2)\n  elif method == \nmax\n:\n    return np.amax(array)\n  elif method == \nmin\n:\n    return np.amin(array)\n\n\n\n\nReduction Result:\n\n\nGussian Noise Image:\n\n\n\n\narithmetic mean:\n\n\n\n\ngeometric mean:\n\n\n\n\nArthmetic Mean Filter can really reduce some noise because it\u2019s a low pass filter. But it also blurred the image. It looks OK by using 5x5 filter. 9x9 filter is bad in practical. Geometric Mean Filter seems like that it can reduce more noise. It looks OK overall. But it also bolds the edge of the black elements in the image, because one zero will lead to result 0 when filtering.\nMedian Filter can have the effect that Arthmetic Mean Filter has. It can denois the picture and also make the picture look better.\nIn a word, I think that median filter is better when filtering Guassian Noise.\n\n\n\n\nSalt Noise Image:\n\n\n\n\ncontraharmonic(negative)\n\n\n\n\ncontraharmonic(positive)\n\n\n\n\nSetting a wrong Q value can lead to terrible results because the contraharmonic mean filter can not filter both pepper noise and salt noise.\nWhen Q is positive, the filter can reduce pepper noise. Because the most significant value is big value and the pepper value is small numbers, the black points can be removed by using this way.\nWhen Q is negative, the filter can reduce salt noise. Because the most significant value is small value(Reciprocal Sum). The Salt value is small numbers, the white points can be remove by using this way.\nHowever, if you use the wrong method, terrible things will happen like using Q=1.5 to reduce salt noise, because the most significant value is big value, the white noise will become louder in this way which will lead to terrible result.\n\n\n\n\nSalt and Pepper Noise Image:\n\n\n\n\narithmetic mean:\n\n\n\n\ngeometric:\n\n\n\n\nmax:\n\n\n\n\nmin:\n\n\n\n\nmedian:\n\n\n\n\nMedian Filter looks best, and then arithmetic mean. Other filter looks very ugly.\nMedian Filter can do the best. In image processing, such as edge detection in the further processing of this before, usually need a certain degree of reduction Median filtering is a common step in image processing.\nIt is especially useful for speckle noise and impulse noise. Save the edge of the feature so that it does not want to appear on the edge of the occasion is also very useful. arithmetic mean filtering looks ok here. It\u2019s the same in Guasian Noise, Arthmetic Mean Filter can really reduce some noise because it\u2019s a low pass filter. But it also blurred the image. It looks OK by using 5x5 filter. 9x9 filter is bad in practical.\nGeometric mean filtering is bad, because one zero will lead to result 0 when filtering. The points near one pepper noise will lead to a big area of black, it\u2019s very terrible. max and min is bad, because they can only reduce one kind of noise not both pepper and salt. Max can reduce pepper noise very well and Min can reduce salt noise very well.", 
            "title": "Filtering1"
        }, 
        {
            "location": "/posts/old/Filtering(1)/#spatial_domain_filtering", 
            "text": "Tasks:  Basic:   Blur the Image. (Mean filtering)  Sharpen the Image. (Laplacian filtering)   Noise Reduction:(with introduction to image restoration)  Noise modles: Gussian, Salt and Pepper.   Contraharmonic mean filtering  Arthmetic mean filtering  Geometric mean filtering  Median filtering", 
            "title": "Spatial Domain Filtering"
        }, 
        {
            "location": "/posts/old/Filtering(1)/#basic", 
            "text": "For a selected filter and a selected pixel, we need to calculate the as we want the convolution result of the image. We defined a function to calculate the gray value for the exactly one pixel.  Convolution(x, y, filter) \u2192 new_gray_value\n\ndef convolution(arguments):\n  for i in range(filter_size):\n    for j in range(filter_size):\n      if out_of_range:\n        center_value += 0\n      else:\n        center_value += filter[i][j] * image_p\n  center_value /= filter_size * filter_size  Then we can calculate the center_value for one pixel in the origin image. Then we can have a nested for loop to calculate the whole image.  def filter2d(arguments):\n  for i in range(height):\n    for j in range(width):\n      new_image[i,j] = convolution(i,j, filter)  Notice that, when I am doing laplacian_filter, the result is very wired. As a result, we need to compelete scaling after operation. What\u2019s more, I did a gama correction as wil to have a better view.  scaling method:  \\[\ns = |S(x,y)| = |\\frac{f(x,y)-min(f(x,y))}{max(f(x,y)) - min(f(x,y))}| \\times 255\n\\] I use the same method in histogram equalization that to set up a table for gama function.    for i in range(256):\n    val = pow(float(i)/255.0 ,scale) * 255.0\n    if val 255:\n      val = 255\n    elif val 0:\n      val = 0\n    table[i]= val  I meet a problem when using the laplacian method. The noise of the image is also enhanced. So I adjust the method with:  \\[\ng = G(x,y) = k\\times f(x) + L(x,y)\n\\] For high_boost_filtering:  First we should calculate the Fuzzy image:  for i in range(height):\n  for j in range(width):\n    sub_img[i ,j] = img[i, j][0] - fuzzy_img[i][j]  And we get the mask sub_img , and then we calculate the output image:  for i in range(height):\n  for j in range(width):\n    enhanced_img[i, j] = img[i, j][0] + k * sub_img[i][j]  And then we get the enhanced_img by doing the formula.  \\[\ng(x,y) = f(x,y) + k\\times g_m(x,y)\n\\] The function of image sharpening is to make the gray contrast enhanced, so that the fuzzy image becomes more clear. The essence of the image is that the image is subjected to an average operation or an integral operation, so it can be carried out on the inverse operation, such as differential operation can highlight the image details, so that the image becomes more clear.  \\[\n\\nabla f^2 = [f(x+1,y)+f(x-1,y)+f(x,y+1)+f(x, y-1)\n\\] \\[\n+f(x+1, y+1)+f(x+1,y-1)+ f(x-1,x+1)+f(x-1,y-1)] - 8f(x,y)\n\\]", 
            "title": "Basic"
        }, 
        {
            "location": "/posts/old/Filtering(1)/#result", 
            "text": "original image:   3*3 Mean Filter:  \\[\n  \\frac{1}{9} \\left[\n  \\begin{matrix}\n   1   1   1 \\\\\n   1   1   1 \\\\\n   1   1   1\n  \\end{matrix} \\right]\n\\]  7*7 Mean Filter:   11*11 Mean Filter:   laplacian sharpen result:   high_boost_filtering result with k = 0.8:", 
            "title": "Result"
        }, 
        {
            "location": "/posts/old/Filtering(1)/#bar_picture_testing", 
            "text": "", 
            "title": "Bar Picture Testing"
        }, 
        {
            "location": "/posts/old/Filtering(1)/#filter_input_image_with_3_3_and_9_9_arithmetic_mean_filters_respectively", 
            "text": "Origin Image:   3*3 arithmetic mean filter:   9*9 arithmetic mean filter:   3*3 contraharmonic mean filter:   9*9 contraharmonic mean filter:   3*3 harmonic mean filter:   9*9 harmonic mean filter:", 
            "title": "Filter input image with 3 \u00d7 3 and 9 \u00d7 9 arithmetic mean filters respectively."
        }, 
        {
            "location": "/posts/old/Filtering(1)/#noise_reduction", 
            "text": "Review that:  arithmetic:  \\[\nf(x,y) = \\frac{\\sum_{i,j\\in S(x,y)} f(i,j)}{m\\times n}\n\\] geometric:  \\[\nf(x,y) = \\sqrt[nm]{\\prod_{i,j \\in S(x,y)}{f(i,j)}}\n\\] harmonic: Notice that we defined  \\[\n\\frac{1}{0} = max(\\frac{1}{f(x,y)}) = 1\n\\] if img[img_x, img_y] == 0:\n  centre_gray_value += 1\nelse:\n  centre_gray_value += 1.0 / (img[img_x, img_y] * img_filter[i][j])  contraharmonic: Calculate two converlosion    centre_gray_value1 = Convolution(img, img_filter, x, y, method,q+1)\n  centre_gray_value2 = Convolution(img, img_filter, x, y, method, q)\n  if centre_gray_value2 != 0:\n    return int(float(centre_gray_value1) / centre_gray_value2)\n  else:\n    return 0  max, median and min: Write another function to process the points, store them to new array.    if method ==  median :\n    array.sort()\n  if filter_size ** 2 % 2 == 0:\n    return array[filter_size*filter_size / 2]\n  else:\n    return int(float(array[filter_size*filter_size / 2] + array[filter_size filter_size / 2 -1])/2)\n  elif method ==  max :\n    return np.amax(array)\n  elif method ==  min :\n    return np.amin(array)", 
            "title": "Noise Reduction"
        }, 
        {
            "location": "/posts/old/Filtering(1)/#reduction_result", 
            "text": "", 
            "title": "Reduction Result:"
        }, 
        {
            "location": "/posts/old/Filtering(1)/#gussian_noise_image", 
            "text": "arithmetic mean:   geometric mean:   Arthmetic Mean Filter can really reduce some noise because it\u2019s a low pass filter. But it also blurred the image. It looks OK by using 5x5 filter. 9x9 filter is bad in practical. Geometric Mean Filter seems like that it can reduce more noise. It looks OK overall. But it also bolds the edge of the black elements in the image, because one zero will lead to result 0 when filtering.\nMedian Filter can have the effect that Arthmetic Mean Filter has. It can denois the picture and also make the picture look better.\nIn a word, I think that median filter is better when filtering Guassian Noise.", 
            "title": "Gussian Noise Image:"
        }, 
        {
            "location": "/posts/old/Filtering(1)/#salt_noise_image", 
            "text": "contraharmonic(negative)   contraharmonic(positive)   Setting a wrong Q value can lead to terrible results because the contraharmonic mean filter can not filter both pepper noise and salt noise.\nWhen Q is positive, the filter can reduce pepper noise. Because the most significant value is big value and the pepper value is small numbers, the black points can be removed by using this way.\nWhen Q is negative, the filter can reduce salt noise. Because the most significant value is small value(Reciprocal Sum). The Salt value is small numbers, the white points can be remove by using this way.\nHowever, if you use the wrong method, terrible things will happen like using Q=1.5 to reduce salt noise, because the most significant value is big value, the white noise will become louder in this way which will lead to terrible result.", 
            "title": "Salt Noise Image:"
        }, 
        {
            "location": "/posts/old/Filtering(1)/#salt_and_pepper_noise_image", 
            "text": "arithmetic mean:   geometric:   max:   min:   median:   Median Filter looks best, and then arithmetic mean. Other filter looks very ugly.\nMedian Filter can do the best. In image processing, such as edge detection in the further processing of this before, usually need a certain degree of reduction Median filtering is a common step in image processing.\nIt is especially useful for speckle noise and impulse noise. Save the edge of the feature so that it does not want to appear on the edge of the occasion is also very useful. arithmetic mean filtering looks ok here. It\u2019s the same in Guasian Noise, Arthmetic Mean Filter can really reduce some noise because it\u2019s a low pass filter. But it also blurred the image. It looks OK by using 5x5 filter. 9x9 filter is bad in practical.\nGeometric mean filtering is bad, because one zero will lead to result 0 when filtering. The points near one pepper noise will lead to a big area of black, it\u2019s very terrible. max and min is bad, because they can only reduce one kind of noise not both pepper and salt. Max can reduce pepper noise very well and Min can reduce salt noise very well.", 
            "title": "Salt and Pepper Noise Image:"
        }, 
        {
            "location": "/posts/old/Filtering(2)/", 
            "text": "Filtering in Frequency Domain\n\n\nWe can use the following serveral steps to implment the algorithm:\n\n\n1. Calculate the suitable size for the image which is suppose to be powers 2 and then padding zeros for both the origin image and the filter simply puting them at the letf top conrner. (Because in frequency domain, it does not matter where you put the image, but will have some side effect for the image\u2019s edge).\n\n\nResize function:\n\n\ndef calculate_pow2(x):\n  res = 2\n  while res \n x:\n    res = res \n 1\n  return res\n\n\n\n\n2. Apply Fourier transform for both the images. Centerlize them respetively and then apply fft2d in question2(because it\u2019s fast than using fft2d).\n\n\nFFT_filter = FFT.centralize(FFT_filter)\nadjust_img = FFT.centralize(adjust_img)\nFFT_filter = FFT.fft2d(FFT_filter, 1)\nFFT_image = FFT.fft2d(adjust_img, 1)\n\n\n\n\n3. Using Convolution theorem:\n\n\n\\[\nf(x,y) * g(x,y) \\Leftarrow \\Rightarrow F(u,v) \\times G(u,v)\n\\]\nLet the two matrix to do array multiplication. And get the result image.\n\n\nResult = FFT_image * FFT_filter\nResult = FFT.fft2d(Result, -1).real\n\n\n\n\n4. Apply Inverse Fourier transform for the image, and get the real part as well as apply centerlize again.\n\n\n5. Return the iamge and then do scaling for display.\n\n\nDeatils:\n\n\n\n\nFor laplacian filtering, the formula should be applied like that in project 2.:\nResult[x, y] = 5 * img[x, y] - Result[x, y]\n\n\nThe output image will become brighter. In this way, I apply histogram equlization in project 2. This time I use gama\ncorrection.\n\n\nLog scaling is more better than linear:\n\n\n\n\n\\[\nf'(x,y) = \\frac{255}{\\log_{10}256} \\times \\log_2(1+|\\frac{f(x,y)}{max(f(x,y))}|\\times 255)\n\\]\nOrigin Image:\n\n\n\n\nSmooth Result:\n\n\n\n\nSharpen Result:\n\n\n\n\nProve Convolution Theory\n\n\n\\[\nf(t) * g(t) \\Leftarrow \\Rightarrow F(u) \\times G(u)\n\\]\nprov.\n\n\n\\[\nFG(u,v)=Ft(\\frac{1}{MN} \\sum_i \\sum_j f(i,j) \\cdot g(x-i,y-j))\n\\]\n\\[\n= \\frac{1}{(MN)^2} \\sum_{x=0}^{M-1} \\sum_{y=0}^{N-1} \\sum_i \\sum_j f(i,j) \\cdot g(x-i,y-j)) \\cdot e^{-2j\\pi (\\frac{ux}{M} + \\frac{vy}{N})}\n\\]\n\\[\n= \\frac{1}{(MN)^2} \\sum_i \\sum_j f(i,j) \\sum_{x=0}^{M-1} \\sum_{y=0}^{N-1} \\cdot g(x-i,y-j)) \\cdot e^{-2j\\pi (\\frac{ux}{M} + \\frac{vy}{N})}\n\\]\n\\[\n= \\frac{1}{(MN)^2} \\sum_i \\sum_j f(i,j) \\sum_{x=0}^{M-1} \\sum_{y=0}^{N-1} \\cdot g(x-i,y-j)) \\cdot e^{-2j\\pi (\\frac{u(x-i)}{M} + \\frac{v(y-j)}{N})} \\cdot e^{-2j\\pi (\\frac{ui}{M} + \\frac{vj}{N})}\n\\]\n\\[\n= \\frac{1}{MN} \\sum_i \\sum_j f(i,j) G(u,v) \\cdot e^{-2j\\pi (\\frac{ui}{M} + \\frac{vj}{N})}\n\\]\n\\[\n= F(u,v) \\cdot G(u,v)\n\\]", 
            "title": "Filtering2"
        }, 
        {
            "location": "/posts/old/Filtering(2)/#filtering_in_frequency_domain", 
            "text": "We can use the following serveral steps to implment the algorithm:  1. Calculate the suitable size for the image which is suppose to be powers 2 and then padding zeros for both the origin image and the filter simply puting them at the letf top conrner. (Because in frequency domain, it does not matter where you put the image, but will have some side effect for the image\u2019s edge).  Resize function:  def calculate_pow2(x):\n  res = 2\n  while res   x:\n    res = res   1\n  return res  2. Apply Fourier transform for both the images. Centerlize them respetively and then apply fft2d in question2(because it\u2019s fast than using fft2d).  FFT_filter = FFT.centralize(FFT_filter)\nadjust_img = FFT.centralize(adjust_img)\nFFT_filter = FFT.fft2d(FFT_filter, 1)\nFFT_image = FFT.fft2d(adjust_img, 1)  3. Using Convolution theorem:  \\[\nf(x,y) * g(x,y) \\Leftarrow \\Rightarrow F(u,v) \\times G(u,v)\n\\] Let the two matrix to do array multiplication. And get the result image.  Result = FFT_image * FFT_filter\nResult = FFT.fft2d(Result, -1).real  4. Apply Inverse Fourier transform for the image, and get the real part as well as apply centerlize again.  5. Return the iamge and then do scaling for display.  Deatils:   For laplacian filtering, the formula should be applied like that in project 2.:\nResult[x, y] = 5 * img[x, y] - Result[x, y]  The output image will become brighter. In this way, I apply histogram equlization in project 2. This time I use gama\ncorrection.  Log scaling is more better than linear:   \\[\nf'(x,y) = \\frac{255}{\\log_{10}256} \\times \\log_2(1+|\\frac{f(x,y)}{max(f(x,y))}|\\times 255)\n\\]", 
            "title": "Filtering in Frequency Domain"
        }, 
        {
            "location": "/posts/old/Filtering(2)/#origin_image", 
            "text": "", 
            "title": "Origin Image:"
        }, 
        {
            "location": "/posts/old/Filtering(2)/#smooth_result", 
            "text": "", 
            "title": "Smooth Result:"
        }, 
        {
            "location": "/posts/old/Filtering(2)/#sharpen_result", 
            "text": "", 
            "title": "Sharpen Result:"
        }, 
        {
            "location": "/posts/old/Filtering(2)/#prove_convolution_theory", 
            "text": "\\[\nf(t) * g(t) \\Leftarrow \\Rightarrow F(u) \\times G(u)\n\\] prov.  \\[\nFG(u,v)=Ft(\\frac{1}{MN} \\sum_i \\sum_j f(i,j) \\cdot g(x-i,y-j))\n\\] \\[\n= \\frac{1}{(MN)^2} \\sum_{x=0}^{M-1} \\sum_{y=0}^{N-1} \\sum_i \\sum_j f(i,j) \\cdot g(x-i,y-j)) \\cdot e^{-2j\\pi (\\frac{ux}{M} + \\frac{vy}{N})}\n\\] \\[\n= \\frac{1}{(MN)^2} \\sum_i \\sum_j f(i,j) \\sum_{x=0}^{M-1} \\sum_{y=0}^{N-1} \\cdot g(x-i,y-j)) \\cdot e^{-2j\\pi (\\frac{ux}{M} + \\frac{vy}{N})}\n\\] \\[\n= \\frac{1}{(MN)^2} \\sum_i \\sum_j f(i,j) \\sum_{x=0}^{M-1} \\sum_{y=0}^{N-1} \\cdot g(x-i,y-j)) \\cdot e^{-2j\\pi (\\frac{u(x-i)}{M} + \\frac{v(y-j)}{N})} \\cdot e^{-2j\\pi (\\frac{ui}{M} + \\frac{vj}{N})}\n\\] \\[\n= \\frac{1}{MN} \\sum_i \\sum_j f(i,j) G(u,v) \\cdot e^{-2j\\pi (\\frac{ui}{M} + \\frac{vj}{N})}\n\\] \\[\n= F(u,v) \\cdot G(u,v)\n\\]", 
            "title": "Prove Convolution Theory"
        }, 
        {
            "location": "/posts/old/Histogram-Equalization/", 
            "text": "Image filtering, in as much as possible to retain the details of image under the target image noise suppression, is indispensable in image preprocessing operation, the treatment effect is good or bad will directly affect the validity and reliability of the subsequent image processing and analysis.\n\n\nHistogram equalization is a method in image processing of contrast adjustment using the image's histogram.\n\n\nSuppose that we have a image with histogram H1, our goal is to output a histogram of uniform distribution. In the process of uniforming, two conditions must be satisfied:\n\n\n\n\nThe output function should be Non-Decreasing.\n\n\nThe output function F' should satisfy  0 \n= F' \n= L-1 (L is the gray level of F)\n\n\n\n\nFor continues function:\n\n\n\\[\n  s = T(r) \\  (0 \\leq r \\leq 1)\n\\]\nAccording to the two conditions, we have:\n\n\n\\[\n  r = T^{-1}(s) \\  (0 \\leq s \\leq 1)\n\\]\nAccording to probability theory:\n\n\n\\[\nP_s(s) = P_r(r) |\\frac{dr}{ds}|\n\\]\nWe need to have a uniform distribution, so we let:\n\n\n\\[\n  P_s(s) = 1\n\\]\n\\[\n  \\therefore |\\frac {dr}{ds}| = |\\frac {1}{P_r(r)}|\n\\]\n\\[\n  P_r(r)dr = dT(r)\n\\]\nFor T\n, there can be a possible answer:\n\n\n\\[\nT(r) = \\int_0^r P_r(\\omega) d \\omega\n\\]\nNow, we can get T\n, and T\n is exactly the cdf(cumulative distribution function).\n\n\nNote that, in the condition of discrete, it may not work exactly.\n\n\nOrigin Image:\n\n\n\n\nOrigin Histogram:\n\n\n\n\nAfter Equalization:\n\n\n\n\n\n\nThe result in fact looks better than the origin one.By this method, the brightness can be better distributed on the histogram. This can be used to enhance the contrast of the contrast without affecting the overall contrast, histogram equalization by effectively expanding the common brightness to achieve this function.\n\n\nLet\u2019s put the origin image and the output image together.\n\n\nIt strongly shows that the first image is much better than the second one since after the histogram equalization processing, the original relatively small pixel gray level will be allocated to other gray, the pixel is relatively concentrated, after processing gray range, contrast, large, clarity, so can effectively enhance the image.\n\n\nHistogram equalization is a method to adjust the contrast in the field of image processing. This method is usually used to increase the local contrast of many images, especially when the contrast of the useful data of the image is very close. By this method, the brightness can be better distributed on the histogram. This can be used to enhance the contrast of the contrast without affecting the overall contrast, histogram equalization by effectively expanding the common brightness to achieve this function.\n\n\nImplement Details\n\n\nThe target to get a histogram equalization is the same to get a corresponding relation between gray_value_old and gray_value_new .\nThe core algorithm of histogram equalization is to calculate such a table(array) for the image.\n\n\n\\[\ns = T(r) = \\sum_0^r p_r(i),0\\leq r \\leq 255\n\\]\n  fx[i] = 255 * sum([hist[j] for j in range(i+1)]) / (width * height)\n\n\n\n\nNote that fx indicates the corresponding relation table(array) for the origin image. And sum is function to calculate the formula above.\nAnd also note that I implicitly do a scaling in the calculating.\nNext it\u2019s very easy, just traverse the array and then assign the table value for the new image.\n\n\n  new_img[x, y] = fx[old_img[x, y]]\n\n\n\n\nHappily , we got the histogram equalization result and then we can draw the histogram again and the result.\n\n\n\n\nHistogram Equalization in Color Domain:\n\n\nColor histogram equalization is actually the image of one or more color channels for gray histogram equalization operations, common in the following ways:\n\n\nStatistics of all RGB color channels of the histogram of the data and do a balanced operation, and then according to the balance of the mapping table to replace the G, B, R channel color value.\n\n\nR, G, B color channels of the data and do a balanced operation, and then according to the R, B, G mapping table to replace the R, G, B channel color value.\n\n\nCalculate the luminance channel by using the average value of the or the RGB, then calculate the histogram of the luminance channel and do a balanced operation, then replace the G, B, R channel color values by the mapping table.\n\n\nHistogram equalization is a non-linear process. Channel splitting and equalizing each channel separately is not the proper way for equalization of contrast. Equalization involves Intensity values of the image not the color components. So for a simple RGB color image, HE should not be applied individually on each channel. Rather, it should be applied such that intensity values are equalized without disturbing the color balance of the image. So, the first step is to convert the color space of the image from RGB into one of the color space which separates intensity values from color components.\n\n\nWe can learn from it from another point.\nIf process the R, G, B channels separately, it will only have the information from R,G,B separately. If we usethe whole average, it use all the information from R,G,B.\n\n\nReference:\n\n\nFrom Wikipedia\n\n\n\n\nThe above describes histogram equalization on a grayscale image. However it can also be used on color images by applying the same method separately to the Red, Green and Blue components of the RGB color values of the image. However, applying the same method on the Red, Green, and Blue components of an RGB image may yield dramatic changes in the image\u2019s color balance since therelative distributions of the color channels change as a result of applying the algorithm. However, if the image is first converted to another color space, Lab color space, or HSL/HSV color space in particular, then the algorithm can be applied to the luminance or value channel without resulting in changes to the hue and saturation of the image.[4] There are several histogram equalization methods in 3D space. Trahanias and Venetsanopoulos applied histogram equalization in 3D color space[5]\n\n\nHowever, it results in \u201cwhitening\u201d where the probability of bright pixels are higher than that of dark ones.[6] Han et al. proposed to use a new cdf defined by the iso-luminance plane, which results in uniform gray distribution.[7]\n\n\n\n\nOriginal Image:\n\n\n\n\nHistogram Equalization using independent histogram:\n\n\n\n\nYou can see, the image doesn't be enhanced. However, it become ugly.\n\n\nHistogram Equalization using average histogram:\n\n\n\n\nYou can also use HSI to do Histogram Equalization, which is a proper way.\n\n\n\n\nSuppose that you have performed histogram equalization on a digital image. Will a second pass of histogram equalization (on the histogram-equalized image) produce exactly the same result as the first pass?Prove your answer.\n\n\nIt is equivalent to all of the same number of pixels on the gray level, no matter how many times you have a number of histogram equalization, he has not changed.\n\n\nProve:\n\n\nAssume that the first pass of histogram equalization result in gray level s.\n\n\nFirst Pass:\n\n\n\\[\ns = T_1(r) = \\int_0^r p_r(\\omega)d\\omega, 0\\leq r \\leq 1\n\\]\nAccording to probability theory:\n\n\n\\[\nP_s(s) = P_r(r) \\frac{dr}{ds}\n\\]\nSecond Pass:\n\n\n\\[\nt = \\int_0^s P_s(\\omega)d\\omega, 0\\leq s \\leq 1\n\\]\n\\[\nt = \\int_0^r P_r(\\omega)\\frac{d\\omega}{dr}dr = \\int_0^r P_r(\\omega)d\\omega, 0\\leq r \\leq 1\n\\]\n\\(\n\\(\\therefore\\)\n\\)\n it's no sense to have a second pass histogram equalization\n\n\n\n\nGithub:\n\n\nhttps://github.com/ghostbody/Image-Processing\n\n\nReference:\n\n\n\n\nAcharya and Ray, Image Processing: Principles and Applications, Wiley-Interscience 2005 ISBN 0-471-71998-6\n\n\nRuss, The Image Processing Handbook: Fourth Edition, CRC 2002 ISBN 0-8493-2532-3", 
            "title": "Histogram Equalization"
        }, 
        {
            "location": "/posts/old/Histogram-Equalization/#histogram_equalization_in_color_domain", 
            "text": "Color histogram equalization is actually the image of one or more color channels for gray histogram equalization operations, common in the following ways:  Statistics of all RGB color channels of the histogram of the data and do a balanced operation, and then according to the balance of the mapping table to replace the G, B, R channel color value.  R, G, B color channels of the data and do a balanced operation, and then according to the R, B, G mapping table to replace the R, G, B channel color value.  Calculate the luminance channel by using the average value of the or the RGB, then calculate the histogram of the luminance channel and do a balanced operation, then replace the G, B, R channel color values by the mapping table.  Histogram equalization is a non-linear process. Channel splitting and equalizing each channel separately is not the proper way for equalization of contrast. Equalization involves Intensity values of the image not the color components. So for a simple RGB color image, HE should not be applied individually on each channel. Rather, it should be applied such that intensity values are equalized without disturbing the color balance of the image. So, the first step is to convert the color space of the image from RGB into one of the color space which separates intensity values from color components.  We can learn from it from another point.\nIf process the R, G, B channels separately, it will only have the information from R,G,B separately. If we usethe whole average, it use all the information from R,G,B.  Reference:  From Wikipedia   The above describes histogram equalization on a grayscale image. However it can also be used on color images by applying the same method separately to the Red, Green and Blue components of the RGB color values of the image. However, applying the same method on the Red, Green, and Blue components of an RGB image may yield dramatic changes in the image\u2019s color balance since therelative distributions of the color channels change as a result of applying the algorithm. However, if the image is first converted to another color space, Lab color space, or HSL/HSV color space in particular, then the algorithm can be applied to the luminance or value channel without resulting in changes to the hue and saturation of the image.[4] There are several histogram equalization methods in 3D space. Trahanias and Venetsanopoulos applied histogram equalization in 3D color space[5]  However, it results in \u201cwhitening\u201d where the probability of bright pixels are higher than that of dark ones.[6] Han et al. proposed to use a new cdf defined by the iso-luminance plane, which results in uniform gray distribution.[7]   Original Image:   Histogram Equalization using independent histogram:   You can see, the image doesn't be enhanced. However, it become ugly.  Histogram Equalization using average histogram:   You can also use HSI to do Histogram Equalization, which is a proper way.   Suppose that you have performed histogram equalization on a digital image. Will a second pass of histogram equalization (on the histogram-equalized image) produce exactly the same result as the first pass?Prove your answer.  It is equivalent to all of the same number of pixels on the gray level, no matter how many times you have a number of histogram equalization, he has not changed.  Prove:  Assume that the first pass of histogram equalization result in gray level s.  First Pass:  \\[\ns = T_1(r) = \\int_0^r p_r(\\omega)d\\omega, 0\\leq r \\leq 1\n\\] According to probability theory:  \\[\nP_s(s) = P_r(r) \\frac{dr}{ds}\n\\] Second Pass:  \\[\nt = \\int_0^s P_s(\\omega)d\\omega, 0\\leq s \\leq 1\n\\] \\[\nt = \\int_0^r P_r(\\omega)\\frac{d\\omega}{dr}dr = \\int_0^r P_r(\\omega)d\\omega, 0\\leq r \\leq 1\n\\] \\( \\(\\therefore\\) \\)  it's no sense to have a second pass histogram equalization", 
            "title": "Histogram Equalization in Color Domain:"
        }, 
        {
            "location": "/posts/old/Histogram-Equalization/#github", 
            "text": "https://github.com/ghostbody/Image-Processing", 
            "title": "Github:"
        }, 
        {
            "location": "/posts/old/Histogram-Equalization/#reference", 
            "text": "Acharya and Ray, Image Processing: Principles and Applications, Wiley-Interscience 2005 ISBN 0-471-71998-6  Russ, The Image Processing Handbook: Fourth Edition, CRC 2002 ISBN 0-8493-2532-3", 
            "title": "Reference:"
        }, 
        {
            "location": "/posts/old/Fourier-Transformation/", 
            "text": "The steps for calculate Fourier transform :\n\n\n\n\ncentralize the original image with f(x,y) \u00d7(-1)^(x+y)\n\n\nApply Fourier transform to the image\n\n\nget abs(Spectrum) from the image\n\n\nApply Fourier log transform.\n\n\nApply scaling.\n\n\n\n\nIn fact, I use only one function for DFT and IDF because:\n\n\n\\[\nMN f^* (x,y) = F^* (u,v)\n\\]\n  def dft2d(img, flags):\n      if flags == 1:\n          return Fdft2d(img)\n      elif flags == -1:\n          res = np.conjugate(img)\n          #return np.conjugate(Fdft2d(img))\n          return np.conjugate(Fdft2d(img))\n\n\n\n\nAt the first, I treated the 2d Fourier transform using 1d method, which is:\n\n\n\\[\nF(u,v) = \\frac{1}{MN}\\sum_{x=0}^{M-1}\\sum_{y=0}^{N-1}f(x,y)e^{-2j\\pi (\\frac{ux}{M} + \\frac{vy}{N})}\n\\]\nThe time complexity of the transform algorithm is O(n^4) which is too slow and I use almost 24 hours to run the program using python. After that I ask a question and I get the answer.\n\n\n\\[\nF(u,v) = \\frac{1}{MN}\\sum_{x=0}^{M-1}e^{-2j\\pi \\frac{ux}{M}}\\sum_{y=0}^{N-1}f(x,y)e^{-2j\\pi \\frac{vy}{N}}\n\\]\nBecause the Fourier transform is linear and can divided into two steps for implement. First, calculate Fourier transform for cols and then for the rows. Surprised and luckily, its time complexity is O(n^3) which can be done in few minutes.\n\n\nThe core algorithm is:\n\n\n    for u in xrange(height):\n      for v in xrange(width):\n        for y in xrange(width):\n            Fourier_img0[u, v] += img[u,y] * (np.exp(-1j*2*np.pi*(float(v*y)/width)))\n    for u in xrange(height):\n      for v in xrange(width):\n        for x in xrange(height):\n            Fourier_img[u, v] += Fourier_img0[x, v] * (np.exp(-1j*2*np.pi*(float(u*x)/height)))\n\n\n\n\nUsing the two steps to calculate the whole image.\n\n\n\n\nFourier Spectrum:\n\n\n\n\nInverse Fourier Transform\n\n\n\n\nPay attention to the edge of the picture appears a small impurity due to the Transformation error(zero padding)\n\n\nFast Fourier Transform\n\n\nFirst we have the following thinkings:\n\n\n\n\nInverse Fourier Transform is the same as Fourier Transform.\n\n\nThe method in 1d Fourier transform can be applied to 2d as well.\n\n\nAccording to Symmetry, the points in the dialog is at the same value.\n\n\nWe have the following equation:\n\n\n\n\n\\[\nX_k = \\sum_{n=0}^{N-1}x_n \\cdot e^{-i2\\pi kn/N}\n\\]\n\\[\n = \\sum_{m=0}^{N/2-1} x_{2m}\\cdot e^{-i2\\pi k(2m)/N} + \\sum_{m=0}^{N/2-1}x_{2m+1}\\cdot e^{-i2\\pi k(2m+1)/N}\n\\]\n\\[\n = \\sum_{m=0}^{N/2-1} x_{2m}\\cdot e^{-i2\\pi km/(N/2)} + e^{-i2\\pi k/N}\\sum_{m=0}^{N/2-1}x_{2m+1}\\cdot e^{-i2\\pi km/(N/2)}\n\\]\nWe split a single DFT into two smaller DFT. One odd, one even. So far, we have not save computational overhead, each part contains (n / 2) of N amount of computation, in general, is n.\n\n\nThere is a question \u201cHowever, your implementation may be limited to images whose sizes are integer powers of 2\u201d, and we can simply padding the image to powers of 2. I have two methods for the users:\n\n\n\n\nPadding the image to powers of 2.\n\n\nWhen the program divide the image into some sub-image that is not powers of 2, DFT_Slow will be applied.\n\n\n\n\nThe core algorithm:\n\n\n\n\nFirst we implement 1d fft using the thoughts above.\n\n\n\n\n\n        def fft(x):\n          N = len(x)\n          if N \n<\n= 1:\n            return x\n          elif N % 2 != 0:\n            return DFT_slow(x)\n          else:\n            even = fft(x[::2])\n            odd = fft(x[1::2])\n          return np.concatenate([[even[k] + np.exp(-2j*np.pi*k/N) * odd[k] for k in\n\n\n\n\n2.implentment the 2d fft using 1d fft and using the divide method in fft2d:\n\n\n\ndef Ffft2d(img):\n  height = len(img)\n  width = len(img[0])\n  Fourier_img0 = np.zeros((height,width),np.complex256)\n  for u in xrange(height):\n    Fourier_img0[u] = np.array(fft(img[u]))\n  Fourier_img = np.zeros((height,width),np.complex256)\n  for v in xrange(width):\n    Fourier_img[:,v] = fft(Fourier_img0[:,v])\n  return Fourier_img\n\n\n\n\nAs a result, we get the fft2d. And fft is more fast than dft, we can calculate a image in seconds rather minutes. For example, dft2d use 3~4 minutes to process the image \u201c14.png\u201d, but fft use only some seconds to process.\n\n\nFFT Fourier Spectrum:\n\n\n\n\nIFFT Image:\n\n\n\n\nGithub\n\n\nhttps://github.com/ghostbody/Image-Processing", 
            "title": "Fourier Transformation"
        }, 
        {
            "location": "/posts/old/Fourier-Transformation/#fourier_spectrum", 
            "text": "", 
            "title": "Fourier Spectrum:"
        }, 
        {
            "location": "/posts/old/Fourier-Transformation/#inverse_fourier_transform", 
            "text": "Pay attention to the edge of the picture appears a small impurity due to the Transformation error(zero padding)", 
            "title": "Inverse Fourier Transform"
        }, 
        {
            "location": "/posts/old/Fourier-Transformation/#fast_fourier_transform", 
            "text": "First we have the following thinkings:   Inverse Fourier Transform is the same as Fourier Transform.  The method in 1d Fourier transform can be applied to 2d as well.  According to Symmetry, the points in the dialog is at the same value.  We have the following equation:   \\[\nX_k = \\sum_{n=0}^{N-1}x_n \\cdot e^{-i2\\pi kn/N}\n\\] \\[\n = \\sum_{m=0}^{N/2-1} x_{2m}\\cdot e^{-i2\\pi k(2m)/N} + \\sum_{m=0}^{N/2-1}x_{2m+1}\\cdot e^{-i2\\pi k(2m+1)/N}\n\\] \\[\n = \\sum_{m=0}^{N/2-1} x_{2m}\\cdot e^{-i2\\pi km/(N/2)} + e^{-i2\\pi k/N}\\sum_{m=0}^{N/2-1}x_{2m+1}\\cdot e^{-i2\\pi km/(N/2)}\n\\] We split a single DFT into two smaller DFT. One odd, one even. So far, we have not save computational overhead, each part contains (n / 2) of N amount of computation, in general, is n.  There is a question \u201cHowever, your implementation may be limited to images whose sizes are integer powers of 2\u201d, and we can simply padding the image to powers of 2. I have two methods for the users:   Padding the image to powers of 2.  When the program divide the image into some sub-image that is not powers of 2, DFT_Slow will be applied.   The core algorithm:   First we implement 1d fft using the thoughts above.   \n        def fft(x):\n          N = len(x)\n          if N  < = 1:\n            return x\n          elif N % 2 != 0:\n            return DFT_slow(x)\n          else:\n            even = fft(x[::2])\n            odd = fft(x[1::2])\n          return np.concatenate([[even[k] + np.exp(-2j*np.pi*k/N) * odd[k] for k in  2.implentment the 2d fft using 1d fft and using the divide method in fft2d:  \ndef Ffft2d(img):\n  height = len(img)\n  width = len(img[0])\n  Fourier_img0 = np.zeros((height,width),np.complex256)\n  for u in xrange(height):\n    Fourier_img0[u] = np.array(fft(img[u]))\n  Fourier_img = np.zeros((height,width),np.complex256)\n  for v in xrange(width):\n    Fourier_img[:,v] = fft(Fourier_img0[:,v])\n  return Fourier_img  As a result, we get the fft2d. And fft is more fast than dft, we can calculate a image in seconds rather minutes. For example, dft2d use 3~4 minutes to process the image \u201c14.png\u201d, but fft use only some seconds to process.", 
            "title": "Fast Fourier Transform"
        }, 
        {
            "location": "/posts/old/Fourier-Transformation/#fft_fourier_spectrum", 
            "text": "", 
            "title": "FFT Fourier Spectrum:"
        }, 
        {
            "location": "/posts/old/Fourier-Transformation/#ifft_image", 
            "text": "", 
            "title": "IFFT Image:"
        }, 
        {
            "location": "/posts/old/Fourier-Transformation/#github", 
            "text": "https://github.com/ghostbody/Image-Processing", 
            "title": "Github"
        }, 
        {
            "location": "/posts/old/stero-matching/", 
            "text": "Basic Task\n\n\n1. Implement a test program to evaluate the quality of your disparity maps. Your program should output the percentage of bad pixels in each of your disparity maps, where bad pixels are those whose errors are greater than one when comparing to ground truths (without multiplication).\n\n\n(You can see the implementation in the code evaluate.cpp)\nCalculation Formula:\n(D(x,y) indicates a pixel in disparity map, G(x,y) indicates the corresponding pixel in GroundTruth, when G(x,y) = 0, the result is not defined)\n\n\nThis program is used to evaluate the quality of the disparity map later with inputs(disparitymap, groundtruth) and output(bad_pixel_percentage)\nThis is an example of its output:\n\n\n\n[Rocks2]the percentage of bad pixels: 9.355803\n[Rocks2]the percentage of bad pixels: 8.801272\n[Wood2]the percentage of bad pixels: 18.744331\n[Wood2]the percentage of bad pixels: 17.688102\n\n\n\n\nThe higher bad_pixel_percentage the disparity map has, the worse the disparity map is. So the best way for stero matching should be the way that result in a small bad percentage.\n\n\n2. Implement a local stereo matching algorithm using \u201cSum of Squared Difference (SSD)\u201d as matching cost. Compute both the left and the right disparity maps for all test cases, and visualize them by scaling their intensities by a factor of three. Save each disparity map to a file named testcasename disp1 SSD.png or testcasename disp5 SSD.png. Also write down the matching cost function and the quality of your disparity maps.\nMatching cost function:\n\n\n(P,Q indicates the patch in Left and Right)\n\n\nExperiment in patch size(5*5)\n(You can see the result image in the SSD folder)\n\n\nEvaluating result:\n\n\n[Baby2]          86.623912\n[Baby2]          86.485832\n[Plastic]        95.403489\n[Plastic]        95.960003\n[Lampshade1]     90.939392\n[Lampshade1]     90.484364\n[Wood1]          84.996747\n[Wood1]          85.702289\n[Cloth2]         85.989014\n[Cloth2]         86.743649\n[Bowling2]       88.971997\n[Bowling2]       89.059850\n[Midd1]          90.292357\n[Midd1]          91.058413\n[Cloth1]         77.970056\n[Cloth1]         77.347851\n[Aloe]           82.254573\n[Aloe]           82.334958\n[Monopoly]       91.509975\n[Monopoly]       91.359893\n[Cloth3]         80.191847\n[Cloth3]         79.908614\n[Baby1]          79.717950\n[Baby1]          79.548459\n[Rocks1]         80.377742\n[Rocks1]         80.512560\n[Lampshade2]     91.407528\n[Lampshade2]     91.998627\n[Flowerpots]     93.149236\n[Flowerpots]     93.285917\n[Midd2]          92.732997\n[Midd2]          92.919513\n[Baby3]          84.986084\n[Baby3]          84.874142\n[Cloth4]         81.736471\n[Cloth4]         82.141564\n[Bowling1]       92.239938\n[Bowling1]       92.373453\n[Rocks2]         82.866137\n[Rocks2]         82.267727\n[Wood2]          85.840323\n[Wood2]          85.942839\n\n\n\n3. Implement a local stereo matching algorithm using \u201cNormalized Cross Correlation (NCC)\u201d as matching cost. Visualize and save your estimated disparity maps to testcasename disp1 NCC.png or testcasename disp5 NCC.png. You are required to figure out the meaning of NCC by yourselves and write down the formula of the NCC matching cost. Also write down the quality of your disparity maps.\n\n\nNCC explantion:\n\n\n\n\nIn signal processing, cross-correlation is a measure of similarity of two series as a function of the lag of one relative to the other. This is also known as a sliding dot product or sliding inner-product. It is commonly used for searching a long signal for a shorter, known feature. It has applications in pattern recognition, single particle analysis, electron tomography, averaging, cryptanalysis, and neurophysiology.\n\n\n\n\nFrom wikipedia\n\n\nAs an example, consider two real valued functions f and g differing only by an unknown shift along the x-axis. One can use the cross-correlation to find how much g must be shifted along the x-axis to make it identical to f. The formula essentially slides the g function along the x-axis, calculating the integral of their product at each position. When the functions match, the value of (fstar g) is maximized. This is because when peaks (positive areas) are aligned, they make a large contribution to the integral. Similarly, when troughs (negative areas) align, they also make a positive contribution to the integral because the product of two negative numbers is positive.\n\n\nThe Formula of NCC:\n\n\n(f hat and g hat indicates the mean value of the window, and sigma means the variance of the window)\nNotice that we are supposed to use max value according to the definition of NCC, i.e.\nEvaluating result:\n\n\n\n[Baby2]          86.623912\n[Baby2]          86.485832\n[Plastic]        95.403489\n[Plastic]        95.960003\n[Lampshade1]     90.939392\n[Lampshade1]     90.484364\n[Wood1]          84.996747\n[Wood1]          85.702289\n[Cloth2]         85.989014\n[Cloth2]         86.743649\n[Bowling2]       88.971997\n[Bowling2]       89.059850\n[Midd1]          90.292357\n[Midd1]          91.058413\n[Cloth1]         77.970056\n[Cloth1]         77.347851\n[Aloe]           82.254573\n[Aloe]           82.334958\n[Monopoly]       91.509975\n[Monopoly]       91.359893\n[Cloth3]         80.191847\n[Cloth3]         79.908614\n[Baby1]          79.717950\n[Baby1]          79.548459\n[Rocks1]         80.377742\n[Rocks1]         80.512560\n[Lampshade2]     91.407528\n[Lampshade2]     91.998627\n[Flowerpots]     93.149236\n[Flowerpots]     93.285917\n[Midd2]          92.732997\n[Midd2]          92.919513\n[Baby3]          84.986084\n[Baby3]          84.874142\n[Cloth4]         81.736471\n[Cloth4]         82.141564\n[Bowling1]       92.239938\n[Bowling1]       92.373453\n[Rocks2]         82.866137\n[Rocks2]         82.267727\n[Wood2]          85.840323\n[Wood2]          85.942839\n\n\n\n\nAdd a small constant amount of intensity (e.g. 10) to all right eye images, and re-run the above two methods. Analyze how the intensity change affects the results (i.e. the quality) of the two methods. Explain in which ways that NCC is a better matching cost than SSD.\n\n\nIn my experiment, if add a small constant of intensity to the image, both NCC and SSD\u2019s disparity map will result in worse result. Specially, the SSD\u2019s disparity map will result even worse than NCC. SSD\u2019s disparity map loss its basic profile but NCC reserved.(see the result in CNCC and CSSD)\n\n\nSSD add constant 10 result\n\n\n\n[Baby2]          89.896604\n[Baby2]          85.593220\n[Plastic]        88.304262\n[Plastic]        86.158073\n[Lampshade1]     84.219462\n[Lampshade1]     73.606516\n[Wood1]          88.854456\n[Wood1]          91.019575\n[Cloth2]         94.607702\n[Cloth2]         91.513014\n[Bowling2]       84.290159\n[Bowling2]       79.769386\n[Midd1]          83.192677\n[Midd1]          72.415577\n[Cloth1]         97.745803\n[Cloth1]         95.213559\n[Aloe]           93.188176\n[Aloe]           94.152794\n[Monopoly]       96.091758\n[Monopoly]       90.593618\n[Cloth3]         94.215438\n[Cloth3]         89.472422\n[Baby1]          94.743799\n[Baby1]          91.389961\n[Rocks1]         94.054690\n[Rocks1]         90.436248\n[Lampshade2]     83.931090\n[Lampshade2]     72.315711\n[Flowerpots]     73.113365\n[Flowerpots]     70.875750\n[Midd2]          81.773686\n[Midd2]          71.585982\n[Baby3]          88.570103\n[Baby3]          86.137052\n[Cloth4]         95.223769\n[Cloth4]         92.755758\n[Bowling1]       83.129820\n[Bowling1]       76.843606\n[Rocks2]         95.115421\n[Rocks2]         92.391097\n[Wood2]          92.915191\n[Wood2]          92.140416\n\n\n\n\nNCC add constant 10\n\n\n\n[Baby2]          87.540082\n[Baby2]          20.133499\n[Plastic]        71.748131\n[Plastic]        25.738930\n[Lampshade1]     71.480557\n[Lampshade1]     16.047063\n[Wood1]          90.974037\n[Wood1]          22.077000\n[Cloth2]         94.617065\n[Cloth2]         20.848262\n[Bowling2]       79.796230\n[Bowling2]       31.101214\n[Midd1]          67.438535\n[Midd1]          29.808777\n[Cloth1]         85.013935\n[Cloth1]         11.200985\n[Aloe]           90.169631\n[Aloe]           18.427116\n[Monopoly]       92.618510\n[Monopoly]       37.651150\n[Cloth3]         93.256854\n[Cloth3]         41.552272\n[Baby1]          86.632419\n[Baby1]          15.481971\n[Rocks1]         93.103975\n[Rocks1]         44.372019\n[Lampshade2]     65.176955\n[Lampshade2]     12.695837\n[Flowerpots]     90.497866\n[Flowerpots]     47.730843\n[Midd2]          66.247104\n[Midd2]          30.431838\n[Baby3]          88.249119\n[Baby3]          33.716989\n[Cloth4]         91.010549\n[Cloth4]         15.795518\n[Bowling1]       61.824486\n[Bowling1]       17.068507\n[Rocks2]         93.700477\n[Rocks2]         37.656598\n[Wood2]          67.785648\n[Wood2]          11.588071\n\n\n\n\n\n\nSSD method has a higher computational complexity compared to SAD algorithm as it involves numerous multiplication operations. Normally, two areas which consist of exactly the same pixel values would yield a score of zero. However, these measures will no longer yield the correct results in the case of radiometric distortion, i.e., where the pixel values in one image differ from those in the other image by a constant offset and/or gain factor.\n\n\nNCC algorithm is robust to the linear variation in the brightness due to different illumination conditions to the cameras. But it can be seen that due to more complex calculations of division, multiplication and square root its computational time is more than SAD, SSD. Hence it could only be used for real time application only if we are able to develop more efficient algorithm to speed up matching process.\n\n\n\n\nFrom Papper :Comparison of Various Stereo Vision Cost Aggregation Methods\n\n\nIn a word, NCC perform better than SSD when one image differ from those in the other image by a constant offset but cost more time.\n\n\n5.Cost aggregation using Adaptive Support Weight (ASW) is a powerful local stereo approach. You are required to implement this approach described in the CVPR\u201905 paper \u201cLocally Adaptive Support-Weight Approach for Visual Correspondence Search\u201d (to save time you are recommended to read mainly sec. 2.6 and sec. 3 of the paper). Visualize and save your estimated disparity maps to testcasename disp1 ASW.png or testcasename disp5 ASW.png. Also write down the quality of your disparity maps. Note that this algorithm is in general a bit slow.\n\n\n\n[Baby2]          20.133499\n[Plastic]        25.738930\n[Lampshade1]     16.047063\n[Wood1]          22.077000\n[Cloth2]         20.848262\n[Bowling2]       31.101214\n[Midd1]          29.808777\n[Cloth1]         11.200985\n[Aloe]           18.427116\n[Monopoly]       37.651150\n[Cloth3]         41.552272\n[Baby1]          15.481971\n[Rocks1]         44.372019\n[Lampshade2]     12.695837\n[Flowerpots]     47.730843\n[Midd2]          30.431838\n[Baby3]          33.716989\n[Cloth4]         15.795518\n[Bowling1]       17.068507\n[Rocks2]         37.656598\n[Wood2]          11.588071\n\n\n\n\n6.6. Explain the idea of the ASW paper in question 5. Also explain in which ways ASW is better than NCC. Why?\n\n\nThe core idea of ASW(Adaptive Support-Weight Approach) is to give a weight value to each pixel in the matching window, which is based on the color difference and the distance between them and the center point of the window. In essence, an approximate image segmentation is completed.\n\n\nAccording to the like between location and color difference of window in the original pixel cost Fu to different weighting, and to perform polymerization. Many studies show that the algorithm is all local stereo matching effect is the best, and the result of matching algorithm and the optimization results compared. But the algorithm of adaptive weighted algorithm is relatively slow, and the complexity of the algorithm is relatively high, and the weight of the storage space is very large.\n\n\nASW is better than NCC, but NCC is very slow. In the case that the images are colorful(3 channels), ASW is good. But for gray images, ASW are not necessary because color images do not have the definition of color difference(cq).\n\n\nimplementation details\n\n\nCode sturcture:\n\n\nbat.py #the program to process all the images\nstero0.cpp #the program to process SSD and NCC\nstero1.cpp #the program to process CNCC and CSSD\nstero2.cpp #the program to process ASW\n\n\n\nFor basic SSD and NCC and also ASW, the main algorithm is as follow:\n\n\n\n\nRead the image into memory\n\n\nTraversal the image, process each point and calculate d for the destination image.\n  2.1. for each of the point, calculate a patch from the left(right) image and then travel from 0 - dmax and calculate another patch from the right(left) image.\n  2.2 use the setting patch to calculate match cost and then choose the best match cost to be arg d.\n\n\nSave the image\n\n\n\n\nFor SSD:\nThe matching cost image is calculate by the following fomula:\n\n\n\\[\nC(x,y)= \\sum_{i,j \\in N}(N_p(i,j)-N_q(i,j))^2\n\\]\ni.e. sum the absolute square value of the corresponding patches.\n\n\n  for(int i = 0; i \n P.rows; i++) {\n    for(int j = 0; j \n P.cols; j++) {\n      int difference = P.at\nint\n(i,j) - Q.at\nint\n(i,j);\n      sum += difference * difference;\n    }\n  }\n\n\n\n\nFor NCC:\n\n\n\\[\n  D(p,q) = \\frac{1}{n} \\cdot \\sum_{i,j \\in N_{pq}} \\frac{(f_p(i,j) - \\hat f_p) \\cdot (g_q(i,j) - \\hat g_q)}{ \\sigma f_p \\sigma g_p}\n\\]\nFor ASW:(it will be more diffcult)\nIn the paper, we can conclude the several formulas:\nMatching Value:\n\n\n\\[\nd_p = arg_{d \\in } \\{d_{min}...d_{max}\\}\n\\]\nMatching Cost:\n\n\n\\[\nE(p,pd) = \\frac{\\sum_{q \\in W}w(p,q)w(p_d,q_d)e_0(q,qd)}{\\sum_{q \\in W}w(p,q)w(p_d,q_d)}\n\\]\n    double Eppd(const Mat \n P, const Mat \n Q, int d) {\n      Vec3b p = P.at\nVec3b\n(P.rows / 2, P.cols / 2);\n      Vec3b pd = Q.at\nVec3b\n(Q.rows / 2, Q.cols / 2);\n      double sum1 = 0;\n      double sum2 = 0;\n      for(int i = 0; i \n P.rows; i++) {\n        for(int j = 0; j \n P.cols; j++) {\n          sum1 += wpq(p, P.at\nVec3b\n(i,j), d) * wpq(pd, Q.at\nVec3b\n(i,j), d) * e0(P.at\nVec3b\n(i,j), Q.at\nVec3b\n(i,j));\n          sum2 += wpq(p, P.at\nVec3b\n(i,j), d) * wpq(pd, Q.at\nVec3b\n(i,j), d);\n        }\n      }\n      return sum2 != 0 ? sum1 / sum2 : 0;\n    }\n\n\n\n\nAdptive Weight:\n\n\n\\[\nw(p,q) = k \\cdot exp(-(\\frac{\\Delta c_{pq}}{\\gamma c} + \\frac{\\Delta gpq}{\\gamma p}))\n\\]\n    double wpq(const Vec3b \n p, const Vec3b \n q, int d) {\n      double k = 100;\n      double gamac = 40;\n      double gamap = 7;\n      return k*exp(-(deltaCpq(p,q) / gamac + d / gamap));\n    }\n\n\n\n\nError modification:\n\n\n    double e0(const Vec3b \n q, const Vec3b \n qd) {\n      return abs(q[0] - qd[0]) + abs(q[1] - qd[1]) + abs(q[2] - qd[2]);\n    }\n\n\n\n\nColor difference:\nRGB calculation:\n\n\n\\[\nC_{pq} = \\sqrt{\\omega_r(p_R-q_R)^2+\\omega_g(p_G-q_G)^2+\\omega_b(p_B-q_B)^2}\n\\]\noften with(\n\\(\n\\((\\omega_r,\\omega_g,\\omega_b)=(3,4,2)\\)\n\\)\n)\n\n\nLab calculation:\n\n\n\\[\nC_{pq} = \\sqrt{(L_1^*-L_2^*)^2+(a_1-a2)^2+(c_1-c_2)^2}\n\\]\n  // Lab space color difference calculation\n  double deltaCpq(const Vec3b \n p, const Vec3b \n q) {\n    double pXYZ[3] = {0};\n    double qXYZ[3] = {0};\n    double pLab[3] = {0};\n    double qLab[3] = {0};\n\n    pXYZ[0] = p[0] * 0.4124 + p[1] * 0.3576 + p[2] * 0.1805;\n    pXYZ[1] = p[0] * 0.2126 + p[1] * 0.7152 + p[2] * 0.0722;\n    pXYZ[2] = p[0] * 0.0193 + p[1] * 0.1192 + p[2] * 0.9505;\n\n    qXYZ[0] = q[0] * 0.4124 + q[1] * 0.3576 + q[2] * 0.1805;\n    qXYZ[1] = q[0] * 0.2126 + q[1] * 0.7152 + q[2] * 0.0722;\n    qXYZ[2] = q[0] * 0.0193 + q[1] * 0.1192 + q[2] * 0.9505;\n\n    const double Xn = 95.047;\n    const double Yn = 100.0;\n    const double Zn = 108.883;\n\n    qLab[0] = 116 * f(qXYZ[1] / Yn) - 16;\n    qLab[1] = 500 * (f(qXYZ[0]) / Xn - (f(qXYZ[1]) / Yn));\n    qLab[2] = 200 * (f(qXYZ[1]) / Yn - (f(qXYZ[2]) / Zn));\n\n    return sqrt((pLab[0] - qLab[0]) * (pLab[0] - qLab[0]) + (pLab[1] - qLab[1]) * (pLab[1] - qLab[1]) + (pLab[2] - qLab[2]) * (pLab[2] - qLab[2]));\n  }\n\n  //RGB space color difference calculation\n   double deltaCpq(const Vec3b \n p, const Vec3b \n q) {\n     const int wr = 3;\n     const int wg = 4;\n     const int wb = 2;\n     return sqrt(wr*(p[0] - q[0]) * (p[0] - q[0]) + wg*(p[1] - q[1]) * (p[1] - q[1]) + wb*(p[2] - q[2]) * (p[2] - q[2]));\n   }\n\n\n\n\ndiscussions of the disadvantages of the paper\n\n\nAdvantages:\n\n\nThe matching method can make a better result than both SSD and NCC. It can use a detail method to define the matching cost in a good way. Using the definition of color difference and the \u201cadptive weight\u201d is truly a good approach.\n\n\nIt\u2019s a landmark works in local stereo matching algorithm(maybe but i think it\u2019s not good, maybe it\u2019s my problem). From CVPR and PAMI you can see its component.\n\n\nAdaptiveWeight method has been proposed, formally declared in the matching accuracy, the adaptive Adaptive out algorithm (Window)(This method is unscientific at all i think). And later became popular.\n\n\nDisadvantage:\n\n\nToo many formulas :\n. They are supposed to give an example program but didn\u2019t. :\n\nThe algorithm is so slow that i can not stand it, and my computer can not afford a argument of window size of 33. :\n\n\nLocally approach can not do as well as global one. But there is so many projects for me to finish, i do not have time to do it. :\n\n\nConclusion:\n\n\nThis project is in fact very boring and seems that it\u2019s irrelevant to what we have learnt. I have many unsolved questions:\n\n\n\n\nWhy my program is so slow(not a bit slow)? How can I improve it?\nI used python as program language for the last 4 homework project. But this time i use c++ for programming, I think it should be quicker because c++ is a basic high level language and is known to be 10 times faster than python. But thep processing speed is stiil very slow.\n\n\nWhy my picture is so ugly compare to the ground truth?\nMany of my fellows also have this problem that the output image is very ugly compare to the groud truth, especially for the edge of the image. We check it for several times and discuss it for a better way but failed. We try to ask TA for help, but no responds :\n. We also ask professor Chao for help but she tells us to ask TA for help.\n\n\nHow to calculate the error pixels since the error rate in the paper is less than 5% when window size is set to 5, but my error rate is greater than 70% for average?\nWe should calculate absolute error in the paper that error \n 1. But, the error rate is so high. I also ignore a border of 10 in the image but also very high.\nIn a word, we have still some problems. My be we can do better with more time. :", 
            "title": "Stero Matching"
        }, 
        {
            "location": "/posts/old/stero-matching/#basic_task", 
            "text": "1. Implement a test program to evaluate the quality of your disparity maps. Your program should output the percentage of bad pixels in each of your disparity maps, where bad pixels are those whose errors are greater than one when comparing to ground truths (without multiplication).  (You can see the implementation in the code evaluate.cpp)\nCalculation Formula:\n(D(x,y) indicates a pixel in disparity map, G(x,y) indicates the corresponding pixel in GroundTruth, when G(x,y) = 0, the result is not defined)  This program is used to evaluate the quality of the disparity map later with inputs(disparitymap, groundtruth) and output(bad_pixel_percentage)\nThis is an example of its output:  \n[Rocks2]the percentage of bad pixels: 9.355803\n[Rocks2]the percentage of bad pixels: 8.801272\n[Wood2]the percentage of bad pixels: 18.744331\n[Wood2]the percentage of bad pixels: 17.688102  The higher bad_pixel_percentage the disparity map has, the worse the disparity map is. So the best way for stero matching should be the way that result in a small bad percentage.  2. Implement a local stereo matching algorithm using \u201cSum of Squared Difference (SSD)\u201d as matching cost. Compute both the left and the right disparity maps for all test cases, and visualize them by scaling their intensities by a factor of three. Save each disparity map to a file named testcasename disp1 SSD.png or testcasename disp5 SSD.png. Also write down the matching cost function and the quality of your disparity maps.\nMatching cost function:  (P,Q indicates the patch in Left and Right)  Experiment in patch size(5*5)\n(You can see the result image in the SSD folder)  Evaluating result: \n[Baby2]          86.623912\n[Baby2]          86.485832\n[Plastic]        95.403489\n[Plastic]        95.960003\n[Lampshade1]     90.939392\n[Lampshade1]     90.484364\n[Wood1]          84.996747\n[Wood1]          85.702289\n[Cloth2]         85.989014\n[Cloth2]         86.743649\n[Bowling2]       88.971997\n[Bowling2]       89.059850\n[Midd1]          90.292357\n[Midd1]          91.058413\n[Cloth1]         77.970056\n[Cloth1]         77.347851\n[Aloe]           82.254573\n[Aloe]           82.334958\n[Monopoly]       91.509975\n[Monopoly]       91.359893\n[Cloth3]         80.191847\n[Cloth3]         79.908614\n[Baby1]          79.717950\n[Baby1]          79.548459\n[Rocks1]         80.377742\n[Rocks1]         80.512560\n[Lampshade2]     91.407528\n[Lampshade2]     91.998627\n[Flowerpots]     93.149236\n[Flowerpots]     93.285917\n[Midd2]          92.732997\n[Midd2]          92.919513\n[Baby3]          84.986084\n[Baby3]          84.874142\n[Cloth4]         81.736471\n[Cloth4]         82.141564\n[Bowling1]       92.239938\n[Bowling1]       92.373453\n[Rocks2]         82.866137\n[Rocks2]         82.267727\n[Wood2]          85.840323\n[Wood2]          85.942839  3. Implement a local stereo matching algorithm using \u201cNormalized Cross Correlation (NCC)\u201d as matching cost. Visualize and save your estimated disparity maps to testcasename disp1 NCC.png or testcasename disp5 NCC.png. You are required to figure out the meaning of NCC by yourselves and write down the formula of the NCC matching cost. Also write down the quality of your disparity maps.  NCC explantion:   In signal processing, cross-correlation is a measure of similarity of two series as a function of the lag of one relative to the other. This is also known as a sliding dot product or sliding inner-product. It is commonly used for searching a long signal for a shorter, known feature. It has applications in pattern recognition, single particle analysis, electron tomography, averaging, cryptanalysis, and neurophysiology.   From wikipedia  As an example, consider two real valued functions f and g differing only by an unknown shift along the x-axis. One can use the cross-correlation to find how much g must be shifted along the x-axis to make it identical to f. The formula essentially slides the g function along the x-axis, calculating the integral of their product at each position. When the functions match, the value of (fstar g) is maximized. This is because when peaks (positive areas) are aligned, they make a large contribution to the integral. Similarly, when troughs (negative areas) align, they also make a positive contribution to the integral because the product of two negative numbers is positive.  The Formula of NCC:  (f hat and g hat indicates the mean value of the window, and sigma means the variance of the window)\nNotice that we are supposed to use max value according to the definition of NCC, i.e.\nEvaluating result:  \n[Baby2]          86.623912\n[Baby2]          86.485832\n[Plastic]        95.403489\n[Plastic]        95.960003\n[Lampshade1]     90.939392\n[Lampshade1]     90.484364\n[Wood1]          84.996747\n[Wood1]          85.702289\n[Cloth2]         85.989014\n[Cloth2]         86.743649\n[Bowling2]       88.971997\n[Bowling2]       89.059850\n[Midd1]          90.292357\n[Midd1]          91.058413\n[Cloth1]         77.970056\n[Cloth1]         77.347851\n[Aloe]           82.254573\n[Aloe]           82.334958\n[Monopoly]       91.509975\n[Monopoly]       91.359893\n[Cloth3]         80.191847\n[Cloth3]         79.908614\n[Baby1]          79.717950\n[Baby1]          79.548459\n[Rocks1]         80.377742\n[Rocks1]         80.512560\n[Lampshade2]     91.407528\n[Lampshade2]     91.998627\n[Flowerpots]     93.149236\n[Flowerpots]     93.285917\n[Midd2]          92.732997\n[Midd2]          92.919513\n[Baby3]          84.986084\n[Baby3]          84.874142\n[Cloth4]         81.736471\n[Cloth4]         82.141564\n[Bowling1]       92.239938\n[Bowling1]       92.373453\n[Rocks2]         82.866137\n[Rocks2]         82.267727\n[Wood2]          85.840323\n[Wood2]          85.942839  Add a small constant amount of intensity (e.g. 10) to all right eye images, and re-run the above two methods. Analyze how the intensity change affects the results (i.e. the quality) of the two methods. Explain in which ways that NCC is a better matching cost than SSD.  In my experiment, if add a small constant of intensity to the image, both NCC and SSD\u2019s disparity map will result in worse result. Specially, the SSD\u2019s disparity map will result even worse than NCC. SSD\u2019s disparity map loss its basic profile but NCC reserved.(see the result in CNCC and CSSD)  SSD add constant 10 result  \n[Baby2]          89.896604\n[Baby2]          85.593220\n[Plastic]        88.304262\n[Plastic]        86.158073\n[Lampshade1]     84.219462\n[Lampshade1]     73.606516\n[Wood1]          88.854456\n[Wood1]          91.019575\n[Cloth2]         94.607702\n[Cloth2]         91.513014\n[Bowling2]       84.290159\n[Bowling2]       79.769386\n[Midd1]          83.192677\n[Midd1]          72.415577\n[Cloth1]         97.745803\n[Cloth1]         95.213559\n[Aloe]           93.188176\n[Aloe]           94.152794\n[Monopoly]       96.091758\n[Monopoly]       90.593618\n[Cloth3]         94.215438\n[Cloth3]         89.472422\n[Baby1]          94.743799\n[Baby1]          91.389961\n[Rocks1]         94.054690\n[Rocks1]         90.436248\n[Lampshade2]     83.931090\n[Lampshade2]     72.315711\n[Flowerpots]     73.113365\n[Flowerpots]     70.875750\n[Midd2]          81.773686\n[Midd2]          71.585982\n[Baby3]          88.570103\n[Baby3]          86.137052\n[Cloth4]         95.223769\n[Cloth4]         92.755758\n[Bowling1]       83.129820\n[Bowling1]       76.843606\n[Rocks2]         95.115421\n[Rocks2]         92.391097\n[Wood2]          92.915191\n[Wood2]          92.140416  NCC add constant 10  \n[Baby2]          87.540082\n[Baby2]          20.133499\n[Plastic]        71.748131\n[Plastic]        25.738930\n[Lampshade1]     71.480557\n[Lampshade1]     16.047063\n[Wood1]          90.974037\n[Wood1]          22.077000\n[Cloth2]         94.617065\n[Cloth2]         20.848262\n[Bowling2]       79.796230\n[Bowling2]       31.101214\n[Midd1]          67.438535\n[Midd1]          29.808777\n[Cloth1]         85.013935\n[Cloth1]         11.200985\n[Aloe]           90.169631\n[Aloe]           18.427116\n[Monopoly]       92.618510\n[Monopoly]       37.651150\n[Cloth3]         93.256854\n[Cloth3]         41.552272\n[Baby1]          86.632419\n[Baby1]          15.481971\n[Rocks1]         93.103975\n[Rocks1]         44.372019\n[Lampshade2]     65.176955\n[Lampshade2]     12.695837\n[Flowerpots]     90.497866\n[Flowerpots]     47.730843\n[Midd2]          66.247104\n[Midd2]          30.431838\n[Baby3]          88.249119\n[Baby3]          33.716989\n[Cloth4]         91.010549\n[Cloth4]         15.795518\n[Bowling1]       61.824486\n[Bowling1]       17.068507\n[Rocks2]         93.700477\n[Rocks2]         37.656598\n[Wood2]          67.785648\n[Wood2]          11.588071   SSD method has a higher computational complexity compared to SAD algorithm as it involves numerous multiplication operations. Normally, two areas which consist of exactly the same pixel values would yield a score of zero. However, these measures will no longer yield the correct results in the case of radiometric distortion, i.e., where the pixel values in one image differ from those in the other image by a constant offset and/or gain factor.  NCC algorithm is robust to the linear variation in the brightness due to different illumination conditions to the cameras. But it can be seen that due to more complex calculations of division, multiplication and square root its computational time is more than SAD, SSD. Hence it could only be used for real time application only if we are able to develop more efficient algorithm to speed up matching process.   From Papper :Comparison of Various Stereo Vision Cost Aggregation Methods  In a word, NCC perform better than SSD when one image differ from those in the other image by a constant offset but cost more time.  5.Cost aggregation using Adaptive Support Weight (ASW) is a powerful local stereo approach. You are required to implement this approach described in the CVPR\u201905 paper \u201cLocally Adaptive Support-Weight Approach for Visual Correspondence Search\u201d (to save time you are recommended to read mainly sec. 2.6 and sec. 3 of the paper). Visualize and save your estimated disparity maps to testcasename disp1 ASW.png or testcasename disp5 ASW.png. Also write down the quality of your disparity maps. Note that this algorithm is in general a bit slow.  \n[Baby2]          20.133499\n[Plastic]        25.738930\n[Lampshade1]     16.047063\n[Wood1]          22.077000\n[Cloth2]         20.848262\n[Bowling2]       31.101214\n[Midd1]          29.808777\n[Cloth1]         11.200985\n[Aloe]           18.427116\n[Monopoly]       37.651150\n[Cloth3]         41.552272\n[Baby1]          15.481971\n[Rocks1]         44.372019\n[Lampshade2]     12.695837\n[Flowerpots]     47.730843\n[Midd2]          30.431838\n[Baby3]          33.716989\n[Cloth4]         15.795518\n[Bowling1]       17.068507\n[Rocks2]         37.656598\n[Wood2]          11.588071  6.6. Explain the idea of the ASW paper in question 5. Also explain in which ways ASW is better than NCC. Why?  The core idea of ASW(Adaptive Support-Weight Approach) is to give a weight value to each pixel in the matching window, which is based on the color difference and the distance between them and the center point of the window. In essence, an approximate image segmentation is completed.  According to the like between location and color difference of window in the original pixel cost Fu to different weighting, and to perform polymerization. Many studies show that the algorithm is all local stereo matching effect is the best, and the result of matching algorithm and the optimization results compared. But the algorithm of adaptive weighted algorithm is relatively slow, and the complexity of the algorithm is relatively high, and the weight of the storage space is very large.  ASW is better than NCC, but NCC is very slow. In the case that the images are colorful(3 channels), ASW is good. But for gray images, ASW are not necessary because color images do not have the definition of color difference(cq).", 
            "title": "Basic Task"
        }, 
        {
            "location": "/posts/old/stero-matching/#implementation_details", 
            "text": "Code sturcture: \nbat.py #the program to process all the images\nstero0.cpp #the program to process SSD and NCC\nstero1.cpp #the program to process CNCC and CSSD\nstero2.cpp #the program to process ASW  For basic SSD and NCC and also ASW, the main algorithm is as follow:   Read the image into memory  Traversal the image, process each point and calculate d for the destination image.\n  2.1. for each of the point, calculate a patch from the left(right) image and then travel from 0 - dmax and calculate another patch from the right(left) image.\n  2.2 use the setting patch to calculate match cost and then choose the best match cost to be arg d.  Save the image   For SSD:\nThe matching cost image is calculate by the following fomula:  \\[\nC(x,y)= \\sum_{i,j \\in N}(N_p(i,j)-N_q(i,j))^2\n\\] i.e. sum the absolute square value of the corresponding patches.    for(int i = 0; i   P.rows; i++) {\n    for(int j = 0; j   P.cols; j++) {\n      int difference = P.at int (i,j) - Q.at int (i,j);\n      sum += difference * difference;\n    }\n  }  For NCC:  \\[\n  D(p,q) = \\frac{1}{n} \\cdot \\sum_{i,j \\in N_{pq}} \\frac{(f_p(i,j) - \\hat f_p) \\cdot (g_q(i,j) - \\hat g_q)}{ \\sigma f_p \\sigma g_p}\n\\] For ASW:(it will be more diffcult)\nIn the paper, we can conclude the several formulas:\nMatching Value:  \\[\nd_p = arg_{d \\in } \\{d_{min}...d_{max}\\}\n\\] Matching Cost:  \\[\nE(p,pd) = \\frac{\\sum_{q \\in W}w(p,q)w(p_d,q_d)e_0(q,qd)}{\\sum_{q \\in W}w(p,q)w(p_d,q_d)}\n\\]     double Eppd(const Mat   P, const Mat   Q, int d) {\n      Vec3b p = P.at Vec3b (P.rows / 2, P.cols / 2);\n      Vec3b pd = Q.at Vec3b (Q.rows / 2, Q.cols / 2);\n      double sum1 = 0;\n      double sum2 = 0;\n      for(int i = 0; i   P.rows; i++) {\n        for(int j = 0; j   P.cols; j++) {\n          sum1 += wpq(p, P.at Vec3b (i,j), d) * wpq(pd, Q.at Vec3b (i,j), d) * e0(P.at Vec3b (i,j), Q.at Vec3b (i,j));\n          sum2 += wpq(p, P.at Vec3b (i,j), d) * wpq(pd, Q.at Vec3b (i,j), d);\n        }\n      }\n      return sum2 != 0 ? sum1 / sum2 : 0;\n    }  Adptive Weight:  \\[\nw(p,q) = k \\cdot exp(-(\\frac{\\Delta c_{pq}}{\\gamma c} + \\frac{\\Delta gpq}{\\gamma p}))\n\\]     double wpq(const Vec3b   p, const Vec3b   q, int d) {\n      double k = 100;\n      double gamac = 40;\n      double gamap = 7;\n      return k*exp(-(deltaCpq(p,q) / gamac + d / gamap));\n    }  Error modification:      double e0(const Vec3b   q, const Vec3b   qd) {\n      return abs(q[0] - qd[0]) + abs(q[1] - qd[1]) + abs(q[2] - qd[2]);\n    }  Color difference:\nRGB calculation:  \\[\nC_{pq} = \\sqrt{\\omega_r(p_R-q_R)^2+\\omega_g(p_G-q_G)^2+\\omega_b(p_B-q_B)^2}\n\\] often with( \\( \\((\\omega_r,\\omega_g,\\omega_b)=(3,4,2)\\) \\) )  Lab calculation:  \\[\nC_{pq} = \\sqrt{(L_1^*-L_2^*)^2+(a_1-a2)^2+(c_1-c_2)^2}\n\\]   // Lab space color difference calculation\n  double deltaCpq(const Vec3b   p, const Vec3b   q) {\n    double pXYZ[3] = {0};\n    double qXYZ[3] = {0};\n    double pLab[3] = {0};\n    double qLab[3] = {0};\n\n    pXYZ[0] = p[0] * 0.4124 + p[1] * 0.3576 + p[2] * 0.1805;\n    pXYZ[1] = p[0] * 0.2126 + p[1] * 0.7152 + p[2] * 0.0722;\n    pXYZ[2] = p[0] * 0.0193 + p[1] * 0.1192 + p[2] * 0.9505;\n\n    qXYZ[0] = q[0] * 0.4124 + q[1] * 0.3576 + q[2] * 0.1805;\n    qXYZ[1] = q[0] * 0.2126 + q[1] * 0.7152 + q[2] * 0.0722;\n    qXYZ[2] = q[0] * 0.0193 + q[1] * 0.1192 + q[2] * 0.9505;\n\n    const double Xn = 95.047;\n    const double Yn = 100.0;\n    const double Zn = 108.883;\n\n    qLab[0] = 116 * f(qXYZ[1] / Yn) - 16;\n    qLab[1] = 500 * (f(qXYZ[0]) / Xn - (f(qXYZ[1]) / Yn));\n    qLab[2] = 200 * (f(qXYZ[1]) / Yn - (f(qXYZ[2]) / Zn));\n\n    return sqrt((pLab[0] - qLab[0]) * (pLab[0] - qLab[0]) + (pLab[1] - qLab[1]) * (pLab[1] - qLab[1]) + (pLab[2] - qLab[2]) * (pLab[2] - qLab[2]));\n  }\n\n  //RGB space color difference calculation\n   double deltaCpq(const Vec3b   p, const Vec3b   q) {\n     const int wr = 3;\n     const int wg = 4;\n     const int wb = 2;\n     return sqrt(wr*(p[0] - q[0]) * (p[0] - q[0]) + wg*(p[1] - q[1]) * (p[1] - q[1]) + wb*(p[2] - q[2]) * (p[2] - q[2]));\n   }", 
            "title": "implementation details"
        }, 
        {
            "location": "/posts/old/stero-matching/#discussions_of_the_disadvantages_of_the_paper", 
            "text": "", 
            "title": "discussions of the disadvantages of the paper"
        }, 
        {
            "location": "/posts/old/stero-matching/#advantages", 
            "text": "The matching method can make a better result than both SSD and NCC. It can use a detail method to define the matching cost in a good way. Using the definition of color difference and the \u201cadptive weight\u201d is truly a good approach.  It\u2019s a landmark works in local stereo matching algorithm(maybe but i think it\u2019s not good, maybe it\u2019s my problem). From CVPR and PAMI you can see its component.  AdaptiveWeight method has been proposed, formally declared in the matching accuracy, the adaptive Adaptive out algorithm (Window)(This method is unscientific at all i think). And later became popular.", 
            "title": "Advantages:"
        }, 
        {
            "location": "/posts/old/stero-matching/#disadvantage", 
            "text": "Too many formulas : . They are supposed to give an example program but didn\u2019t. : \nThe algorithm is so slow that i can not stand it, and my computer can not afford a argument of window size of 33. :  Locally approach can not do as well as global one. But there is so many projects for me to finish, i do not have time to do it. :", 
            "title": "Disadvantage:"
        }, 
        {
            "location": "/posts/old/stero-matching/#conclusion", 
            "text": "This project is in fact very boring and seems that it\u2019s irrelevant to what we have learnt. I have many unsolved questions:   Why my program is so slow(not a bit slow)? How can I improve it?\nI used python as program language for the last 4 homework project. But this time i use c++ for programming, I think it should be quicker because c++ is a basic high level language and is known to be 10 times faster than python. But thep processing speed is stiil very slow.  Why my picture is so ugly compare to the ground truth?\nMany of my fellows also have this problem that the output image is very ugly compare to the groud truth, especially for the edge of the image. We check it for several times and discuss it for a better way but failed. We try to ask TA for help, but no responds : . We also ask professor Chao for help but she tells us to ask TA for help.  How to calculate the error pixels since the error rate in the paper is less than 5% when window size is set to 5, but my error rate is greater than 70% for average?\nWe should calculate absolute error in the paper that error   1. But, the error rate is so high. I also ignore a border of 10 in the image but also very high.\nIn a word, we have still some problems. My be we can do better with more time. :", 
            "title": "Conclusion:"
        }, 
        {
            "location": "/posts/old/YOJ/", 
            "text": "Inspiration\n\n\nOne day, when I am trying my best to solve some problems in sicily(a online judge system of SYSU), I wonder how it works to judge my sumit code to runtime error. And just a few days before, I am helping my classmate to debug, and I wrote some auto-test(a small random test program). And also, I am learning some useful skills in course \"Web 2.0 Programming.\" So, I decided to build a online judge system by myself using the knowledge I have learnt.\n\n\nYOJ Targets\n\n\nHow to design a database?\n\n\nHow to analysis a system?\n\n\nHow to use python?\n\n\nHow to use Web technology?\n\n\nTargets\n\n\nThere are many online judge system in the internet. Some of them are for programming language learning, such as python and c. There are a lot of questions posted on the system and people can upload ther solution to the sytem to judge whether it's right or not. Most ACMer have the experience of these systems.\n\n\nWe are going to build the system step by step.\n\n\nReference\n\n\nhttp://www.cnblogs.com/ma6174/archive/2013/05/12/3074034.html\n\n\noops: I have consulted a lot of information in the internet and this is a system that most like what in my mind. I try to download the source code of the author but fail to run it. However, the framework of the system design is really good.\n\n\n\n\n\n\nYOJ What to do first?\n\n\nThe system we are going to design will a front-side for the users to browse. In addition to it, the \"judgers\" will busily run in the backstage. So the most improtant thing to enable the two side to communicate is the database and it's the core part of this project.\n\n\nDatabase:\n\n\nThe most popular databse nowadays are Mongodb, Postgresql and MySQL and so on.\n\n\nMongodb is a non relational database system. We have used it in Project Activitee. We are not going to use it. Non-Sql is very good to use. But if we use this system, the data module will be very complex. For example:\n\n\nuser: {_id, username, status:[{_id, problem, statu....}]}\n\n\n\n\nIt's very complex!\n\n\nSome one will say we can simplify the object schema. So why don't we use a simple and operational SQL system. So we will use MySQL, because I am familiar with it.\n\n\n\n\nYOJ requirements:\n\n\n\n\n\n\nUsers. There always should be a user management system in each system. We need simple information form the user when executing register.\n\n\n\n\n\n\nQuestions. OJ system need some questions for user to solve. We need to decribe the quesiton and then give the standar answer(input and output of a program) to test whether the user have solved the quesion or not.\n\n\n\n\n\n\nQuestion Submiting. User can submit the question. And judgers will judge the questions.\n\n\n\n\n\n\nWe will have the following database schema:\n\n\nUSER(uid, authority, username, password, email, register_time)\n\nSTATUS(sid, pid, uid, submit_time, code, statu, runtime, runmem, language)\n\nQUESTIONS(pid, uid, title, decription, language, input, output, code, timelimit, memlimit, accepted, submit)\n\n\n\n\nFramwork\n\n\nDatabse: Mysql libmysql - 5.5.44\n\n\nWeb Framework: Python Tornado 4.1\n\n\nBackstage: Python + loruner(a project on github)\n\n\nOptional: Nginx Reverse proxy\n\n\nFront End\n\n\nRequirements\n\n\n\n\n\n\nLogin and Register: Users can login in the system, the login handler should verify the username and password. Users can also use the register to creat a new account and complete a email verification.\n\n\n\n\n\n\nProfile Management: Users can see personal data(accepted questions or etc) here and can modify their profile.\n\n\n\n\n\n\nQuestion List: We can see all the questions in a list.\n\n\n\n\n\n\nQuestion Detail: So the question detail, including memory limit, time limit and so on.\n\n\n\n\n\n\nQuestion Submit: Submit the question to the sytem to judge.\n\n\n\n\n\n\nQuestion Result: Show the result of the judge.\n\n\n\n\n\n\nBackstage\n\n\n\n\nProducer and Consumers Model\nMulti thread programming:The thread is an entity in the process, and is the basic unit of the system. A process can have multiple threads, a thread must have a parent process, thread itself does not have system resources, only to run some of the data structure, but it can be shared with other threads belonging to a process to have all the resources, a thread can be created and revoked another thread, the same process can be executed between multiple threads.\n\n\n\n\nProducer: Fetch submits from the database to the Server Memory Queue, there are only one Producer.\n\n\nConsumers: Comsumers are judgers or in other word, workers, that get a question submit from the queue to judge. And muti consumers can work in the same time.\n\n\n\n\nHow to judge a submit\nFirst, we get the source code from the database, and then save the source code into a local file. Next, we check whether the code is dangerous(contain some restrict functions like IO/System). And then, we will compile the code using the corresponding compiler. Next, run the the programm according to the time limit and memory limit and save the ouput. Last contrast the result with the standar answer.\nThere are serveral status, 'accepted','run time error','wrong answer','compile error','time limit','memory limit','presentation error','output limit','system error','waiting','compulsory killed','restrict function'.\n\n\n\n\n\n\naccepted\n: The answer is passed.\n\n\nrun time error\n: Critical error like illegal memory access.\n\n\ncompile error\n: Syntax error.\n\n\ntime limit\n: Program running time is too long.\n\n\nmemory limit\n: Using too much memory.\n\n\npresentation error\n: the format of the answer is incorrect.\n\n\noutput limit\n: the ouput is too long.\n\n\nsystem error\n: the system has some problem.\n\n\ncompulsory killed\n: the submit is killed by the Administrator.\n\n\nrestrict function\n: Some restict functions are used such as IO/System.\n\n\nYou are more than welcome to fork my project and add some functions. And you can use our open source project to run.", 
            "title": "YOJ"
        }, 
        {
            "location": "/posts/old/YOJ/#inspiration", 
            "text": "One day, when I am trying my best to solve some problems in sicily(a online judge system of SYSU), I wonder how it works to judge my sumit code to runtime error. And just a few days before, I am helping my classmate to debug, and I wrote some auto-test(a small random test program). And also, I am learning some useful skills in course \"Web 2.0 Programming.\" So, I decided to build a online judge system by myself using the knowledge I have learnt.", 
            "title": "Inspiration"
        }, 
        {
            "location": "/posts/old/YOJ/#yoj_targets", 
            "text": "How to design a database?  How to analysis a system?  How to use python?  How to use Web technology?  Targets  There are many online judge system in the internet. Some of them are for programming language learning, such as python and c. There are a lot of questions posted on the system and people can upload ther solution to the sytem to judge whether it's right or not. Most ACMer have the experience of these systems.  We are going to build the system step by step.", 
            "title": "YOJ Targets"
        }, 
        {
            "location": "/posts/old/YOJ/#reference", 
            "text": "http://www.cnblogs.com/ma6174/archive/2013/05/12/3074034.html  oops: I have consulted a lot of information in the internet and this is a system that most like what in my mind. I try to download the source code of the author but fail to run it. However, the framework of the system design is really good.", 
            "title": "Reference"
        }, 
        {
            "location": "/posts/old/YOJ/#yoj_what_to_do_first", 
            "text": "The system we are going to design will a front-side for the users to browse. In addition to it, the \"judgers\" will busily run in the backstage. So the most improtant thing to enable the two side to communicate is the database and it's the core part of this project.  Database:  The most popular databse nowadays are Mongodb, Postgresql and MySQL and so on.  Mongodb is a non relational database system. We have used it in Project Activitee. We are not going to use it. Non-Sql is very good to use. But if we use this system, the data module will be very complex. For example:  user: {_id, username, status:[{_id, problem, statu....}]}  It's very complex!  Some one will say we can simplify the object schema. So why don't we use a simple and operational SQL system. So we will use MySQL, because I am familiar with it.", 
            "title": "YOJ What to do first?"
        }, 
        {
            "location": "/posts/old/YOJ/#yoj_requirements", 
            "text": "Users. There always should be a user management system in each system. We need simple information form the user when executing register.    Questions. OJ system need some questions for user to solve. We need to decribe the quesiton and then give the standar answer(input and output of a program) to test whether the user have solved the quesion or not.    Question Submiting. User can submit the question. And judgers will judge the questions.    We will have the following database schema:  USER(uid, authority, username, password, email, register_time)\n\nSTATUS(sid, pid, uid, submit_time, code, statu, runtime, runmem, language)\n\nQUESTIONS(pid, uid, title, decription, language, input, output, code, timelimit, memlimit, accepted, submit)", 
            "title": "YOJ requirements:"
        }, 
        {
            "location": "/posts/old/YOJ/#framwork", 
            "text": "Databse: Mysql libmysql - 5.5.44  Web Framework: Python Tornado 4.1  Backstage: Python + loruner(a project on github)  Optional: Nginx Reverse proxy  Front End", 
            "title": "Framwork"
        }, 
        {
            "location": "/posts/old/YOJ/#requirements", 
            "text": "Login and Register: Users can login in the system, the login handler should verify the username and password. Users can also use the register to creat a new account and complete a email verification.    Profile Management: Users can see personal data(accepted questions or etc) here and can modify their profile.    Question List: We can see all the questions in a list.    Question Detail: So the question detail, including memory limit, time limit and so on.    Question Submit: Submit the question to the sytem to judge.    Question Result: Show the result of the judge.", 
            "title": "Requirements"
        }, 
        {
            "location": "/posts/old/YOJ/#backstage", 
            "text": "Producer and Consumers Model\nMulti thread programming:The thread is an entity in the process, and is the basic unit of the system. A process can have multiple threads, a thread must have a parent process, thread itself does not have system resources, only to run some of the data structure, but it can be shared with other threads belonging to a process to have all the resources, a thread can be created and revoked another thread, the same process can be executed between multiple threads.   Producer: Fetch submits from the database to the Server Memory Queue, there are only one Producer.  Consumers: Comsumers are judgers or in other word, workers, that get a question submit from the queue to judge. And muti consumers can work in the same time.   How to judge a submit\nFirst, we get the source code from the database, and then save the source code into a local file. Next, we check whether the code is dangerous(contain some restrict functions like IO/System). And then, we will compile the code using the corresponding compiler. Next, run the the programm according to the time limit and memory limit and save the ouput. Last contrast the result with the standar answer.\nThere are serveral status, 'accepted','run time error','wrong answer','compile error','time limit','memory limit','presentation error','output limit','system error','waiting','compulsory killed','restrict function'.    accepted : The answer is passed.  run time error : Critical error like illegal memory access.  compile error : Syntax error.  time limit : Program running time is too long.  memory limit : Using too much memory.  presentation error : the format of the answer is incorrect.  output limit : the ouput is too long.  system error : the system has some problem.  compulsory killed : the submit is killed by the Administrator.  restrict function : Some restict functions are used such as IO/System.  You are more than welcome to fork my project and add some functions. And you can use our open source project to run.", 
            "title": "Backstage"
        }, 
        {
            "location": "/posts/old/simple-sinew/", 
            "text": "Overview\n\n\nWe are going to do a project base on a dissertation named \"Sinew\" for a deeper understanding of mordern database system.\n\n\nlink of the dissertation: \nsinew\n\n\n\n\nTeam Members\n\n\nLingli Wu\n\n\nHang Xu\n\n\nLi Xu\n\n\nJaiqi Ye\n\n\nTingting Zhang\n\n\n\n\nDescription\n\n\nDestination\n\n\nSimplely complete the two function modules Catalog and Serializer.\n\n\nRequirement\n\n\nProgramming language\n: C/C++ only and when using c++, STL is not allowed.\n\n\nSystem\n: Only can use Linux with gcc/g++/gdb and use makefile for batch compilation.\n\n\nProblem\n\n\n\n\ncomplete command \"insert file\" and Json date format is used for the original data file.\n\n\ncomplete command \"checkout catalog\" which will print all the information in the catalog, here we simplify.\n\n\ncomplete command \"find A = B\" which will print the found result in the format of json. If there is no result, print None.\n\n\n\n\nExperimental Data\n\n\nWe use nobench to generate the test data we need.\n\n\nImplementation requirements\n\n\n\n\nfor each json data record, translate it into the format describing in the dissertation \"sinew\" as the following:\n\n\n\n\n\n\nnotice that you should store all of the data in binary format.\n\n\n\n\n\n\nyou should use \"fwrite/fread\" in C to read or write data. Every time you are going to have a file operation, you need to check the buffer space and you can only have the operation when it reach its full size, 8KB. No padding is expected in the data file.\n\n\n\n\n\n\nall int type data is required to be 32 bit.\n\n\n\n\n\n\nOptimization\n\n\nbuild a file index to reduce the time cost for querying.you can also use binary chop algorithm to speed up\n\n\n\n\nSolution\n\n\nTools\n\n\n\n\nProgramming language: C (pure C)\n\n\nRAM: 4GB\n\n\nOS: Ubuntu Kylin 14.10 amd64\n\n\nCompile Tool: gcc (Ubuntu 4.9.2-10ubuntu13) 4.9.2 \n Makefile\n\n\nMain Test Script\uff1aShell\n\n\nTest data\uff1aNobench data generator\n\n\nProject Address\uff1a\ngit\n\n\nProject Train of Thoughttrain of Thought\n\n\n\n\nThe whole experiment is divided into four parts, in the main function of the use of three main functions:\n\n\n\n\nCatalog\n\n\nAccording to the paper's tips to achieve the requirements of the Catalog. Corresponding to achieve Catalog update, find, output\n\n\nInsert\n\n\nTo achieve the serialization of data stored in the file, and call the CATALOG function update. Analysis (no use of third party tools, all of their own) to implement Json data, and the serialization of the data, and in a binary manner.\n\n\nFind\n\n\nTo achieve the search of data, the establishment of file index, the use of two points to find (aid in sequential storage), as well as the anti serialization (the data will be re - re Json data, and then output)\n\n\nDesign Process\n\n\n1. Catalog\n\n\nThe data structure of the Catalog unit is as follow:\n\n\n\n\nWe use a method \u201clist and array\u201d to store it. The list is extendable and we can insert unit easily. Once we finish inserting, we will build an array to store all addresses of the array to form a fast visit index for the list.\n\n\n\n\nAfter this data structure is established, we can use the catalog index to search the catalog data, we provide two functions:\n\n\nFindByKeyName: the corresponding data element of catalog is searched by the key name and the type of key.\n\n\nFindById: Use ids to find the corresponding data record in the catalog index.\n\n\n\n\nIn file (disk), catalog is stored in a format text:\n\n\n(attrid, keyname, count, keytype)\n\n\n\n\n2.Json Analysis\n\n\nJson stores data format as a string array. We define the structure, including the start pointer, end pointer, JSON data type (used to determine the read of the string as the key or value) and data type (used to judge the value of the type, including: int, bool, string, array, nested and other types). Using pointers to read JSON key or value, start pointer and the end pointer representing its starting position in the string array and end position, first read for the key and the second read the value, and so on (as shown in the figure). Judgment value of the first character in a text string, if the character is digital, the value of data type is int; if the character \"t\" or \"F\", the string bool type; if the quotation marks \",\" \", the string is the string; if the symbol\" [\", the string is an array type; if the symbol\" {\", the string as the nested; otherwise for unknown type.\n\n\n\n\n\n\n3.Serialize\n\n\nWe define the following functions:\n\n\n\n\nTo JSON data serialization, we must first implement the main function in the test_JsonSerializer function. The format of a tuple is as follows:\n\n\n\n\nWhen we have a look at the JSON data, we find that the data are int32, bool, array, and nested objects. Take the following JSON data as an example to illustrate the idea of serialization:\n\n\n{\"dyn2\": 50378, \u201cdyn2\u201d:\"ABC\", \"sparse_787\": \"GBRDCMBQGE======\"}\n\n\nAt first, each tuple table is used to record the position of the whole table in the entire table, as shown in the above table.\n\n\nAnd on behalf of the table in the #attributes_num is attribute in each tuple is the number and implement to example is each JSON data in key value pairs of a number; aid0~aid of (n-1) corresponding to the is each a key; and offset that is, from the tuple start to read the key value pairs according to the offset. The JSON data as an example, serialization, the tuple first position stored tuple ID, the second position stored key on the number. The key on the number 3, aid0~aid2 accounted for to the three to five positions; and because each area corresponding to an offset read the corresponding data, so offs0~offs2 also accounted for three position; and the ninth position is used to store all the data for the total length of len; then began to read data, so offs0 equal to 9. In this example, the first value is int, which takes 4 bytes, so offs1=9+4=13; similarly, the bool type data is treated as a int type; while the second value is a string, each character is recorded in the corresponding ASCII code, corresponding to a byte; so offs2=13+3=16.\n\n\nAnd so on, and when we encounter an array or object type, compared to simply put them as a string, we have a different approach. When we encounter these two kinds of data types, we will build a new record, and then use the recursive method to resolve it. For nested object type, the tuple_id data from the JSON data in the whole table is returned as the data stored in the main table of the table, and we will put the number of attributes to -1, to distinguish the other value types, to facilitate the identification of the reverse sequence.\n\n\nWe have the following data structure:\n\n\n\n\n4. Find\n\n\nFirst, we establish the index of the entire file, the structure of the file index is shown in the following diagram:\n\n\n\n\nFor each query, we first match the attribute, now with the string form of attribute in the catolog to find the corresponding attrid, with the attr_id traversal file records in a tuple. In traversing each of the time, use two points to find, find the file index in the array of attr_ids, find the record to the result, can not find it.\nFinally get a result list, which records the results of the search Attrid.\n\n\nThen match the value and match the specific values in the corresponding file record. Before the comparison, the record is first recorded, and then the two string matching operation. If you do not match then the tag match is false, and the match is found.\n\n\nThen, for each record in the match, if result is true, we will be materialized, and output.\n\n\nThe process of physical and chemical process is to find the corresponding data from the file index, and then use Key_type to determine the data type:\n\n\nFor the int and bool types, read directly from the file record in the int\n\n\nFor string, offset, a data record is read and then, two offset subtraction, to the length of the string. Read these characters.\n\n\nFor nested array type, read ID array, and then find the record in the entire file record array, call the array function of the, to return a result string.\n\n\nFor nested JSON types, read the ID JSON, and then recursively call this JSON's physical function, to return to the JSON string of the sub object\n\n\nFinally get the original JSON record of the string, the output of.\n\n\n\n\n5.Buffer\n\n\n\n\nTest\n\n\nTest Plan\n\n\nTest is divided into two parts, the main project of the test and the function of each module function of small unit logic test.\n\n\nThe main project tests include:\n\n\n\n\nthe main project import test import (insert)\n\n\nCHECK CATALOG test (catalog checkout) of the main project\n\n\nthe main item search and find time test (find)\n\n\n\n\n\n\nProject Test\n\n\nThe Import of Main Project using 100K data\n\n\n\n\n\n\nCatalog Checkout\n\n\n\n\n\n\nCatalog size : 1013\n\n\nFind Test\n\n\nScript:\n\n\n\n\nResult:\n\n\n\n\nConclusion\n\n\nWe have learn a lot form this project, especially at C programming, organizing such a project. Tanks for the hardwork of our team. And you can go to github to download the source code for detail. If you, reader have any question, you can email me or just leave your message at message wall in this website.", 
            "title": "Simple Sinew"
        }, 
        {
            "location": "/posts/old/simple-sinew/#overview", 
            "text": "We are going to do a project base on a dissertation named \"Sinew\" for a deeper understanding of mordern database system.  link of the dissertation:  sinew", 
            "title": "Overview"
        }, 
        {
            "location": "/posts/old/simple-sinew/#team_members", 
            "text": "Lingli Wu  Hang Xu  Li Xu  Jaiqi Ye  Tingting Zhang", 
            "title": "Team Members"
        }, 
        {
            "location": "/posts/old/simple-sinew/#description", 
            "text": "", 
            "title": "Description"
        }, 
        {
            "location": "/posts/old/simple-sinew/#destination", 
            "text": "Simplely complete the two function modules Catalog and Serializer.", 
            "title": "Destination"
        }, 
        {
            "location": "/posts/old/simple-sinew/#requirement", 
            "text": "Programming language : C/C++ only and when using c++, STL is not allowed.  System : Only can use Linux with gcc/g++/gdb and use makefile for batch compilation.", 
            "title": "Requirement"
        }, 
        {
            "location": "/posts/old/simple-sinew/#problem", 
            "text": "complete command \"insert file\" and Json date format is used for the original data file.  complete command \"checkout catalog\" which will print all the information in the catalog, here we simplify.  complete command \"find A = B\" which will print the found result in the format of json. If there is no result, print None.", 
            "title": "Problem"
        }, 
        {
            "location": "/posts/old/simple-sinew/#experimental_data", 
            "text": "We use nobench to generate the test data we need.", 
            "title": "Experimental Data"
        }, 
        {
            "location": "/posts/old/simple-sinew/#implementation_requirements", 
            "text": "for each json data record, translate it into the format describing in the dissertation \"sinew\" as the following:    notice that you should store all of the data in binary format.    you should use \"fwrite/fread\" in C to read or write data. Every time you are going to have a file operation, you need to check the buffer space and you can only have the operation when it reach its full size, 8KB. No padding is expected in the data file.    all int type data is required to be 32 bit.", 
            "title": "Implementation requirements"
        }, 
        {
            "location": "/posts/old/simple-sinew/#optimization", 
            "text": "build a file index to reduce the time cost for querying.you can also use binary chop algorithm to speed up", 
            "title": "Optimization"
        }, 
        {
            "location": "/posts/old/simple-sinew/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/posts/old/simple-sinew/#tools", 
            "text": "Programming language: C (pure C)  RAM: 4GB  OS: Ubuntu Kylin 14.10 amd64  Compile Tool: gcc (Ubuntu 4.9.2-10ubuntu13) 4.9.2   Makefile  Main Test Script\uff1aShell  Test data\uff1aNobench data generator  Project Address\uff1a git  Project Train of Thoughttrain of Thought   The whole experiment is divided into four parts, in the main function of the use of three main functions:", 
            "title": "Tools"
        }, 
        {
            "location": "/posts/old/simple-sinew/#catalog", 
            "text": "According to the paper's tips to achieve the requirements of the Catalog. Corresponding to achieve Catalog update, find, output", 
            "title": "Catalog"
        }, 
        {
            "location": "/posts/old/simple-sinew/#insert", 
            "text": "To achieve the serialization of data stored in the file, and call the CATALOG function update. Analysis (no use of third party tools, all of their own) to implement Json data, and the serialization of the data, and in a binary manner.", 
            "title": "Insert"
        }, 
        {
            "location": "/posts/old/simple-sinew/#find", 
            "text": "To achieve the search of data, the establishment of file index, the use of two points to find (aid in sequential storage), as well as the anti serialization (the data will be re - re Json data, and then output)", 
            "title": "Find"
        }, 
        {
            "location": "/posts/old/simple-sinew/#design_process", 
            "text": "", 
            "title": "Design Process"
        }, 
        {
            "location": "/posts/old/simple-sinew/#1_catalog", 
            "text": "The data structure of the Catalog unit is as follow:   We use a method \u201clist and array\u201d to store it. The list is extendable and we can insert unit easily. Once we finish inserting, we will build an array to store all addresses of the array to form a fast visit index for the list.   After this data structure is established, we can use the catalog index to search the catalog data, we provide two functions:  FindByKeyName: the corresponding data element of catalog is searched by the key name and the type of key.  FindById: Use ids to find the corresponding data record in the catalog index.   In file (disk), catalog is stored in a format text:  (attrid, keyname, count, keytype)", 
            "title": "1. Catalog"
        }, 
        {
            "location": "/posts/old/simple-sinew/#2json_analysis", 
            "text": "Json stores data format as a string array. We define the structure, including the start pointer, end pointer, JSON data type (used to determine the read of the string as the key or value) and data type (used to judge the value of the type, including: int, bool, string, array, nested and other types). Using pointers to read JSON key or value, start pointer and the end pointer representing its starting position in the string array and end position, first read for the key and the second read the value, and so on (as shown in the figure). Judgment value of the first character in a text string, if the character is digital, the value of data type is int; if the character \"t\" or \"F\", the string bool type; if the quotation marks \",\" \", the string is the string; if the symbol\" [\", the string is an array type; if the symbol\" {\", the string as the nested; otherwise for unknown type.", 
            "title": "2.Json Analysis"
        }, 
        {
            "location": "/posts/old/simple-sinew/#3serialize", 
            "text": "We define the following functions:   To JSON data serialization, we must first implement the main function in the test_JsonSerializer function. The format of a tuple is as follows:   When we have a look at the JSON data, we find that the data are int32, bool, array, and nested objects. Take the following JSON data as an example to illustrate the idea of serialization:  {\"dyn2\": 50378, \u201cdyn2\u201d:\"ABC\", \"sparse_787\": \"GBRDCMBQGE======\"}  At first, each tuple table is used to record the position of the whole table in the entire table, as shown in the above table.  And on behalf of the table in the #attributes_num is attribute in each tuple is the number and implement to example is each JSON data in key value pairs of a number; aid0~aid of (n-1) corresponding to the is each a key; and offset that is, from the tuple start to read the key value pairs according to the offset. The JSON data as an example, serialization, the tuple first position stored tuple ID, the second position stored key on the number. The key on the number 3, aid0~aid2 accounted for to the three to five positions; and because each area corresponding to an offset read the corresponding data, so offs0~offs2 also accounted for three position; and the ninth position is used to store all the data for the total length of len; then began to read data, so offs0 equal to 9. In this example, the first value is int, which takes 4 bytes, so offs1=9+4=13; similarly, the bool type data is treated as a int type; while the second value is a string, each character is recorded in the corresponding ASCII code, corresponding to a byte; so offs2=13+3=16.  And so on, and when we encounter an array or object type, compared to simply put them as a string, we have a different approach. When we encounter these two kinds of data types, we will build a new record, and then use the recursive method to resolve it. For nested object type, the tuple_id data from the JSON data in the whole table is returned as the data stored in the main table of the table, and we will put the number of attributes to -1, to distinguish the other value types, to facilitate the identification of the reverse sequence.  We have the following data structure:", 
            "title": "3.Serialize"
        }, 
        {
            "location": "/posts/old/simple-sinew/#4_find", 
            "text": "First, we establish the index of the entire file, the structure of the file index is shown in the following diagram:   For each query, we first match the attribute, now with the string form of attribute in the catolog to find the corresponding attrid, with the attr_id traversal file records in a tuple. In traversing each of the time, use two points to find, find the file index in the array of attr_ids, find the record to the result, can not find it.\nFinally get a result list, which records the results of the search Attrid.  Then match the value and match the specific values in the corresponding file record. Before the comparison, the record is first recorded, and then the two string matching operation. If you do not match then the tag match is false, and the match is found.  Then, for each record in the match, if result is true, we will be materialized, and output.  The process of physical and chemical process is to find the corresponding data from the file index, and then use Key_type to determine the data type:  For the int and bool types, read directly from the file record in the int  For string, offset, a data record is read and then, two offset subtraction, to the length of the string. Read these characters.  For nested array type, read ID array, and then find the record in the entire file record array, call the array function of the, to return a result string.  For nested JSON types, read the ID JSON, and then recursively call this JSON's physical function, to return to the JSON string of the sub object  Finally get the original JSON record of the string, the output of.", 
            "title": "4. Find"
        }, 
        {
            "location": "/posts/old/simple-sinew/#5buffer", 
            "text": "", 
            "title": "5.Buffer"
        }, 
        {
            "location": "/posts/old/simple-sinew/#test", 
            "text": "", 
            "title": "Test"
        }, 
        {
            "location": "/posts/old/simple-sinew/#test_plan", 
            "text": "Test is divided into two parts, the main project of the test and the function of each module function of small unit logic test.  The main project tests include:   the main project import test import (insert)  CHECK CATALOG test (catalog checkout) of the main project  the main item search and find time test (find)", 
            "title": "Test Plan"
        }, 
        {
            "location": "/posts/old/simple-sinew/#project_test", 
            "text": "The Import of Main Project using 100K data    Catalog Checkout    Catalog size : 1013  Find Test  Script:   Result:", 
            "title": "Project Test"
        }, 
        {
            "location": "/posts/old/simple-sinew/#conclusion", 
            "text": "We have learn a lot form this project, especially at C programming, organizing such a project. Tanks for the hardwork of our team. And you can go to github to download the source code for detail. If you, reader have any question, you can email me or just leave your message at message wall in this website.", 
            "title": "Conclusion"
        }, 
        {
            "location": "/posts/old/Floater/", 
            "text": "Overview\n\n\nFloater is a online chatting tool for strangers. The user can simply input a username and the server will find a fellow for the user to chat with in peer to peer mode. It can also transfer pictures and files.\n\n\n\n\nTeam Members\n\n\nJiaqi Ye (Leader)\n\n\nJiawei Long\n\n\nQinglong Xu\n\n\nJunjie Peng\n\n\n\n\nProtocol Design\n\n\nAbstract\n\n\nProtocol Floater v0.5 use Json as the switching data type between peers.\nThere two types of protocols, client-server and client-client(know as peer to peer).\n\n\n1. Server and Client\n\n\nThe server is only responsible for getting a fellow to chat with.\n\n\nPacket switching type\n\n\n\n{\"type\":\"Request\"}\n{\"type\":\"Reply\"}\n\n\n\n\nPacket actions\n\n\n\n{\"action\":\"login\"}\n\n\n\nWhen the client send a login action to the server, it will send its user name as well. Then the server will insert a record to the user list.\n\n\n\n{\n  \"uid\" : 0,\n  \"username\": \"admin\",\n  \"ip\": \"192.168.1.1\",\n}\n\n\n\n\nNotice that, the user in the user list means that it has not found a fellow to chat.\n\n\n\n{\"action\":\"find\"}\n\n\n\n\n2. Client and Client\n\n\nWhen the address get a fellow from the server, it know the fellow's ip address. Then the client will send a message to the fellow's client.\nThe client can be treated a server.\n\n\nThis is an example:\n\n\n{\n  \"type\":\"Request\",\n  \"username\":\"Bob\",\n  \"action\" : \"hello\",\n  \"ip\":\"192.168.1.1\"\n}\n\n\n\n\n{\n  \"type\":\"Reply\",\n  \"username\":\"Alice\",\n  \"action\":\"hi\",\n  \"ip\":\"192.168.1.2\"\n}\n\n\n\n\nAlice can also reject the connection.\n\n\n\n{\n  \"type\":\"Reply\",\n  \"username\":\"Unknown\",\n  \"action\":\"reject\",\n  \"ip\":\"192.168.1.2\"\n}\n\n\n\n\nIf Alice accept the connection:\nBoth Alice and Bob will start two threads, for sending message and receiving message.\n\n\n\n{\n  \"type\":\"Chat\",\n  \"username\":\"Bob\",\n  \"ip\":\"192.168.1.1\",\n  \"message\":\"It's a nice day, isn't it?\"\n}\n\n\n\n\nThen Alice can reply\n\n\n{\n  \"type\":\"Chat\",\n  \"username\":\"Bob\",\n  \"ip\":\"192.168.1.1\",\n  \"message\":\"Yes, and I feel so warm.\"\n}\n\n\n\nAt any time, the two people can leave and break up the conversation.\n\n\n{\n  \"type\":\"Bye\",\n  \"username\":\"Bob\",\n  \"ip\":\"192.168.1.1\",\n}\n\n\n\n\n\nConclusion\n\n\nThis phase is going to carry out the design of our protocol. We transmit the string in JSON format, and define the format of sending and receiving information, and define the semantic action of message response. (modeled on the HTTP protocol) to achieve their own application layer protocol.\n\n\nUse this phase to the JSON format protocol is very popular in today's data transmission format (without the use of XML, the format too ugly). Our thinking is that such a transfer did not do good serialization, which leads to a large number of redundant symbols in the process of transmission, so we in image transmission, re design the special picture transfer protocol, using binary direct transmission information is true, do completely serialization to remove redundant role.\n\n\nAt the beginning of the design of the protocol is not standard, there are a lot of mistakes should not spend time, resulting in a lot of technical debt, but also to the team caused a lot of work. So the standard of the protocol should be insisted in the initial stage.\n\n\nTechnology Discussion\n\n\n1. Socket Programming\n\n\nUsing python socket programming is very simple.\n\n\nClass \nSocket\n:\n\nsocket(family,type[,protocal])\n\n\nto create a TCP socket:\n\n\n  s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)\n\n\n\n\nto create a UDP socket\n\n\n  s=socket.socket(socket.AF_INET,socket.SOCK_DGRAM)\n\n\n\n\nWe need reliable data transfer. So we choose TCP as our transport layer protocol. UDP is also available (QQ uses UDP).\n\n\nwe can send and receive message using this way:\n\n\n  sock.send(\n{\naction\n:\nlogin\n,\nuid\n:0,\nusername\n:\n%s\n,\nip\n:\n%s\n}\n %(username, server))\n\n  data = connection.recv(1024)\n\n\n\n\npython socket can send byte Strings to remote which will help us to complete this project.\n\n\n2. Client-Server and Peer to Peer Structure Implement\n\n\n\n\nWe are going to implement the two structure. C/S structure is the simple one and the peer to peer structure is the difficult one.\n\n\nC/S\n\n\nwe run different protocol on client and server.\n\n\nOn the server side, we have a simple \"database\"(a array in the main memory in fact). Client will connect to the server forwardly. And server will accept client's request and then write the client's information into the database while the server will help the client to find fellow to chat with. If the fellow is found, a record which is information of the founded fellow will be sent to the requesting client as a string. With the information, the requesting client can send another request to the fellow to set up connection and then start to chat.\n\n\nPeer to Peer\n\n\nP2P, in fact, can be regarded as C/S for both side which means that peer 1 is another peer's (known as peer 2) server and peer 2 is peer 1's client while peer 2 roles also peer 1's server. We can see it clearly when we look at the picture above.\n\n\nWe run 2 protocols in our p2p structure. One is for chatting and another is for picture transferring. For chatting, we send message in a time. And for picture transferring, we send picture's format(.jpg, .png, .gif). And then we send the picture's byte stream to remote. So we are just send the file to remote.\n\n\n3. OOP and Multi-Threading Programming\n\n\nWhen we are going to run the protocols, we will have some \"block code area\" like:\n\n\n  while ture:\n      # wait to receive message\n\n\n\n\nSo we need to use Multi-Threading programming as a solution.\n\n\nAt the same time, we used OOP(object-oriented programming) to have a good development. We have classes post-office, post-man an so on.\n\n\nWe also use Queue( in python Multi-Threading Programming ) for sending and receiving.\n\n\n4. Fast GUI Development\n\n\nToday's era is the era of web, the use of WebKit rapid development of desktop applications are very common and technical development is difficult, the application of light. Many modern applications such as atom are developed using webkit.\n\n\nThis time we use the js+python cross language approach, the use of html+jquery+css development front, the use of Python language object in the JS, using JS to call the python program function. This way we achieve a very beautiful HTML5 interface and dynamic effects.\n\n\nView our project in github\n\n\nhttps://github.com/ghostbody/computer-network", 
            "title": "Floater"
        }, 
        {
            "location": "/posts/old/Floater/#overview", 
            "text": "Floater is a online chatting tool for strangers. The user can simply input a username and the server will find a fellow for the user to chat with in peer to peer mode. It can also transfer pictures and files.", 
            "title": "Overview"
        }, 
        {
            "location": "/posts/old/Floater/#team_members", 
            "text": "Jiaqi Ye (Leader)  Jiawei Long  Qinglong Xu  Junjie Peng", 
            "title": "Team Members"
        }, 
        {
            "location": "/posts/old/Floater/#protocol_design", 
            "text": "", 
            "title": "Protocol Design"
        }, 
        {
            "location": "/posts/old/Floater/#abstract", 
            "text": "Protocol Floater v0.5 use Json as the switching data type between peers.\nThere two types of protocols, client-server and client-client(know as peer to peer).", 
            "title": "Abstract"
        }, 
        {
            "location": "/posts/old/Floater/#1_server_and_client", 
            "text": "The server is only responsible for getting a fellow to chat with.", 
            "title": "1. Server and Client"
        }, 
        {
            "location": "/posts/old/Floater/#packet_switching_type", 
            "text": "{\"type\":\"Request\"}\n{\"type\":\"Reply\"}", 
            "title": "Packet switching type"
        }, 
        {
            "location": "/posts/old/Floater/#packet_actions", 
            "text": "{\"action\":\"login\"}  When the client send a login action to the server, it will send its user name as well. Then the server will insert a record to the user list.  \n{\n  \"uid\" : 0,\n  \"username\": \"admin\",\n  \"ip\": \"192.168.1.1\",\n}  Notice that, the user in the user list means that it has not found a fellow to chat.  \n{\"action\":\"find\"}", 
            "title": "Packet actions"
        }, 
        {
            "location": "/posts/old/Floater/#2_client_and_client", 
            "text": "When the address get a fellow from the server, it know the fellow's ip address. Then the client will send a message to the fellow's client.\nThe client can be treated a server.  This is an example: \n{\n  \"type\":\"Request\",\n  \"username\":\"Bob\",\n  \"action\" : \"hello\",\n  \"ip\":\"192.168.1.1\"\n}  \n{\n  \"type\":\"Reply\",\n  \"username\":\"Alice\",\n  \"action\":\"hi\",\n  \"ip\":\"192.168.1.2\"\n}  Alice can also reject the connection.  \n{\n  \"type\":\"Reply\",\n  \"username\":\"Unknown\",\n  \"action\":\"reject\",\n  \"ip\":\"192.168.1.2\"\n}  If Alice accept the connection:\nBoth Alice and Bob will start two threads, for sending message and receiving message.  \n{\n  \"type\":\"Chat\",\n  \"username\":\"Bob\",\n  \"ip\":\"192.168.1.1\",\n  \"message\":\"It's a nice day, isn't it?\"\n}  Then Alice can reply \n{\n  \"type\":\"Chat\",\n  \"username\":\"Bob\",\n  \"ip\":\"192.168.1.1\",\n  \"message\":\"Yes, and I feel so warm.\"\n}  At any time, the two people can leave and break up the conversation. \n{\n  \"type\":\"Bye\",\n  \"username\":\"Bob\",\n  \"ip\":\"192.168.1.1\",\n}", 
            "title": "2. Client and Client"
        }, 
        {
            "location": "/posts/old/Floater/#conclusion", 
            "text": "This phase is going to carry out the design of our protocol. We transmit the string in JSON format, and define the format of sending and receiving information, and define the semantic action of message response. (modeled on the HTTP protocol) to achieve their own application layer protocol.  Use this phase to the JSON format protocol is very popular in today's data transmission format (without the use of XML, the format too ugly). Our thinking is that such a transfer did not do good serialization, which leads to a large number of redundant symbols in the process of transmission, so we in image transmission, re design the special picture transfer protocol, using binary direct transmission information is true, do completely serialization to remove redundant role.  At the beginning of the design of the protocol is not standard, there are a lot of mistakes should not spend time, resulting in a lot of technical debt, but also to the team caused a lot of work. So the standard of the protocol should be insisted in the initial stage.", 
            "title": "Conclusion"
        }, 
        {
            "location": "/posts/old/Floater/#technology_discussion", 
            "text": "", 
            "title": "Technology Discussion"
        }, 
        {
            "location": "/posts/old/Floater/#1_socket_programming", 
            "text": "Using python socket programming is very simple.  Class  Socket : socket(family,type[,protocal])  to create a TCP socket:    s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)  to create a UDP socket    s=socket.socket(socket.AF_INET,socket.SOCK_DGRAM)  We need reliable data transfer. So we choose TCP as our transport layer protocol. UDP is also available (QQ uses UDP).  we can send and receive message using this way:    sock.send( { action : login , uid :0, username : %s , ip : %s }  %(username, server))\n\n  data = connection.recv(1024)  python socket can send byte Strings to remote which will help us to complete this project.", 
            "title": "1. Socket Programming"
        }, 
        {
            "location": "/posts/old/Floater/#2_client-server_and_peer_to_peer_structure_implement", 
            "text": "We are going to implement the two structure. C/S structure is the simple one and the peer to peer structure is the difficult one.  C/S  we run different protocol on client and server.  On the server side, we have a simple \"database\"(a array in the main memory in fact). Client will connect to the server forwardly. And server will accept client's request and then write the client's information into the database while the server will help the client to find fellow to chat with. If the fellow is found, a record which is information of the founded fellow will be sent to the requesting client as a string. With the information, the requesting client can send another request to the fellow to set up connection and then start to chat.  Peer to Peer  P2P, in fact, can be regarded as C/S for both side which means that peer 1 is another peer's (known as peer 2) server and peer 2 is peer 1's client while peer 2 roles also peer 1's server. We can see it clearly when we look at the picture above.  We run 2 protocols in our p2p structure. One is for chatting and another is for picture transferring. For chatting, we send message in a time. And for picture transferring, we send picture's format(.jpg, .png, .gif). And then we send the picture's byte stream to remote. So we are just send the file to remote.", 
            "title": "2. Client-Server and Peer to Peer Structure Implement"
        }, 
        {
            "location": "/posts/old/Floater/#3_oop_and_multi-threading_programming", 
            "text": "When we are going to run the protocols, we will have some \"block code area\" like:    while ture:\n      # wait to receive message  So we need to use Multi-Threading programming as a solution.  At the same time, we used OOP(object-oriented programming) to have a good development. We have classes post-office, post-man an so on.  We also use Queue( in python Multi-Threading Programming ) for sending and receiving.", 
            "title": "3. OOP and Multi-Threading Programming"
        }, 
        {
            "location": "/posts/old/Floater/#4_fast_gui_development", 
            "text": "Today's era is the era of web, the use of WebKit rapid development of desktop applications are very common and technical development is difficult, the application of light. Many modern applications such as atom are developed using webkit.  This time we use the js+python cross language approach, the use of html+jquery+css development front, the use of Python language object in the JS, using JS to call the python program function. This way we achieve a very beautiful HTML5 interface and dynamic effects.", 
            "title": "4. Fast GUI Development"
        }, 
        {
            "location": "/posts/old/Floater/#view_our_project_in_github", 
            "text": "https://github.com/ghostbody/computer-network", 
            "title": "View our project in github"
        }, 
        {
            "location": "/posts/old/Asentence/", 
            "text": "{% include JB/setup %}\n\n\n\u4ea7\u54c1\u80cc\u666f\n\n\n\u4eba\u4eec\u6e10\u6e10\u503e\u5411\u4e8e\u7528\u7b80\u77ed\u7684\u8bed\u8a00\u5236\u9020\u6709\u8da3\u7684\u8bdd\u9898\uff1b\n   \u5904\u4e8e\u4fe1\u606f\u7206\u70b8\u65f6\u4ee3\uff0c\u4eba\u4eec\u6e34\u671b\u5728\u77ed\u65f6\u95f4\u4e86\u89e3\u5230\u66f4\u591a\u7684\u4fe1\u606f\uff1b\n   \u5fae\u535a\u4fe1\u606f\u91cf\u8f83\u5927\u4e14\u529f\u80fd\u8d8b\u4e8e\u590d\u6742\uff0c\u7528\u6237\u4f53\u9a8c\u4e0b\u964d\u3002\n\n\n\n\n\u7528\u6237\u7fa4\u4f53\n\n\n\u4e3b\u8981\u9488\u5bf9\u7ecf\u5e38\u4f7f\u7528\u79fb\u52a8\u667a\u80fd\u5ba2\u6237\u7aef\u7684\u7fa4\u4f53\u3002\n\n\n\u529f\u80fd\u4ecb\u7ecd\n\n\n1 \u767b\u5f55\u53ca\u6ce8\u518c\n\n\n\n\n\u767b\u5f55\uff1a\u652f\u6301\u5fae\u4fe1\u3001\u5fae\u535a\u3001QQ\u7ed1\u5b9a\uff0c\u4e00\u952e\u767b\u5f55\uff1b\n\n\n\u6ce8\u518c\uff1a\u90ae\u7bb1\u6ce8\u518c\uff0c\u7528\u6237\u81ea\u5b9a\u4e49\u5bc6\u7801\u3002\n\n\n\n\n2 \u9996\u9875\u2014\u2014\u6240\u6709\u8bdd\u9898\n\n\n\n\n\u5411\u7528\u6237\u63a8\u9001\u7cbe\u5f69\u8bdd\u9898\uff0c\u8bdd\u9898\u8303\u56f4\u6db5\u76d6\u751f\u6d3b\u3001\u65f6\u4e8b\u3001\u79d1\u6280\u3001\u4e66\u7c4d\u3001\u7535\u5f71\u7b49\u3002\n\n\n\u8bdd\u9898\u5185\u5bb9\u7b80\u77ed\u6709\u8da3\uff0c\u7b26\u5408\u5927\u4f17\u5174\u8da3\uff0c\u5bb9\u6613\u5f15\u8d77\u7528\u6237\u5171\u9e23\u3002\n\n\n\u7528\u6237\u53ef\u6839\u636e\u201c\u70ed\u5ea6\u201d\u201c\u65f6\u95f4\u201d\u201c\u63a8\u8350\u201d\u5bf9\u5185\u5bb9\u8fdb\u884c\u6392\u5e8f\u3002\n\n\n\n\n3 \u521b\u5efa\u2014\u2014\u6211\u8981\u63a8\u8350\n\n\n\n\n\u7528\u6237\u53ef\u53d1\u8d77\u65b0\u8bdd\u9898\uff0c\u9700\u7ecf\u540e\u53f0\u7ba1\u7406\u5458\u5ba1\u6838\uff0c\u5ba1\u6838\u901a\u8fc7\u5219\u5c06\u5728\u9996\u9875\u63a8\u51fa\u3002\n\n\n\u7528\u6237\u53ef\u4ee5\u5728\u201c\u6211\u7684\u63a8\u8350\u201d\u9875\u9762\u67e5\u770b\u53d1\u8d77\u7684\u8bdd\u9898\u4ee5\u53ca\u5f53\u524d\u5ba1\u6838\u72b6\u6001\n\n\n\n\n\n\n\n\n4 \u6536\u85cf\u2014\u2014\u6211\u7684\u5206\u7c7b\n\n\n\n\n\u5728\u9996\u9875\u70b9\u51fb\u5de6\u4e0a\u89d2\u7528\u6237\u5934\u50cf\uff0c\u53ef\u4ee5\u67e5\u770b\u6211\u7684\u5206\u7c7b\uff0c\u70b9\u51fb\u76f8\u5e94\u6807\u7b7e\uff0c\u53ef\u4ee5\u67e5\u770b\u5bf9\u5e94\u5df2\u6536\u85cf\u5185\u5bb9\uff1b\n\n\n\u7528\u6237\u53ef\u4ee5\u81ea\u5b9a\u4e49\u5206\u7c7b\u6807\u7b7e\u53ca\u5bf9\u5df2\u6709\u6807\u7b7e\u8fdb\u884c\u4fee\u6539\uff1b\n\n\n\u5728\u201c\u70ed\u95e8\u6536\u85cf\u201d\u6a21\u5757\u53ef\u4ee5\u67e5\u770b\u7528\u6237\u666e\u904d\u611f\u5174\u8da3\u7684\u8bdd\u9898\u548c\u7cbe\u5f69\u8bc4\u8bba\n\n\n\n\n\u4ea7\u54c1\u521b\u65b0\u70b9\n\n\n\n\n\u5bf9\u4e8e\u4efb\u4f55\u8bdd\u9898\uff0c\u7528\u6237\u53ea\u80fd\u7528\u4e00\u53e5\u8bdd\u53d1\u8868\u770b\u6cd5\uff0c\u4e14\u6709\u6570\u5b57\u8981\u6c42\u3002\n\n\n\u5185\u5bb9\u4e30\u5bcc\uff0c\u4e14\u53ef\u4ee5\u7531\u7528\u6237\u53d1\u8d77\uff0c\u6ee1\u8db3\u7528\u6237\u5404\u79cd\u9700\u6c42\u3002\n\n\n\u754c\u9762\u7b80\u6d01\uff0c\u529f\u80fd\u7b80\u5355\uff0c\u5728\u5a31\u4e50\u5927\u4f17\u540c\u65f6\u4f20\u9012\u6700\u65b0\u6d88\u606f\uff0c\u65b9\u4fbf\u7528\u6237\u5feb\u901f\u5438\u6536\u3002\n\n\n\n\n\n\n\n\n\u9879\u76ee\u6784\u67b6\n\n\n\u670d\u52a1\u7aef\uff1aPython Tornado + MySQL\n\n\n\u5ba2\u6237\u7aef\uff1a\u5b89\u5353\u7aef + Web\u7aef + \u7535\u8111\u684c\u9762\u5e94\u7528\n\n\n\u5f00\u53d1\u8005\u8c03\u8bd5\n\n\ngit clone https://github.com/ghostbody/Asentence\n\n\n\n\n\u670d\u52a1\u7aef\uff1a\n\n\ncd ./Asentence/src/server\npython index.py\n\n\n\n\n\u8fd0\u884c\u5ba2\u6237\u7aef\uff1a\n\n\n\u4f7f\u7528Android Studio \u6253\u5f00\u9879\u76ee $ASENTENCE$/src/client\uff0c\u7136\u540e\u7f16\u8bd1\u8fd0\u884c\n\n\n\u5b89\u5353\u7aef\uff1a\n\n\nhtml5+css+js+ratchet+phonegap\n\n\n\n\n\n\n\u5b89\u88c5sdk\uff08\u5b89\u5353 api \n= 19\uff09\u914d\u7f6e\u597d\u73af\u5883\u53d8\u91cf\n\n\n\n\n\n\n\u5b89\u88c5nodejs\uff08\u4ee5\u53canpm\uff09\u5efa\u8bae\u4e0b\u8f7d\u7f16\u8bd1\u8fd0\u884c\n\n\n\n\n\n\n\u5b89\u88c5phonegap\uff08\u6216\u8005cordova\uff09\n\n\nsudo npm -g install phonegap\nsudo npm -g install cordova\n\n\n\n\n\n\n\u5b89\u88c5\u53f7gradle(2.2.1)\n\n\n\n\n\n\n\u8fde\u63a5\u597d\u5b89\u5353\u624b\u673a(\u9700\u8981\u8fdb\u884c\u4e86root\u5e76\u4e14\u5f00\u542fusb\u8c03\u8bd5)\uff0c\u8fd0\u884c/src/android\u4e0b\u7684makefile\u6587\u4ef6\n\n\nmake\n\n\n\n\n\n\n\u684c\u9762\u7aef\n\n\nc++ webkit + html + css + js\n\n\n\u5f00\u53d1\u4e2d\n\n\nGithub\n\n\nhttps://github.com/ghostbody/Asentence", 
            "title": "Asentence"
        }, 
        {
            "location": "/posts/old/Asentence/#_1", 
            "text": "\u4eba\u4eec\u6e10\u6e10\u503e\u5411\u4e8e\u7528\u7b80\u77ed\u7684\u8bed\u8a00\u5236\u9020\u6709\u8da3\u7684\u8bdd\u9898\uff1b\n   \u5904\u4e8e\u4fe1\u606f\u7206\u70b8\u65f6\u4ee3\uff0c\u4eba\u4eec\u6e34\u671b\u5728\u77ed\u65f6\u95f4\u4e86\u89e3\u5230\u66f4\u591a\u7684\u4fe1\u606f\uff1b\n   \u5fae\u535a\u4fe1\u606f\u91cf\u8f83\u5927\u4e14\u529f\u80fd\u8d8b\u4e8e\u590d\u6742\uff0c\u7528\u6237\u4f53\u9a8c\u4e0b\u964d\u3002", 
            "title": "\u4ea7\u54c1\u80cc\u666f"
        }, 
        {
            "location": "/posts/old/Asentence/#_2", 
            "text": "\u4e3b\u8981\u9488\u5bf9\u7ecf\u5e38\u4f7f\u7528\u79fb\u52a8\u667a\u80fd\u5ba2\u6237\u7aef\u7684\u7fa4\u4f53\u3002", 
            "title": "\u7528\u6237\u7fa4\u4f53"
        }, 
        {
            "location": "/posts/old/Asentence/#_3", 
            "text": "", 
            "title": "\u529f\u80fd\u4ecb\u7ecd"
        }, 
        {
            "location": "/posts/old/Asentence/#1", 
            "text": "\u767b\u5f55\uff1a\u652f\u6301\u5fae\u4fe1\u3001\u5fae\u535a\u3001QQ\u7ed1\u5b9a\uff0c\u4e00\u952e\u767b\u5f55\uff1b  \u6ce8\u518c\uff1a\u90ae\u7bb1\u6ce8\u518c\uff0c\u7528\u6237\u81ea\u5b9a\u4e49\u5bc6\u7801\u3002", 
            "title": "1 \u767b\u5f55\u53ca\u6ce8\u518c"
        }, 
        {
            "location": "/posts/old/Asentence/#2", 
            "text": "\u5411\u7528\u6237\u63a8\u9001\u7cbe\u5f69\u8bdd\u9898\uff0c\u8bdd\u9898\u8303\u56f4\u6db5\u76d6\u751f\u6d3b\u3001\u65f6\u4e8b\u3001\u79d1\u6280\u3001\u4e66\u7c4d\u3001\u7535\u5f71\u7b49\u3002  \u8bdd\u9898\u5185\u5bb9\u7b80\u77ed\u6709\u8da3\uff0c\u7b26\u5408\u5927\u4f17\u5174\u8da3\uff0c\u5bb9\u6613\u5f15\u8d77\u7528\u6237\u5171\u9e23\u3002  \u7528\u6237\u53ef\u6839\u636e\u201c\u70ed\u5ea6\u201d\u201c\u65f6\u95f4\u201d\u201c\u63a8\u8350\u201d\u5bf9\u5185\u5bb9\u8fdb\u884c\u6392\u5e8f\u3002", 
            "title": "2 \u9996\u9875\u2014\u2014\u6240\u6709\u8bdd\u9898"
        }, 
        {
            "location": "/posts/old/Asentence/#3", 
            "text": "\u7528\u6237\u53ef\u53d1\u8d77\u65b0\u8bdd\u9898\uff0c\u9700\u7ecf\u540e\u53f0\u7ba1\u7406\u5458\u5ba1\u6838\uff0c\u5ba1\u6838\u901a\u8fc7\u5219\u5c06\u5728\u9996\u9875\u63a8\u51fa\u3002  \u7528\u6237\u53ef\u4ee5\u5728\u201c\u6211\u7684\u63a8\u8350\u201d\u9875\u9762\u67e5\u770b\u53d1\u8d77\u7684\u8bdd\u9898\u4ee5\u53ca\u5f53\u524d\u5ba1\u6838\u72b6\u6001", 
            "title": "3 \u521b\u5efa\u2014\u2014\u6211\u8981\u63a8\u8350"
        }, 
        {
            "location": "/posts/old/Asentence/#4", 
            "text": "\u5728\u9996\u9875\u70b9\u51fb\u5de6\u4e0a\u89d2\u7528\u6237\u5934\u50cf\uff0c\u53ef\u4ee5\u67e5\u770b\u6211\u7684\u5206\u7c7b\uff0c\u70b9\u51fb\u76f8\u5e94\u6807\u7b7e\uff0c\u53ef\u4ee5\u67e5\u770b\u5bf9\u5e94\u5df2\u6536\u85cf\u5185\u5bb9\uff1b  \u7528\u6237\u53ef\u4ee5\u81ea\u5b9a\u4e49\u5206\u7c7b\u6807\u7b7e\u53ca\u5bf9\u5df2\u6709\u6807\u7b7e\u8fdb\u884c\u4fee\u6539\uff1b  \u5728\u201c\u70ed\u95e8\u6536\u85cf\u201d\u6a21\u5757\u53ef\u4ee5\u67e5\u770b\u7528\u6237\u666e\u904d\u611f\u5174\u8da3\u7684\u8bdd\u9898\u548c\u7cbe\u5f69\u8bc4\u8bba", 
            "title": "4 \u6536\u85cf\u2014\u2014\u6211\u7684\u5206\u7c7b"
        }, 
        {
            "location": "/posts/old/Asentence/#_4", 
            "text": "\u5bf9\u4e8e\u4efb\u4f55\u8bdd\u9898\uff0c\u7528\u6237\u53ea\u80fd\u7528\u4e00\u53e5\u8bdd\u53d1\u8868\u770b\u6cd5\uff0c\u4e14\u6709\u6570\u5b57\u8981\u6c42\u3002  \u5185\u5bb9\u4e30\u5bcc\uff0c\u4e14\u53ef\u4ee5\u7531\u7528\u6237\u53d1\u8d77\uff0c\u6ee1\u8db3\u7528\u6237\u5404\u79cd\u9700\u6c42\u3002  \u754c\u9762\u7b80\u6d01\uff0c\u529f\u80fd\u7b80\u5355\uff0c\u5728\u5a31\u4e50\u5927\u4f17\u540c\u65f6\u4f20\u9012\u6700\u65b0\u6d88\u606f\uff0c\u65b9\u4fbf\u7528\u6237\u5feb\u901f\u5438\u6536\u3002", 
            "title": "\u4ea7\u54c1\u521b\u65b0\u70b9"
        }, 
        {
            "location": "/posts/old/Asentence/#_5", 
            "text": "\u670d\u52a1\u7aef\uff1aPython Tornado + MySQL  \u5ba2\u6237\u7aef\uff1a\u5b89\u5353\u7aef + Web\u7aef + \u7535\u8111\u684c\u9762\u5e94\u7528", 
            "title": "\u9879\u76ee\u6784\u67b6"
        }, 
        {
            "location": "/posts/old/Asentence/#_6", 
            "text": "git clone https://github.com/ghostbody/Asentence", 
            "title": "\u5f00\u53d1\u8005\u8c03\u8bd5"
        }, 
        {
            "location": "/posts/old/Asentence/#_7", 
            "text": "cd ./Asentence/src/server\npython index.py  \u8fd0\u884c\u5ba2\u6237\u7aef\uff1a  \u4f7f\u7528Android Studio \u6253\u5f00\u9879\u76ee $ASENTENCE$/src/client\uff0c\u7136\u540e\u7f16\u8bd1\u8fd0\u884c", 
            "title": "\u670d\u52a1\u7aef\uff1a"
        }, 
        {
            "location": "/posts/old/Asentence/#_8", 
            "text": "html5+css+js+ratchet+phonegap    \u5b89\u88c5sdk\uff08\u5b89\u5353 api  = 19\uff09\u914d\u7f6e\u597d\u73af\u5883\u53d8\u91cf    \u5b89\u88c5nodejs\uff08\u4ee5\u53canpm\uff09\u5efa\u8bae\u4e0b\u8f7d\u7f16\u8bd1\u8fd0\u884c    \u5b89\u88c5phonegap\uff08\u6216\u8005cordova\uff09  sudo npm -g install phonegap\nsudo npm -g install cordova    \u5b89\u88c5\u53f7gradle(2.2.1)    \u8fde\u63a5\u597d\u5b89\u5353\u624b\u673a(\u9700\u8981\u8fdb\u884c\u4e86root\u5e76\u4e14\u5f00\u542fusb\u8c03\u8bd5)\uff0c\u8fd0\u884c/src/android\u4e0b\u7684makefile\u6587\u4ef6  make", 
            "title": "\u5b89\u5353\u7aef\uff1a"
        }, 
        {
            "location": "/posts/old/Asentence/#_9", 
            "text": "c++ webkit + html + css + js  \u5f00\u53d1\u4e2d", 
            "title": "\u684c\u9762\u7aef"
        }, 
        {
            "location": "/posts/old/Asentence/#github", 
            "text": "https://github.com/ghostbody/Asentence", 
            "title": "Github"
        }, 
        {
            "location": "/posts/old/FlowChart-and-PseudoCode/", 
            "text": "\u5b9e\u9a8c\u4e8c\uff1a\u7a0b\u5e8f\u6d41\u7a0b\u56fe\u548c\u4f2a\u4ee3\u7801\n\n\n\u5b9e\u9a8c\u76ee\u7684\uff1a\u5f53\u5927\u5bb6\u5b66\u4e60\u4e86\u7a0b\u5e8f\u7684\u63a7\u5236\u7ed3\u6784\u4e4b\u540e\uff0c\u4ee3\u7801\u5c31\u53d8\u5f97\u590d\u6742\u8d77\u6765\u3002\u5728\u8fd9\u65f6\uff0c\u6211\u4eec\u89e3\u51b3\u95ee\u9898\u5c31\u9700\u8981\u6709\u5f88\u4e25\u5bc6\u7684\u903b\u8f91\u601d\u7ef4\u3002\u7a0b\u5e8f\u6d41\u7a0b\u56fe\u548c\u4f2a\u4ee3\u7801\u5c31\u662f\u5e2e\u52a9\u6211\u4eec\u53bb\u63cf\u8ff0\u6211\u4eec\u89e3\u51b3\u95ee\u9898\u7684\u65b9\u6cd5\uff08\u4e5f\u79f0\u4e3a\u7b97\u6cd5\uff09\u7684\u5de5\u5177\u3002\u672c\u6b21\u5b9e\u9a8c\u5728\u4e8e\u8ba9\u5927\u5bb6\u5b66\u4e60\u5982\u4f55\u4f7f\u7528\u8fd9\u4e9b\u5de5\u5177\uff0c\u8fd9\u5bf9\u5927\u5bb6\u4ee5\u540e\u7684\u7f16\u7a0b\u6709\u5f88\u5927\u7684\u5e2e\u52a9\u3002\n\n\n1.Flowchart(\u7a0b\u5e8f\u6d41\u7a0b\u56fe)\n\n\nA flowchart is a type of diagram that represents an algorithm, workflow or process, showing the steps as boxes of various kinds, and their order by connecting them with arrows. This diagrammatic representation illustrates a solution model to a given problem. Flowcharts are used in analyzing, designing, documenting or managing a process or program in various fields.\n\n\nFrom wikipedia\n\n\nDetailed Description: \nflowchat\n\n\nThere is an example:\n\n\n\n\nAnd this is the flowchart:\n\n\n\n2.Pseudocode (\u4f2a\u4ee3\u7801)\n\n\nPseudocode is an informal high-level description of the operating principle of a computer program or other algorithm.\n\n\nFrom wikipedia\n\n\nThere is an example:\n\n\n\nWe can describe this question by this way rather than write a C program immediately:\n\n\nmain\n \n{\n\n\ninput\n \ntwo\n \nintegers\n \nheight\n \nand\n \nn\n\n\ninitialize\n \nanswer\n \n=\n \n0\n\n\nloop\n \nfor\n \nn\n \ntimes\n \n{\n\n    \ninput\n \ntree_height\n\n    \nif\n \nheight\n \n=\n \ntree_height\n:\n\n       \nanswer\n \n=\n \nanswer\n \n+\n \n1\n\n  \n}\n\n\nprint\n \nanswer\n\n\n}\n\n\n\n\n\nPseudocode is used to express your thought, you do not need to care about the grammar.\n\n\nPre Assignment\n\n\nLearn about Flowchart and Pseudocode.\n\n\nAssignment 0 (20pts)\n\n\nChoose one question from soj.me in week6 in our course and then write the Pseudocode.\n\n\nAssignment 1 (35pts)\n\n\noption 1\n\n\nTranslate the following flowchart into Pseudocode\n\n\noption 2\n\n\nTranslate the following flowchart into Pseudocode and C programming language program.\n\n\nDescription\n\n\nSeveral surveys indicate that the taller you are, the higher you can climb the corporate ladder. At TALL Enterprises Inc. this \"de facto standard\" has been properly formalized: your boss is always at least as tall as you are. Furthermore, you can safely assume that your boss earns a bit more than you do. In fact, you can be absolutely sure that your immediate boss is the person who earns the least among all the employees that earn more than you and are at least as tall as you are. Furthermore, if you are the immediate boss of someone, that person is your subordinate, and all his subordinates are your subordinates as well. If you are nobody's boss, then you have no subordinates. As simple as these rules are, many people working for TALL are unsure of to whom they should be turning in their weekly progress report and how many subordinates they have. Write a program that will help in determining for any employee who the immediate boss of that employee is and how many subordinates they have. Quality Assurance at TALL have devised a series of tests to ensure that your program is correct. These test are described below.\n\n\nMay be you can not write out the problem, the only work you will do is write out this program from the following flowchart(Since there are many methods to sort, so you can use one of them, the flowchart does not display in the flow chat, instead a dashed line).\n\n\nFlowchart\n\n\n\n\nSimple input and output\n\n\nInput\n\n\n2\n3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123458\n4\n200002 12234 1832001\n200003 15002 1745201\n200004 18745 1883410\n200001 24834 1921313\n200002\n\n\nOutput\n\n\n(0,2)\n(200004,0)\n\n\nAssignment 2 (35pts)\n\n\nDraw a flowchart from the following C language program which instruct the movement of a robot going on patrol along the wall.\n\n\n#include \nstdio.h\n\n\n/* this program is used for a robot to walk along\n   a wall next to him.\n*/\n\n/* Note that if the robot\ns eyes get something\n   whose distance is less than 40cm, there must\n   be an obstacle(wall).\n*/\nconst int SENSOR_DISTANCE = 40; // 40 cm\n\n/*\n  predifined methods:\n  1. void lookLeft() and void lookRight()\n  function: Let the robot to look at the left or right side.\n  2. void lookForward()\n  function: let the robot to look forward.\n  3. int getDistance()\n  function: get a distance from the eye to another.\n  object if there is one.\n  4. void moveStraight()\n  function: go straight for some distance.\n  5.int shutDown()\n  function: shut down the robot.\n*/\n\n\n\nint main() {\n  /* we assume that for the initial state, either\n     the robot\ns left side or the right side is\n     toward the wall.\n\n     wall = 0 means that the wall is at the left side\n     wall = 1 means that the wall is at the right side\n  */\n  int wall;\n\n  lookLeft();\n  if(getDistance() \n SENSOR_DISTANCE) {\n    wall = 0;\n  } else {\n    lookRight();\n    wall = 1;\n  }\n\n  if(wall == 0) {\n    while(shutDown() != 1) {\n      moveStraight();\n      while(1) {\n        lookLeft();\n        if(getDistance() \n SENSOR_DISTANCE) {\n          lookForward();\n          if(getDistance() \n SENSOR_DISTANCE) {\n            turnRight();\n          } else {\n        break;\n      }\n        } else {\n      turnLeft();\n        }\n      }\n    }\n  } else {\n    do {\n      moveStraight();\n      while(1) {\n        lookRight();\n        if(getDistance() \n SENSOR_DISTANCE) {\n          lookForward();\n          if(getDistance() \n SENSOR_DISTANCE) {\n            turnLeft();\n          } else {\n        break;\n      }\n        } else {\n      turnRight();\n        }\n      }\n    } while (shutDown() != 1);\n  }\n\n\n  return 0;\n}\n\n\n\n\nExtended Assignment (10pts)\n\n\noption 1\n\n\nDraw a flowchart  and write Pseudocode as well as a C language program for the following description.\n\n\n\n\noption 2\n\n\nSimplify the logic in Assignment 2 and then draw a new flowchart and rewrite the C code.\uff08Reduce at least one level of logic nesting\uff09\n\n\nDiscussion\uff0cCooperation and Summary (15pts)\n\n\nIn this part, you will have some options, if you do more options, you will learn more and get more marks.\n\nYou should note this part in your report\n\n\noption 1: Github Discussion\n\n\nComment at this issue and decribe a problem that you meet and how you solve detailedly.\n\n\nNotice that\n\n1. you should not copy and paste your personal report simply.\n2. you should not write a very simple one and your comment will be deleted if you do that.\n3. you should not post meaningless questions.\n\n\noption 2: Simple Presentation\n\n\nHave a simple presentation in the lab class on Monday (4 persons limited). And after the presentation, everyone is encouraged to ask questions and you can get bonus by asking good questions.\n\n\nNotice that\n\n1. The presentation is no more than 5 minutes and there will be 5 extra minutes for discussion.\n2. You should prepare much for it.\n3. First come, first get the opportunity.\n\n\noption 3: Helping others\n\n\nYou can help others to slove any problems the will meet. Detailedly decribe the quesion, the solution and your personal experience as well.\n\n\nNotice that\n\n1. it's no need to consult with others that I help you, you help you to get marks. You can simply send email to me and I will give you the marks.\n\n\noption 4: Personal Summary\n\n\nWrite personal summary for yourself.\nList at least 10 problems that you have met in your learning in c language and decribe the solution as well.\n\n\nNotice that\n\n1. you should not have ten very simple problems, you must let me know your learning method and also the method to solve problems.\n\n\nReport(50% pts for your project ducumenting):\n\n\nThere will be no Report Template this time which means it's all depends on yourself.\n\n\nNotice that\n\n1. the report is the most important document for your project, you should pay more attention to it.\n2. you are supposed to write a report that is friendly to your 'users', which means that you need to consider about the typesetting, the logical structure of the content.\n3. There should contain one item, self grading that you should give a score to evaluate your job as well as a reason.\n\n\nFor example: \nsinew\n\n\nFlowchart Tool: Process On\n\n\nProcess on is a good tool for drawing flowchart.\n\nlink\n\n\nSubmit List\n\n\n\n\nNotice that:\n\n13331314 means your student id.\nthe first assignment need to name your file with your chosen problem id.\n\n\nDeadline and how to submit:\n\n\n18:00 on Nov 7\nth\n, 2015\n\n\n\u5b66\u4e60\u59d4\u5458\u6574\u7406\u597d\u53d1\u5230\u90ae\u7bb1\uff1a\n\n\n\u4e0d\u63a5\u53d7\u4f5c\u4e1a\u5355\u72ec\u53d1\u5230\u90ae\u7bb1\n\n\nNotification:\n\n\n\n\nSubmit after deadline will cause a 30% penalty.\n\n\nIf your file structure of filename is wrong, you will probably get 0 in that part.\n\n\nAny questions, you can ask us and email is better.\n\n\nFull mark will be 100, but you may get more than 100 within this project.\n\n\nYou can use any tool include word, process on to draw a flowchart. You can use any form to write your Pseudocode but should be of high readability. If TA can not understand your Pseudocode clearly, you will get low points.(you can use Chinese to write Pseudocode if you like).", 
            "title": "\u7a0b\u5e8f\u6d41\u7a0b\u56fe\u548c\u4f2a\u4ee3\u7801"
        }, 
        {
            "location": "/posts/old/FlowChart-and-PseudoCode/#_1", 
            "text": "\u5b9e\u9a8c\u76ee\u7684\uff1a\u5f53\u5927\u5bb6\u5b66\u4e60\u4e86\u7a0b\u5e8f\u7684\u63a7\u5236\u7ed3\u6784\u4e4b\u540e\uff0c\u4ee3\u7801\u5c31\u53d8\u5f97\u590d\u6742\u8d77\u6765\u3002\u5728\u8fd9\u65f6\uff0c\u6211\u4eec\u89e3\u51b3\u95ee\u9898\u5c31\u9700\u8981\u6709\u5f88\u4e25\u5bc6\u7684\u903b\u8f91\u601d\u7ef4\u3002\u7a0b\u5e8f\u6d41\u7a0b\u56fe\u548c\u4f2a\u4ee3\u7801\u5c31\u662f\u5e2e\u52a9\u6211\u4eec\u53bb\u63cf\u8ff0\u6211\u4eec\u89e3\u51b3\u95ee\u9898\u7684\u65b9\u6cd5\uff08\u4e5f\u79f0\u4e3a\u7b97\u6cd5\uff09\u7684\u5de5\u5177\u3002\u672c\u6b21\u5b9e\u9a8c\u5728\u4e8e\u8ba9\u5927\u5bb6\u5b66\u4e60\u5982\u4f55\u4f7f\u7528\u8fd9\u4e9b\u5de5\u5177\uff0c\u8fd9\u5bf9\u5927\u5bb6\u4ee5\u540e\u7684\u7f16\u7a0b\u6709\u5f88\u5927\u7684\u5e2e\u52a9\u3002", 
            "title": "\u5b9e\u9a8c\u4e8c\uff1a\u7a0b\u5e8f\u6d41\u7a0b\u56fe\u548c\u4f2a\u4ee3\u7801"
        }, 
        {
            "location": "/posts/old/FlowChart-and-PseudoCode/#1flowchart", 
            "text": "A flowchart is a type of diagram that represents an algorithm, workflow or process, showing the steps as boxes of various kinds, and their order by connecting them with arrows. This diagrammatic representation illustrates a solution model to a given problem. Flowcharts are used in analyzing, designing, documenting or managing a process or program in various fields.  From wikipedia  Detailed Description:  flowchat  There is an example:   And this is the flowchart:", 
            "title": "1.Flowchart(\u7a0b\u5e8f\u6d41\u7a0b\u56fe)"
        }, 
        {
            "location": "/posts/old/FlowChart-and-PseudoCode/#2pseudocode", 
            "text": "Pseudocode is an informal high-level description of the operating principle of a computer program or other algorithm.  From wikipedia  There is an example:  We can describe this question by this way rather than write a C program immediately:  main   {  input   two   integers   height   and   n  initialize   answer   =   0  loop   for   n   times   { \n     input   tree_height \n     if   height   =   tree_height : \n        answer   =   answer   +   1 \n   }  print   answer  }   Pseudocode is used to express your thought, you do not need to care about the grammar.", 
            "title": "2.Pseudocode (\u4f2a\u4ee3\u7801)"
        }, 
        {
            "location": "/posts/old/FlowChart-and-PseudoCode/#pre_assignment", 
            "text": "Learn about Flowchart and Pseudocode.", 
            "title": "Pre Assignment"
        }, 
        {
            "location": "/posts/old/FlowChart-and-PseudoCode/#assignment_0_20pts", 
            "text": "Choose one question from soj.me in week6 in our course and then write the Pseudocode.", 
            "title": "Assignment 0 (20pts)"
        }, 
        {
            "location": "/posts/old/FlowChart-and-PseudoCode/#assignment_1_35pts", 
            "text": "", 
            "title": "Assignment 1 (35pts)"
        }, 
        {
            "location": "/posts/old/FlowChart-and-PseudoCode/#option_1", 
            "text": "Translate the following flowchart into Pseudocode", 
            "title": "option 1"
        }, 
        {
            "location": "/posts/old/FlowChart-and-PseudoCode/#option_2", 
            "text": "Translate the following flowchart into Pseudocode and C programming language program.", 
            "title": "option 2"
        }, 
        {
            "location": "/posts/old/FlowChart-and-PseudoCode/#description", 
            "text": "Several surveys indicate that the taller you are, the higher you can climb the corporate ladder. At TALL Enterprises Inc. this \"de facto standard\" has been properly formalized: your boss is always at least as tall as you are. Furthermore, you can safely assume that your boss earns a bit more than you do. In fact, you can be absolutely sure that your immediate boss is the person who earns the least among all the employees that earn more than you and are at least as tall as you are. Furthermore, if you are the immediate boss of someone, that person is your subordinate, and all his subordinates are your subordinates as well. If you are nobody's boss, then you have no subordinates. As simple as these rules are, many people working for TALL are unsure of to whom they should be turning in their weekly progress report and how many subordinates they have. Write a program that will help in determining for any employee who the immediate boss of that employee is and how many subordinates they have. Quality Assurance at TALL have devised a series of tests to ensure that your program is correct. These test are described below.  May be you can not write out the problem, the only work you will do is write out this program from the following flowchart(Since there are many methods to sort, so you can use one of them, the flowchart does not display in the flow chat, instead a dashed line).", 
            "title": "Description"
        }, 
        {
            "location": "/posts/old/FlowChart-and-PseudoCode/#flowchart", 
            "text": "", 
            "title": "Flowchart"
        }, 
        {
            "location": "/posts/old/FlowChart-and-PseudoCode/#simple_input_and_output", 
            "text": "", 
            "title": "Simple input and output"
        }, 
        {
            "location": "/posts/old/FlowChart-and-PseudoCode/#input", 
            "text": "2\n3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123458\n4\n200002 12234 1832001\n200003 15002 1745201\n200004 18745 1883410\n200001 24834 1921313\n200002", 
            "title": "Input"
        }, 
        {
            "location": "/posts/old/FlowChart-and-PseudoCode/#output", 
            "text": "(0,2)\n(200004,0)", 
            "title": "Output"
        }, 
        {
            "location": "/posts/old/FlowChart-and-PseudoCode/#assignment_2_35pts", 
            "text": "Draw a flowchart from the following C language program which instruct the movement of a robot going on patrol along the wall.  #include  stdio.h \n\n/* this program is used for a robot to walk along\n   a wall next to him.\n*/\n\n/* Note that if the robot s eyes get something\n   whose distance is less than 40cm, there must\n   be an obstacle(wall).\n*/\nconst int SENSOR_DISTANCE = 40; // 40 cm\n\n/*\n  predifined methods:\n  1. void lookLeft() and void lookRight()\n  function: Let the robot to look at the left or right side.\n  2. void lookForward()\n  function: let the robot to look forward.\n  3. int getDistance()\n  function: get a distance from the eye to another.\n  object if there is one.\n  4. void moveStraight()\n  function: go straight for some distance.\n  5.int shutDown()\n  function: shut down the robot.\n*/\n\n\n\nint main() {\n  /* we assume that for the initial state, either\n     the robot s left side or the right side is\n     toward the wall.\n\n     wall = 0 means that the wall is at the left side\n     wall = 1 means that the wall is at the right side\n  */\n  int wall;\n\n  lookLeft();\n  if(getDistance()   SENSOR_DISTANCE) {\n    wall = 0;\n  } else {\n    lookRight();\n    wall = 1;\n  }\n\n  if(wall == 0) {\n    while(shutDown() != 1) {\n      moveStraight();\n      while(1) {\n        lookLeft();\n        if(getDistance()   SENSOR_DISTANCE) {\n          lookForward();\n          if(getDistance()   SENSOR_DISTANCE) {\n            turnRight();\n          } else {\n        break;\n      }\n        } else {\n      turnLeft();\n        }\n      }\n    }\n  } else {\n    do {\n      moveStraight();\n      while(1) {\n        lookRight();\n        if(getDistance()   SENSOR_DISTANCE) {\n          lookForward();\n          if(getDistance()   SENSOR_DISTANCE) {\n            turnLeft();\n          } else {\n        break;\n      }\n        } else {\n      turnRight();\n        }\n      }\n    } while (shutDown() != 1);\n  }\n\n\n  return 0;\n}", 
            "title": "Assignment 2 (35pts)"
        }, 
        {
            "location": "/posts/old/FlowChart-and-PseudoCode/#extended_assignment_10pts", 
            "text": "", 
            "title": "Extended Assignment (10pts)"
        }, 
        {
            "location": "/posts/old/FlowChart-and-PseudoCode/#option_3", 
            "text": "Draw a flowchart  and write Pseudocode as well as a C language program for the following description.", 
            "title": "option 1"
        }, 
        {
            "location": "/posts/old/FlowChart-and-PseudoCode/#option_4", 
            "text": "Simplify the logic in Assignment 2 and then draw a new flowchart and rewrite the C code.\uff08Reduce at least one level of logic nesting\uff09", 
            "title": "option 2"
        }, 
        {
            "location": "/posts/old/FlowChart-and-PseudoCode/#discussioncooperation_and_summary_15pts", 
            "text": "In this part, you will have some options, if you do more options, you will learn more and get more marks. You should note this part in your report", 
            "title": "Discussion\uff0cCooperation and Summary (15pts)"
        }, 
        {
            "location": "/posts/old/FlowChart-and-PseudoCode/#option_1_github_discussion", 
            "text": "Comment at this issue and decribe a problem that you meet and how you solve detailedly.  Notice that \n1. you should not copy and paste your personal report simply.\n2. you should not write a very simple one and your comment will be deleted if you do that.\n3. you should not post meaningless questions.", 
            "title": "option 1: Github Discussion"
        }, 
        {
            "location": "/posts/old/FlowChart-and-PseudoCode/#option_2_simple_presentation", 
            "text": "Have a simple presentation in the lab class on Monday (4 persons limited). And after the presentation, everyone is encouraged to ask questions and you can get bonus by asking good questions.  Notice that \n1. The presentation is no more than 5 minutes and there will be 5 extra minutes for discussion.\n2. You should prepare much for it.\n3. First come, first get the opportunity.", 
            "title": "option 2: Simple Presentation"
        }, 
        {
            "location": "/posts/old/FlowChart-and-PseudoCode/#option_3_helping_others", 
            "text": "You can help others to slove any problems the will meet. Detailedly decribe the quesion, the solution and your personal experience as well.  Notice that \n1. it's no need to consult with others that I help you, you help you to get marks. You can simply send email to me and I will give you the marks.", 
            "title": "option 3: Helping others"
        }, 
        {
            "location": "/posts/old/FlowChart-and-PseudoCode/#option_4_personal_summary", 
            "text": "Write personal summary for yourself.\nList at least 10 problems that you have met in your learning in c language and decribe the solution as well.  Notice that \n1. you should not have ten very simple problems, you must let me know your learning method and also the method to solve problems.", 
            "title": "option 4: Personal Summary"
        }, 
        {
            "location": "/posts/old/FlowChart-and-PseudoCode/#report50_pts_for_your_project_ducumenting", 
            "text": "There will be no Report Template this time which means it's all depends on yourself.  Notice that \n1. the report is the most important document for your project, you should pay more attention to it.\n2. you are supposed to write a report that is friendly to your 'users', which means that you need to consider about the typesetting, the logical structure of the content.\n3. There should contain one item, self grading that you should give a score to evaluate your job as well as a reason.  For example:  sinew", 
            "title": "Report(50% pts for your project ducumenting):"
        }, 
        {
            "location": "/posts/old/FlowChart-and-PseudoCode/#flowchart_tool_process_on", 
            "text": "Process on is a good tool for drawing flowchart. link", 
            "title": "Flowchart Tool: Process On"
        }, 
        {
            "location": "/posts/old/FlowChart-and-PseudoCode/#submit_list", 
            "text": "Notice that: \n13331314 means your student id.\nthe first assignment need to name your file with your chosen problem id.", 
            "title": "Submit List"
        }, 
        {
            "location": "/posts/old/FlowChart-and-PseudoCode/#deadline_and_how_to_submit", 
            "text": "18:00 on Nov 7 th , 2015  \u5b66\u4e60\u59d4\u5458\u6574\u7406\u597d\u53d1\u5230\u90ae\u7bb1\uff1a  \u4e0d\u63a5\u53d7\u4f5c\u4e1a\u5355\u72ec\u53d1\u5230\u90ae\u7bb1", 
            "title": "Deadline and how to submit:"
        }, 
        {
            "location": "/posts/old/FlowChart-and-PseudoCode/#notification", 
            "text": "Submit after deadline will cause a 30% penalty.  If your file structure of filename is wrong, you will probably get 0 in that part.  Any questions, you can ask us and email is better.  Full mark will be 100, but you may get more than 100 within this project.  You can use any tool include word, process on to draw a flowchart. You can use any form to write your Pseudocode but should be of high readability. If TA can not understand your Pseudocode clearly, you will get low points.(you can use Chinese to write Pseudocode if you like).", 
            "title": "Notification:"
        }, 
        {
            "location": "/posts/old/Memory-Error-Summary-in-c++/", 
            "text": "A small summary for 15 C++ learning\n\n\nWhat's the problem with my program? Why eden fetch me a lot of error information?\n\n\n\n\nAnswer: Eden, the online judge system uses a memory check tool named \"valgrind\" for grading assignment. There are several kinds memory errors you will open meet.\n\n\n1. Memory Leak:\n\nThe picture below show this error. It's your mistake that a block of memory become unreachable when you take pointer operations. This will only take place with heap allocation when you are setting a pointer to point to another block of memory while ignoring the legacy memory.\n\n\nFor example, in a list:\n\nhead\n \n=\n \nhead\n-\nnext\n;\n\n\n\n\nThe memory block which was pointed by pointer head is definitely lost after the assign operation above.\n\n\n2. Invalid read or write of memory:\n\nThis kind of mistake is very common because c++ compiler will not check invalid memory access. Mostly, you are accessing an element of an array of which the index is out of range.\n\n\n\n\nFor example:\n\nint\n \n*\n \na\n \n=\n \nnew\n \nint\n[\n5\n]();\n\n\na\n[\n5\n]\n \n=\n \n0\n;\n\n\n\n\na[5] is an invalid element of the array. And valgrind will throw \"Invalid write of size 4.... Address 0x5202054 is 0 bytes after a block of size 20 alloc'd\". This means that the address a+5 is not allocated by statement \nint * a = new int[5]()\n.\nAlso you will get runtime error in this case.\n\n\n3. Condition jump or move depends on uninitialized variables.\n\nThis means that some of your conditional statements, i.e. for loop, if statement or etc. use uninitialized variables.\n\n\nFor example:\n\n\nint * a = new int[5]();\nif(a[0] == \n0\n) {\n  cout \n \nBad Ta!\n \n endl;\n}\n\n\n\n\nFirst of all, if the programmer forget to call \ndelete a\n, it will cause a memory leak error.\nWell, the if statement above uses a[0], which has not been initialized. Then valgrind will detect and report the error for you.\n\n\n4. Mismatched new/malloc and delete/free.\n\nAs we all know, when you are writing c++ code using dynamic memory allocation, you are supposed to manage the heap memory by your self. New and delete are \"paired operators\" which means that when you call 3 of new, you should call 3 of delete after that.\n\n\nFor a mismatch example:(Tecent recruitment examination)\n\n\nint * a = new int[10];\nfree(a);\n\n\n\n\nThis will cause a mismatched error in valgrind.\nWhy?Think about what's difference between new and malloc as well as delete and free? (hint: constructor and destructor)\n\n\n## How can I fix these issues?\n\n\nBasically, you should know the concepts in c++ programming, or you will know nothing when you meet these issues.\n\n\nAfter that:\n\n\nEstablishing good coding habits. A good coding style does not indicate that you pass the google style check in the system. This is not good enough.You should always be careful when you meet a pointer which is an annoying but powerful tool and you should remember to delete the pointer when you are using heap allocation to get memory.\n\n\nBe careful to these parts of a class:\n1. default constructor in which you are supposes to initialize the member variables. Note that the compiler will automatically add an default constructor if you do not defined one.\n2. copy constructor in which you should think about show copy and deep copy and also, you should remember to initialize the member variables because this is also a constructor.\n3. assign operator which is similar to the constructors while you need to think about to clear the legacy content of \"this\" object. Also remember the condition that the parameter of the assign operator is the object itself, i.e. determine whether \nthis == \nanother\n or not.\n\nLater, if I have time, I will choose some codes from your exercises submissions to put here for you to have a discussion \"What is good style of coding?\"\n4. Using memory check tool.\nWe can use memory check tools like valgrind. In fact, it's a powerful memory check tool.\nI remember valgrind can be simply installed in unbuntu using apt-get. You can referenced to this website for more details. Don't be annoyed when you see a lot of English words, please be patient to read it through.\n\n\nvalgrind\n\n\nIt's quite easy to use this tool, just compile you code and then run the program with a system argument which should be your executable program name.\n\n\nvalgrind ./a.out\n\n\n\n\nor you can have more options, like to check full memory leak.\n\n\nvalgrind --leak-check\n=\nfull ./a.out\n\n\n\n\nor\n\n\nvalgrind -v ./a.out\n\n\n\n\ncheck \nvalgrind -h\n for more details.\n\n\nyou can see a lot of information after running the program.\n\n\nBe patient when you meet errors. This is a test that must be experienced before you become a supper programmer in c++.", 
            "title": "\u5185\u5b58\u9519\u8bef\u603b\u7ed3"
        }, 
        {
            "location": "/posts/old/Memory-Error-Summary-in-c++/#a_small_summary_for_15_c_learning", 
            "text": "", 
            "title": "A small summary for 15 C++ learning"
        }, 
        {
            "location": "/posts/old/Memory-Error-Summary-in-c++/#whats_the_problem_with_my_program_why_eden_fetch_me_a_lot_of_error_information", 
            "text": "Answer: Eden, the online judge system uses a memory check tool named \"valgrind\" for grading assignment. There are several kinds memory errors you will open meet.  1. Memory Leak: \nThe picture below show this error. It's your mistake that a block of memory become unreachable when you take pointer operations. This will only take place with heap allocation when you are setting a pointer to point to another block of memory while ignoring the legacy memory.  For example, in a list: head   =   head - next ;   The memory block which was pointed by pointer head is definitely lost after the assign operation above.  2. Invalid read or write of memory: \nThis kind of mistake is very common because c++ compiler will not check invalid memory access. Mostly, you are accessing an element of an array of which the index is out of range.   For example: int   *   a   =   new   int [ 5 ]();  a [ 5 ]   =   0 ;   a[5] is an invalid element of the array. And valgrind will throw \"Invalid write of size 4.... Address 0x5202054 is 0 bytes after a block of size 20 alloc'd\". This means that the address a+5 is not allocated by statement  int * a = new int[5]() .\nAlso you will get runtime error in this case.  3. Condition jump or move depends on uninitialized variables. \nThis means that some of your conditional statements, i.e. for loop, if statement or etc. use uninitialized variables.  For example:  int * a = new int[5]();\nif(a[0] ==  0 ) {\n  cout    Bad Ta!    endl;\n}  First of all, if the programmer forget to call  delete a , it will cause a memory leak error.\nWell, the if statement above uses a[0], which has not been initialized. Then valgrind will detect and report the error for you.  4. Mismatched new/malloc and delete/free. \nAs we all know, when you are writing c++ code using dynamic memory allocation, you are supposed to manage the heap memory by your self. New and delete are \"paired operators\" which means that when you call 3 of new, you should call 3 of delete after that.  For a mismatch example:(Tecent recruitment examination)  int * a = new int[10];\nfree(a);  This will cause a mismatched error in valgrind.\nWhy?Think about what's difference between new and malloc as well as delete and free? (hint: constructor and destructor)  ## How can I fix these issues?  Basically, you should know the concepts in c++ programming, or you will know nothing when you meet these issues.  After that:  Establishing good coding habits. A good coding style does not indicate that you pass the google style check in the system. This is not good enough.You should always be careful when you meet a pointer which is an annoying but powerful tool and you should remember to delete the pointer when you are using heap allocation to get memory.  Be careful to these parts of a class:\n1. default constructor in which you are supposes to initialize the member variables. Note that the compiler will automatically add an default constructor if you do not defined one.\n2. copy constructor in which you should think about show copy and deep copy and also, you should remember to initialize the member variables because this is also a constructor.\n3. assign operator which is similar to the constructors while you need to think about to clear the legacy content of \"this\" object. Also remember the condition that the parameter of the assign operator is the object itself, i.e. determine whether  this ==  another  or not. \nLater, if I have time, I will choose some codes from your exercises submissions to put here for you to have a discussion \"What is good style of coding?\"\n4. Using memory check tool.\nWe can use memory check tools like valgrind. In fact, it's a powerful memory check tool.\nI remember valgrind can be simply installed in unbuntu using apt-get. You can referenced to this website for more details. Don't be annoyed when you see a lot of English words, please be patient to read it through.  valgrind  It's quite easy to use this tool, just compile you code and then run the program with a system argument which should be your executable program name.  valgrind ./a.out  or you can have more options, like to check full memory leak.  valgrind --leak-check = full ./a.out  or  valgrind -v ./a.out  check  valgrind -h  for more details.  you can see a lot of information after running the program.  Be patient when you meet errors. This is a test that must be experienced before you become a supper programmer in c++.", 
            "title": "What's the problem with my program? Why eden fetch me a lot of error information?"
        }, 
        {
            "location": "/posts/old/SimpleList/", 
            "text": "Introduction\n\n\nList a a kind of data structure that is a linear collection of data elements, called nodes pointing to the next node by means of pointer. It is a data structure consisting of a group of nodes which together represent a sequence. Under the simplest form, each node is composed of data and a reference (in other words, a link) to the next node in the sequence; more complex variants add additional links. This structure allows for efficient insertion or removal of elements from any position in the sequence.\n\n\n\n\nList Operation\n\n\n1. Insert\n\n\n\n\n2.Deletion\n\n\n\n\n3. Element Access\n\n\n\n\nSome Contracts\n\n\n1. Position for Insertion\n\n\n\n\n2. Position for Deletion\n\n\n\n\nSome Knowledge In C for Last Semester\n\n\n1. Memory distribution map for a runtime program (very important for your 4-year study)\n\n\n\n\nFrom Professor Wan Hai's courseWare\n\n\nThis is an overview for a program when it's loaded into the memory of the computer. There are totally 4 area for it, Code area, Static area, Heap and stack.\nCode area: This area is used to store program codes(instructions for cpu to execute)\nStatic area: This area is for the ralatively \u2018static\u2019 variables. Global variables, static local variables, static global variables are allocated in the static storage area.\nHeap: This area is management by the operating system and it's shared by other programs. You can get dynamic memory allocations in this area. \nThis is the area we need to use in list\n\nStack: The stack is a area of memory that allocated by the compile. All variables declared in stack.\n\nNotice that stack and heap in operating system are totally different in data structure\n\n(\u6ce8\u610f\uff1a\u8fd9\u91cc\u6240\u8bf4\u7684\u5806\u548c\u6808\u662f\u64cd\u4f5c\u7cfb\u7edf\u7684\u6982\u5ff5\uff0c\u8ddf\u6570\u636e\u7ed3\u6784\u4e2d\u7684\u5806\u548c\u6808\u4e0d\u540c)\n\n\nFor example:\n\n\n#include \nmalloc.h\n\nint main() {\n   int a;  // allocated in stack\n   int * b = (int *)malloc(sizeof(int));  // allocated in heap\n   free(b);\n   return;\n}\n```\n\n\n\n\nNotice that we have a operation before the program end. \nfree(b)\n. Because we use the memory in the heap which means that these memory should be managed by the programmer. Even though the memory will be free by a mordern operating system, we should prevent memory lost (memory leak).\nFor example:\n\n\n```c\nint main() {\n   int * a = (int *)malloc(sizeof(int));  // allocated in heap, memory area1\n   int * a = (int *)malloc(sizeof(int));  // allocated in heap, memory area2\n   return;\n}\n\n\n\n\nThe example above cause a memory leak problem because pointer point to another memory area and the previous memory area1 is lost.\n\n\n2. Malloc() to get memory from the heap\n\n\nThe two examples above show how to get memory in heap. In fact, we it's a serial of functions.\nC language with the memory of the functions are mainly calloc, alloca, malloc, free, realloc and so on.\n\n1\n alloca is the application of the stack to the memory, so there is no need to release.\n\n2\n malloc allocates memory is located in the heap, and there is no memory of the contents of the initial memory, so after the basic malloc, call the function memset to initialize this part of the memory space.\n\n3\n calloc will initialize this part of the memory, set to 0\n\n4\n realloc is the size of the memory of the malloc application.\n\n5\n The heap needs to be released by the function free.\n\n\nNotice that everytime you apply memory from heap, you should remember it and delete it(free) when your use of it is end.\n\n\nint main() {\n   int * a = malloc(sizeof(int));\n\n   // code using a\n\n   free(a);\n}\n\n\n\n\nFunction Prototype\n\n\nextern void *malloc(unsigned int num_bytes);\n\n\n\n\n\u6ce8\u610f\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u51fd\u6570\uff0c\u4e00\u5b9a\u8981\u770b\u51fd\u6570\u539f\u578b\uff0c\u51fd\u6570\u539f\u578b\u91cc\u9762\u5305\u542b\u4e86\u8fd9\u4e2a\u51fd\u6570\u63a5\u53e3\u529f\u80fd\u7684\u5f88\u591a\u4fe1\u606f\u3002\n\u8fd9\u4e2a\u51fd\u6570\u7684\u540d\u79f0\u662fmalloc\uff0c\u52a8\u6001\u5206\u914d\u5185\u5b58\n\u53c2\u6570\u662funsigned int num_bytes\uff0c\u610f\u601d\u662f\u5206\u914d\u7684\u5185\u5b58\u7684\u5b57\u8282\u6570\u3002\n\u8fd4\u56de\u503c\u662fvoid \u6307\u9488\uff0c\u7406\u8bba\u662f\u5c31\u662f\u5e94\u8be5\u6307\u5411\u88ab\u5206\u914d\u7684\u5185\u5b58\u3002\n\n\n\u7531\u4e8e\u8fd4\u56de\u7684\u6307\u9488\u662f\u4e00\u79cd\u6cdb\u578b\u7f16\u7a0b\u601d\u60f3\u4e2d\u7684\u65e0\u7c7b\u578b\u6307\u9488\uff0c\u6240\u4ee5\u5e94\u8be5\u5f3a\u5236\u8f6c\u6362\u4e3a\u4f60\u9700\u8981\u7684\u7c7b\u578b\u3002\n\n\n\u6ce8\u610f\uff1a\u5728\u4e00\u6b21malloc\u51fd\u6570\u8c03\u7528\u4e2d\uff0c\u8fd4\u56de\u7684\u4e00\u6bb5\u5185\u5b58\u662f\u8fde\u7eed\u7684\n\n\n3. Memory Leak\n\n\n\n\nFrom Wikipedia, the free encyclopedia\nIn computer science, a memory leak is a type of resource leak that occurs when a computer program incorrectly manages memory allocations[1] in such a way that memory which is no longer needed is not released. In object-oriented programming, a memory leak may happen when an object is stored in memory but cannot be accessed by the running code.[2] A memory leak has symptoms similar to a number of other problems (see below) and generally can only be diagnosed by a programmer with access to the program's source code.\n\n\nBecause they can exhaust available system memory as an application runs, memory leaks are often the cause of or a contributing factor to software aging.\n\n\n\n\nConsequences\n\n\nA memory leak can diminish the performance of the computer by reducing the amount of available memory. Eventually, in the worst case, too much of the available memory may become allocated and all or part of the system or device stops working correctly, the application fails, or the system slows down vastly due to thrashing.\n\n\nMemory leaks may not be serious or even detectable by normal means. In modern operating systems, normal memory used by an application is released when the application terminates. This means that a memory leak in a program that only runs for a short time may not be noticed and is rarely serious.\n\n\nMuch more serious leaks include those:\n\n\nwhere the program runs for an extended time and consumes additional memory over time, such as background tasks on servers, but especially in embedded devices which may be left running for many years\nwhere new memory is allocated frequently for one-time tasks, such as when rendering the frames of a computer game or animated video\nwhere the program can request memory \u2014 such as shared memory \u2014 that is not released, even when the program terminates\nwhere memory is very limited, such as in an embedded system or portable device\nwhere the leak occurs within the operating system or memory manager\nwhen a system device driver causes the leak\nrunning on an operating system that does not automatically release memory on program termination. Often on such machines if memory is lost, it can only be reclaimed by a reboot, an example of such a system being AmigaOS.[citation neede\n\n\n\n\nFrom \u767e\u5ea6\u767e\u79d1\n\n\n\u5185\u5b58\u6cc4\u6f0f\u4e5f\u79f0\u4f5c\u201c\u5b58\u50a8\u6e17\u6f0f\u201d\uff0c\u7528\u52a8\u6001\u5b58\u50a8\u5206\u914d\u51fd\u6570\u52a8\u6001\u5f00\u8f9f\u7684\u7a7a\u95f4\uff0c\u5728\u4f7f\u7528\u5b8c\u6bd5\u540e\u672a\u91ca\u653e\uff0c\u7ed3\u679c\u5bfc\u81f4\u4e00\u76f4\u5360\u636e\u8be5\u5185\u5b58\u5355\u5143\u3002\u76f4\u5230\u7a0b\u5e8f\u7ed3\u675f\u3002\uff08\u5176\u5b9e\u8bf4\u767d\u4e86\u5c31\u662f\u8be5\u5185\u5b58\u7a7a\u95f4\u4f7f\u7528\u5b8c\u6bd5\u4e4b\u540e\u672a\u56de\u6536\uff09\u5373\u6240\u8c13\u5185\u5b58\u6cc4\u6f0f\u3002\n\n\n\u5185\u5b58\u6cc4\u6f0f\u5f62\u8c61\u7684\u6bd4\u55bb\u662f\u201c\u64cd\u4f5c\u7cfb\u7edf\u53ef\u63d0\u4f9b\u7ed9\u6240\u6709\u8fdb\u7a0b\u7684\u5b58\u50a8\u7a7a\u95f4\u6b63\u5728\u88ab\u67d0\u4e2a\u8fdb\u7a0b\u69a8\u5e72\u201d\uff0c\u6700\u7ec8\u7ed3\u679c\u662f\u7a0b\u5e8f\u8fd0\u884c\u65f6\u95f4\u8d8a\u957f\uff0c\u5360\u7528\u5b58\u50a8\u7a7a\u95f4\u8d8a\u6765\u8d8a\u591a\uff0c\u6700\u7ec8\u7528\u5c3d\u5168\u90e8\u5b58\u50a8\u7a7a\u95f4\uff0c\u6574\u4e2a\u7cfb\u7edf\u5d29\u6e83\u3002\u6240\u4ee5\u201c\u5185\u5b58\u6cc4\u6f0f\u201d\u662f\u4ece\u64cd\u4f5c\u7cfb\u7edf\u7684\u89d2\u5ea6\u6765\u770b\u7684\u3002\u8fd9\u91cc\u7684\u5b58\u50a8\u7a7a\u95f4\u5e76\u4e0d\u662f\u6307\u7269\u7406\u5185\u5b58\uff0c\u800c\u662f\u6307\u865a\u62df\u5185\u5b58\u5927\u5c0f\uff0c\u8fd9\u4e2a\u865a\u62df\u5185\u5b58\u5927\u5c0f\u53d6\u51b3\u4e8e\u78c1\u76d8\u4ea4\u6362\u533a\u8bbe\u5b9a\u7684\u5927\u5c0f\u3002\u7531\u7a0b\u5e8f\u7533\u8bf7\u7684\u4e00\u5757\u5185\u5b58\uff0c\u5982\u679c\u6ca1\u6709\u4efb\u4f55\u4e00\u4e2a\u6307\u9488\u6307\u5411\u5b83\uff0c\u90a3\u4e48\u8fd9\u5757\u5185\u5b58\u5c31\u6cc4\u6f0f\u4e86\u3002\n\n\n\u4ece\u7528\u6237\u4f7f\u7528\u7a0b\u5e8f\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u5185\u5b58\u6cc4\u6f0f\u672c\u8eab\u4e0d\u4f1a\u4ea7\u751f\u4ec0\u4e48\u5371\u5bb3\uff0c\u4f5c\u4e3a\u4e00\u822c\u7684\u7528\u6237\uff0c\u6839\u672c\u611f\u89c9\u4e0d\u5230\u5185\u5b58\u6cc4\u6f0f\u7684\u5b58\u5728\u3002\u771f\u6b63\u6709\u5371\u5bb3\u7684\u662f\u5185\u5b58\u6cc4\u6f0f\u7684\u5806\u79ef\uff0c\u8fd9\u4f1a\u6700\u7ec8\u6d88\u8017\u5c3d\u7cfb\u7edf\u6240\u6709\u7684\u5185\u5b58\u3002\u4ece\u8fd9\u4e2a\u89d2\u5ea6\u6765\u8bf4\uff0c\u4e00\u6b21\u6027\u5185\u5b58\u6cc4\u6f0f\u5e76\u6ca1\u6709\u4ec0\u4e48\u5371\u5bb3\uff0c\u56e0\u4e3a\u5b83\u4e0d\u4f1a\u5806\u79ef\uff0c\u800c\u9690\u5f0f\u5185\u5b58\u6cc4\u6f0f\u5371\u5bb3\u6027\u5219\u975e\u5e38\u5927\uff0c\u56e0\u4e3a\u8f83\u4e4b\u4e8e\u5e38\u53d1\u6027\u548c\u5076\u53d1\u6027\u5185\u5b58\u6cc4\u6f0f\u5b83\u66f4\u96be\u88ab\u68c0\u6d4b\u5230\u3002\n\n\n\n\n\u7b80\u5355\u6765\u8bb2\uff0c\u5185\u5b58\u6cc4\u9732\u5c31\u662f\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58\u6ca1\u6709\u5728\u4f7f\u7528\u5b8c\u4e4b\u540e\u8fdb\u884c\u91ca\u653e\uff0c\u5bfc\u81f4\u5185\u5b58\u5783\u573e\u5806\u79ef\u3002\n\n\n\u8fd9\u6837\u7684\u5371\u5bb3\u6709\u53ef\u80fd\u76f4\u63a5\u8ba9\u4f60\u7684\u64cd\u4f5c\u7cfb\u7edf\u5d29\u6e83\u6389\uff08\u53ef\u4ee5\u81ea\u5df1\u505a\u4e0b\u5b9e\u9a8c\uff09\n\n\nFor example:\n\n\nint main() {\n    int * c = (int *)malloc(sizeof(int) * 100);\n    c = NULL;\n    while(1);\n}\n\n\n\n\n\u4e0a\u8ff0\u4ee3\u7801\u5206\u914d\u4e86100\u4e2aint\u7c7b\u578b\u5927\u5c0f\u7684\n\u8fde\u7eed\n\u5185\u5b58\u5355\u5143\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u65b9\u5f0f\u5206\u914d\u52a8\u6001\u6570\u7ec4\u3002\u4e0a\u8ff0\u4ee3\u7801\u5206\u914d\u7684\u5c31\u662f\u53ef\u4ee5\u7406\u89e3\u6210100\u4e2aint\u7684\u6570\u7ec4\u3002\n\n\n\u8fd0\u884c\u4e0a\u8ff0\u7a0b\u5e8f\uff0c\u5728\u8fd0\u884c\u5230while(1)\u65f6\u5019\u53d1\u751f\u4e86\u5185\u5b58\u6cc4\u9732\uff0c\u56e0\u4e3a\u539f\u6765\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58\u5730\u5740\u4e22\u5931\u4e86\uff01\u4f60\u7684\u7a0b\u5e8f\u65e0\u6cd5\u518d\u83b7\u5f97\u90a3100\u4e2a\u5728\u5806\u4e2d\u7533\u8bf7\u7684\u5185\u5b58\u5355\u5143\u3002\u53ef\u662f\u8fd9\u4e9b\u5185\u5b58\u5355\u5143\u4ecd\u7136\u5360\u636e\u7740\u5185\u5b58\uff0c\u4e5f\u5c31\u662f\u5185\u5b58\u5783\u573e\u3002\u5728\u7f16\u5199\u52a8\u6001\u5206\u914d\u7684\u7a0b\u5e8f\u65f6\uff0c\u5f88\u5bb9\u6613\u51fa\u73b0\u8fd9\u6837\u7684\u9519\u8bef\u3002\u6b63\u786e\u505a\u6cd5\u662f\u5728\u8fd9\u4e2a\u6307\u9488\u4e0d\u7528\u7684\u60c5\u51b5\u4e0b\uff0c\u5c06\u5176free\u3002\n\n\nint main() {\n    int * c = (int *)malloc(sizeof(int) * 100);\n    free(c);\n    c = NULL;\n    while(1);\n}\n\n\n\n\n\u6709\u65f6\u5019\u6709\u4e9b\u5185\u5b58\u6cc4\u9732\u662f\u81ea\u5df1\u770b\u4e0d\u51fa\u6765\u7684\uff0c\u7279\u522b\u5f53\u51fd\u6570\u53d8\u5f97\u590d\u6742\u8d77\u6765\u7684\u65f6\u5019\u3002\n\u4e0b\u5217\u7a0b\u5e8f\u4e3a\n\u6b7b\u4ea1\u7a0b\u5e8f\n\uff0c\u53ef\u4ee5\u8bd5\u8bd5\u8fd0\u884c\u770b\u770b\u81ea\u5df1\u7535\u8111\u7684\u5185\u5b58\u53d8\u5316\u3002\n\n\n#include \nstdio.h\n\n#include \nmalloc.h\n\nint main() {\n while(1) {\n    malloc(100);\n  }\n  return 0; \n}\n\n\n\n\n3. List\uff08\u94fe\u8868\u6216\u7ebf\u6027\u8868\uff09\n\n\nAn introduction to List\n\n\n\n\nIn computer science, a list or sequence is an abstract data type that represents an ordered sequence of values, where the same value may occur more than once. An instance of a list is a computer representation of the mathematical concept of a finite sequence; the (potentially) infinite analog of a list is a stream.[1]:\u00a73.5 Lists are a basic example of containers, as they contain other values. If the same value occurs multiple times, each occurrence is considered a distinct item.\n\n\n\nA singly linked list structure, implementing a list with 3 integer elements.\nThe name list is also used for several concrete data structures that can be used to implement abstract lists, especially linked lists.\n\n\nMany programming languages provide support for list data types, and have special syntax and semantics for lists and list operations. A list can often be constructed by writing the items in sequence, separated by commas, semicolons, or spaces, within a pair of delimiters such as parentheses '()', brackets '[]', braces '{}', or angle brackets '\n'. Some languages may allow list types to be indexed or sliced like array types, in which case the data type is more accurately described as an array. In object-oriented programming languages, lists are usually provided as instances of subclasses of a generic \"list\" class, and traversed via separate iterators. List data types are often implemented using array data structures or linked lists of some sort, but other data structures may be more appropriate for some applications. In some contexts, such as in Lisp programming, the term list may refer specifically to a linked list rather than an array.\n\n\nIn type theory and functional programming, abstract lists are usually defined inductively by two operations: nil that yields the empty list, and cons, which adds an item at the beginning of a list.[2]\n\n\n\n\nFrom wikipedia\n\n\nThe operations about list are appending, deleting, modifying, querying.\n\n\nwe use this simple list again:\n\n\n\n\n\n\n\nIf delete the second node:\n\n\nnode* save = head-\nnext;\nhead-\nnext = head-\nnext-\nnext;\nfree(save);\n\n\n\n\n\n\n2.If append a node at the end of the list\n\n\nnode* last = head;\nwhile(last-\nnext != NULL) {\n    last = last-\nnext;\n}\n\nlast-\nnext = (node*)malloc(sizeof(node));\nlast-\nnext-\ndata = data;\nlast-\nnext-\nnext = NULL;\n\n\n\n\n3.Traversal\n\n\nnode * temp = head;\nwhile(temp != NULL) {\n    Traversal(temp);\n    temp = temp-\nnext;\n}\n\n\n\n\nDeep Thinking(120pts, 20 for each)\n\n\n1.Look at the following function:\n\n\nstatic void myFunction() { int a; }\n\n\n\n\n(1) Which area in memory does the function store? And which dose the variable \nint a\n?\n\nfunction store : Code Area\nvariable 'int a': (function) stack\n\n(2) What's the advantages of using static functions?\n\n\n\n\nstatic says the function has internal linkage. This means it will not be linked with other uses of the same identifier in other files (translation units).\nFor example, suppose in Tree.c I have a function that operates on Tree structures, and I have some local subroutine called UpdateNode that operates on part of the Tree. Further suppose that in List.c, I have a function that operates on List structures, and it also has some local subroutine called UpdateNode that is just for List structures, not for Tree structures.\nIf I left both of these subroutines with external linkage, the linker would complain about multiple definitions. By marking them with internal linkage with static, this problem is avoided.\n\nFrom stack overflow\n\n\n\n\n2. Look at the following program which is attempt to allocate a dynamic array.\n\n\n#include \nmalloc.h\n\n\nint main() {\n    char ** strs;\n    int n ,m;\n    int i;\n\n    scanf(\n%d%d\n, \nn, \nm);\n\n    strs = (char **)malloc(sizeof(char *) * n);\n\n    for(i = 0; i \n n; i++) {\n    strs[i] = (char *)malloc(sizeof(char) * m);\n    }\n\n\n   // code for the 2d array\n   // free operations omited\n    return 0;\n}\n\n\n\n\nCan we create an 2D array in the heap using this way? Give your explanations and give another way that can allocate a dynamic 2D array\n\nNo, the 2D dynamic array is discontinuous in 1D memory space which does not fit the accurate 2D array definition.\n\n\nissues:\n1. When call \nmemset\n or other memory operation on the whole block of memory, you can not get your expected result.\n2. When pass the array into a function as parameter.\nLook at the following program:\n\n\n#include \nmalloc.h\n\n\nvoid test(char strs[][20], int m, int n) {\n    int i, j;\n    for(i = 0; i \n m; i++) {\n    for(j = 0; j \n n; j++) {\n        printf(\n%p \n, \nstrs[i][j]);\n    }\n    printf(\n\\n\n);\n    }\n}\n\nint main() {\n    char ** strs;\n    int n ,m;\n    int i, j;\n\n    scanf(\n%d%d\n, \nn, \nm);\n\n    strs = (char **)malloc(sizeof(char *) * n);\n\n    printf(\n%p\\n\n, strs);\n\n    for(i = 0; i \n n; i++) {\n    strs[i] = (char *)malloc(sizeof(char) * m);\n    }\n\n    for(i = 0; i \n n; i++) {\n    for(j = 0; j \n m; j++) {\n        printf(\n%p \n, \nstrs[i][j]);\n    }\n    printf(\n\\n\n);\n    }\n\n    printf(\n\\n\n);\n\n    test(strs, 10, 20);\n\n    printf(\n\\n\n);\n\n\n\n   // free operations omited\n    return 0;\n}\n\n\n\n\nResult:\n\n\n10 20\n0xe04010\n0xe04070 0xe04071 0xe04072 0xe04073 0xe04074 0xe04075 0xe04076 0xe04077 0xe04078 0xe04079 0xe0407a 0xe0407b 0xe0407c 0xe0407d 0xe0407e 0xe0407f 0xe04080 0xe04081 0xe04082 0xe04083 \n0xe04090 0xe04091 0xe04092 0xe04093 0xe04094 0xe04095 0xe04096 0xe04097 0xe04098 0xe04099 0xe0409a 0xe0409b 0xe0409c 0xe0409d 0xe0409e 0xe0409f 0xe040a0 0xe040a1 0xe040a2 0xe040a3 \n0xe040b0 0xe040b1 0xe040b2 0xe040b3 0xe040b4 0xe040b5 0xe040b6 0xe040b7 0xe040b8 0xe040b9 0xe040ba 0xe040bb 0xe040bc 0xe040bd 0xe040be 0xe040bf 0xe040c0 0xe040c1 0xe040c2 0xe040c3 \n0xe040d0 0xe040d1 0xe040d2 0xe040d3 0xe040d4 0xe040d5 0xe040d6 0xe040d7 0xe040d8 0xe040d9 0xe040da 0xe040db 0xe040dc 0xe040dd 0xe040de 0xe040df 0xe040e0 0xe040e1 0xe040e2 0xe040e3 \n0xe040f0 0xe040f1 0xe040f2 0xe040f3 0xe040f4 0xe040f5 0xe040f6 0xe040f7 0xe040f8 0xe040f9 0xe040fa 0xe040fb 0xe040fc 0xe040fd 0xe040fe 0xe040ff 0xe04100 0xe04101 0xe04102 0xe04103 \n0xe04110 0xe04111 0xe04112 0xe04113 0xe04114 0xe04115 0xe04116 0xe04117 0xe04118 0xe04119 0xe0411a 0xe0411b 0xe0411c 0xe0411d 0xe0411e 0xe0411f 0xe04120 0xe04121 0xe04122 0xe04123 \n0xe04130 0xe04131 0xe04132 0xe04133 0xe04134 0xe04135 0xe04136 0xe04137 0xe04138 0xe04139 0xe0413a 0xe0413b 0xe0413c 0xe0413d 0xe0413e 0xe0413f 0xe04140 0xe04141 0xe04142 0xe04143 \n0xe04150 0xe04151 0xe04152 0xe04153 0xe04154 0xe04155 0xe04156 0xe04157 0xe04158 0xe04159 0xe0415a 0xe0415b 0xe0415c 0xe0415d 0xe0415e 0xe0415f 0xe04160 0xe04161 0xe04162 0xe04163 \n0xe04170 0xe04171 0xe04172 0xe04173 0xe04174 0xe04175 0xe04176 0xe04177 0xe04178 0xe04179 0xe0417a 0xe0417b 0xe0417c 0xe0417d 0xe0417e 0xe0417f 0xe04180 0xe04181 0xe04182 0xe04183 \n0xe04190 0xe04191 0xe04192 0xe04193 0xe04194 0xe04195 0xe04196 0xe04197 0xe04198 0xe04199 0xe0419a 0xe0419b 0xe0419c 0xe0419d 0xe0419e 0xe0419f 0xe041a0 0xe041a1 0xe041a2 0xe041a3\n\n0xe04010 0xe04011 0xe04012 0xe04013 0xe04014 0xe04015 0xe04016 0xe04017 0xe04018 0xe04019 0xe0401a 0xe0401b 0xe0401c 0xe0401d 0xe0401e 0xe0401f 0xe04020 0xe04021 0xe04022 0xe04023 \n0xe04024 0xe04025 0xe04026 0xe04027 0xe04028 0xe04029 0xe0402a 0xe0402b 0xe0402c 0xe0402d 0xe0402e 0xe0402f 0xe04030 0xe04031 0xe04032 0xe04033 0xe04034 0xe04035 0xe04036 0xe04037 \n0xe04038 0xe04039 0xe0403a 0xe0403b 0xe0403c 0xe0403d 0xe0403e 0xe0403f 0xe04040 0xe04041 0xe04042 0xe04043 0xe04044 0xe04045 0xe04046 0xe04047 0xe04048 0xe04049 0xe0404a 0xe0404b \n0xe0404c 0xe0404d 0xe0404e 0xe0404f 0xe04050 0xe04051 0xe04052 0xe04053 0xe04054 0xe04055 0xe04056 0xe04057 0xe04058 0xe04059 0xe0405a 0xe0405b 0xe0405c 0xe0405d 0xe0405e 0xe0405f \n0xe04060 0xe04061 0xe04062 0xe04063 0xe04064 0xe04065 0xe04066 0xe04067 0xe04068 0xe04069 0xe0406a 0xe0406b 0xe0406c 0xe0406d 0xe0406e 0xe0406f 0xe04070 0xe04071 0xe04072 0xe04073 \n0xe04074 0xe04075 0xe04076 0xe04077 0xe04078 0xe04079 0xe0407a 0xe0407b 0xe0407c 0xe0407d 0xe0407e 0xe0407f 0xe04080 0xe04081 0xe04082 0xe04083 0xe04084 0xe04085 0xe04086 0xe04087 \n0xe04088 0xe04089 0xe0408a 0xe0408b 0xe0408c 0xe0408d 0xe0408e 0xe0408f 0xe04090 0xe04091 0xe04092 0xe04093 0xe04094 0xe04095 0xe04096 0xe04097 0xe04098 0xe04099 0xe0409a 0xe0409b \n0xe0409c 0xe0409d 0xe0409e 0xe0409f 0xe040a0 0xe040a1 0xe040a2 0xe040a3 0xe040a4 0xe040a5 0xe040a6 0xe040a7 0xe040a8 0xe040a9 0xe040aa 0xe040ab 0xe040ac 0xe040ad 0xe040ae 0xe040af \n0xe040b0 0xe040b1 0xe040b2 0xe040b3 0xe040b4 0xe040b5 0xe040b6 0xe040b7 0xe040b8 0xe040b9 0xe040ba 0xe040bb 0xe040bc 0xe040bd 0xe040be 0xe040bf 0xe040c0 0xe040c1 0xe040c2 0xe040c3 \n0xe040c4 0xe040c5 0xe040c6 0xe040c7 0xe040c8 0xe040c9 0xe040ca 0xe040cb 0xe040cc 0xe040cd 0xe040ce 0xe040cf 0xe040d0 0xe040d1 0xe040d2 0xe040d3 0xe040d4 0xe040d5 0xe040d6 0xe040d7\n\n\n\n\nThis is the Problem.\n\n\nOne possible way:\n\n\nstrs=(char (*)[10])malloc(n*10*sizeof(int)); // n rows and 10 cols\n\n\n\n\n3.Why use a list instead of an array? What's the advantages and disadvantages of them respectively?\n\nBoth store a sequence of elements, but using different techniques.\nAn array stores elements in successive order in memory, i.e. it looks like follows:\n\n\n--------------------------------------------------------------------------------------\n|  item 1  |  item 2  |  item 3  |  ...  ...  |  item x  | //here comes other stuff\n--------------------------------------------------------------------------------------\n\n\n\n\nThis means, elements are one after another consecutive in memory.\n\n\nA ((doubly) linked) list, on the other hand, stores the items the following way: It creates an own \"list item\" for each element; this \"list item\" holds the actual element and a pointer/reference/hint/etc to the next \"list item\". If it is doubly linked, it also contains a pointer/reference/hint/etc to the previous \"list item\":\n\n\n                             ------------\n------------        ----------    |  item 4  |\n|  item 1  |        | item 2 |    |  next ---+----...\n|  next ---+-------\n| next   |    ------------\n------------        ---+------      ^\n                   |            |\n                   |            |\n                   v            |\n                   ----------   |\n                   | item 3 |   |\n                   | next --+---+\n                   ----------\n\n\n\n\nBoth store a sequence of elements, but using different techniques.\n\n\nAn array stores elements in successive order in memory, i.e. it looks like follows:\n\n\n--------------------------------------------------------------------------------------\n|  item 1  |  item 2  |  item 3  |  ...  ...  |  item x  | //here comes other stuff\n--------------------------------------------------------------------------------------\n\n\n\n\nThis means, elements are one after another consecutive in memory.\n\n\nA ((doubly) linked) list, on the other hand, stores the items the following way: It creates an own \"list item\" for each element; this \"list item\" holds the actual element and a pointer/reference/hint/etc to the next \"list item\". If it is doubly linked, it also contains a pointer/reference/hint/etc to the previous \"list item\":\n\n\n                              ------------\n------------        ----------    |  item 4  |\n|  item 1  |        | item 2 |    |  next ---+----...\n|  next ---+-------\n| next   |    ------------\n------------        ---+------      ^\n                   |            |\n                   |            |\n                   v            |\n                   ----------   |\n                   | item 3 |   |\n                   | next --+---+\n                   ----------\n\n\n\n\nThis means, the elements can be spread all over the memory and are not stored at specific memory locations.\n\n\nNow that we know this, we can compare some usual operations on sequences of elements:\n\n\n\n\n\n\nAccessing an element\n at a specific index: Using an array, we simply compute the offset for this index and have the element at the index. This is very cheap. With a list on the other hand, we do not know a priori where the element at index is stored (since all elements can be anywhere in memory), so we have to walk the list item by item until we find the element at the index. This is an expensive operation.\n\n\n\n\n\n\nAdding a new element\n at the end of the sequence: Using an array this can lead to the following problem: Arrays are usually of fixed size, so if we have the situation that our array is already completely filled (see //here comes other stuff), we probably cant put the new element there because there might already be something else. So, maybe we have to copy the whole array. However, if the array is not filled, we can simply put the element there. Using a list, we have to generate a new \"list item\", put the element into it and set the next pointer of the currently last element to this new list item. Usually, we store a reference to the currently last element so that we don't have to search through the whole list to find it. Thus, inserting a new element is no real problem with lists.\n\n\n\n\n\n\nAdding a new element\n somewhere in the middle: Let's first consider arrays: here, we might get into the following situation: We have an array with elements 1 to 1000:\n\n\n1 | 2 | 3 | 4 | 5 | 6 | \n | 999 | 1000 | free | free\n\n\n\n\n\n\nNow, we want to insert \n4.5\n between \n4\n and \n5\n: This means, we have to move all elements from \n5\n to \n1000\n one position right in order to make space for the \n4.5\n:\n\n\n 1 | 2 | 3 | 4 | free | 5 | 6 | ... | 999 | 1000 | free\n              ||\n              vv\n 1 | 2 | 3 | 4 | 4.5  | 5 | 6 | ... | 999 | 1000 | free\n\n\n\n\nMoving all these elements, is a very expensive operation. So better don't do this too often.\nNow we consider, how a list can perform this task: Let's say we have currently the following list:\n\n\n 1 -\n 2 -\n 3 -\n 4 -\n 5 -\n ... -\n 999 -\n 1000\n\n\n\n\nAgain, we want to insert \n4.5\n between \n4\n and \n5\n. This can be done very easily: We generate a new list item and update the pointers/references:\n\n\n 1 -\n 2 -\n 3 -\n 4        5 -\n ... -\n 999 -\n 1000\n            |        ^\n            +-\n 4.5 -+\n\n\n\n\nWe have simply created a new list element and generated sort of \"bypass\" to insert it - very cheap (as long as we have a pointer/reference to the list item the new element will be inserted after).\n\n\nSo, let's sum up: Linked lists are really nice when it comes to inserting at random positions (as long as you have a pointer to the adequate list item). If your operation involves adding lots of elements dynamically and traversing all elements anyway, a list might be a good choice.\n\n\nAn array is very good when it comes to index accesses. If your application needs to access elements at specific positions very often, you should rather use an array.\n\n\nNotable things:\n\n\n\n\n\n\nSolving the fixed-size problem for arrays: As mentioned before, (raw) arrays are usually of fixed size. However, this problem is nowadays no real point anymore, since almost all programming languages provide mechanisms to generate arrays that grow (and possibly shrink) dynamically - just as needed. This growing and shrinking can be implemented such that we have amortized runtime of O(1) for inserting and removing elements (at the end of the array) and such that the programmer doesn't have to call grow and shrink explicitly.\n\n\n\n\n\n\nSince lists provide such nice properties for insertions, they can be used as underlying data structures for search trees, etc. I.e. you construct a search tree, whose lowest level consists of the linked list.\n\n\n\n\n\n\n4.\n \n(1)Why is it necessary to have a heap, i.e. why not use stack only?\nThe stack is the memory set aside as scratch space for a thread of execution. When a function is called, a block is reserved on the top of the stack for local variables and some bookkeeping data. When that function returns, the block becomes unused and can be used the next time a function is called. The stack is always reserved in a LIFO (last in first out) order; the most recently reserved block is always the next block to be freed. This makes it really simple to keep track of the stack; freeing a block from the stack is nothing more than adjusting one pointer.\n\n\nThe heap is memory set aside for dynamic allocation. Unlike the stack, there's no enforced pattern to the allocation and deallocation of blocks from the heap; you can allocate a block at any time and free it at any time. This makes it much more complex to keep track of which parts of the heap are allocated or free at any given time; there are many custom heap allocators available to tune heap performance for different usage patterns.\n\n\nEach thread gets a stack, while there's typically only one heap for the application (although it isn't uncommon to have multiple heaps for different types of allocation).\n\n\nTo answer your questions directly:\n\n\n\n\n\n\nTo what extent are they controlled by the OS or language runtime?\nThe OS allocates the stack for each system-level thread when the thread is created. Typically the OS is called by the language runtime to allocate the heap for the application.\n\n\n\n\n\n\nWhat is their scope?\nThe stack is attached to a thread, so when the thread exits the stack is reclaimed. The heap is typically allocated at application startup by the runtime, and is reclaimed when the application (technically process) exits.\n\n\n\n\n\n\nWhat determines the size of each of them?\nThe size of the stack is set when a thread is created. The size of the heap is set on application startup, but can grow as space is needed (the allocator requests more memory from the operating system).\n\n\n\n\n\n\nWhat makes one faster?\nThe stack is faster because the access pattern makes it trivial to allocate and deallocate memory from it (a pointer/integer is simply incremented or decremented), while the heap has much more complex bookkeeping involved in an allocation or free. Also, each byte in the stack tends to be reused very frequently which means it tends to be mapped to the processor's cache, making it very fast. Another performance hit for the heap is that the heap, being mostly a global resource, typically has to be multi-threading safe, i.e. each allocation and deallocation needs to be - typically - synchronized with \"all\" other heap accesses in the program.\n\n\n\n\n\n\n(2)What's the max size of the stack or the heap for a c program in your computer? Can you revise it?\nIn linux,\n\n\nxinyuan@xinyuan-pc:~/Desktop/testAll$ ulimit -a\ncore file size          (blocks, -c) 0\ndata seg size           (kbytes, -d) unlimited\nscheduling priority             (-e) 0\nfile size               (blocks, -f) unlimited\npending signals                 (-i) 15333\nmax locked memory       (kbytes, -l) 64\nmax memory size         (kbytes, -m) unlimited\nopen files                      (-n) 1024\npipe size            (512 bytes, -p) 8\nPOSIX message queues     (bytes, -q) 819200\nreal-time priority              (-r) 0\nstack size              (kbytes, -s) 8192\ncpu time               (seconds, -t) unlimited\nmax user processes              (-u) 15333\nvirtual memory          (kbytes, -v) unlimited\nfile locks                      (-x) unlimited\n\n\n\n\nrevise stack example\n\n\nulimit -s 1000\n\n\n\n\nmax heap size is usually the virtual memory of your computer.\n\n\n(3)Will deep recursive program really lead to stack overflow?Why? (The answer is no)\nNo, not really. The following program will cause stack overflow in normal mode compile.\nBut if we add compile parameter \ngcc -O1 -foptimize-sibling-calls recursion.c\n, there will not be stack overflow.\n\n\n#include \nstdio.h\n\n\ntypedef unsigned long long int RES;\n\nRES recursion(RES a) {\n  if(a == 1000000000) {\n    return a;\n  } else {\n    return recursion(a+1);\n  }\n}\n\nint main(int argc, char const *argv[]) {\n  recursion(0);\n  return 0;\n}\n\n\n\n\nAlso we can calculate how large is it in one function stack, think about it.\n\n\n5.(optional) How to use an array to create a list know as a static list in logic?\n\nFor example:\n\n\nnode a[100];\nhead = a[0];\na[0]-\nnext = 2;   // an array index", 
            "title": "\u7b80\u5355\u94fe\u8868"
        }, 
        {
            "location": "/posts/old/SimpleList/#introduction", 
            "text": "List a a kind of data structure that is a linear collection of data elements, called nodes pointing to the next node by means of pointer. It is a data structure consisting of a group of nodes which together represent a sequence. Under the simplest form, each node is composed of data and a reference (in other words, a link) to the next node in the sequence; more complex variants add additional links. This structure allows for efficient insertion or removal of elements from any position in the sequence.", 
            "title": "Introduction"
        }, 
        {
            "location": "/posts/old/SimpleList/#list_operation", 
            "text": "", 
            "title": "List Operation"
        }, 
        {
            "location": "/posts/old/SimpleList/#1_insert", 
            "text": "", 
            "title": "1. Insert"
        }, 
        {
            "location": "/posts/old/SimpleList/#2deletion", 
            "text": "", 
            "title": "2.Deletion"
        }, 
        {
            "location": "/posts/old/SimpleList/#3_element_access", 
            "text": "", 
            "title": "3. Element Access"
        }, 
        {
            "location": "/posts/old/SimpleList/#some_contracts", 
            "text": "", 
            "title": "Some Contracts"
        }, 
        {
            "location": "/posts/old/SimpleList/#1_position_for_insertion", 
            "text": "", 
            "title": "1. Position for Insertion"
        }, 
        {
            "location": "/posts/old/SimpleList/#2_position_for_deletion", 
            "text": "", 
            "title": "2. Position for Deletion"
        }, 
        {
            "location": "/posts/old/SimpleList/#some_knowledge_in_c_for_last_semester", 
            "text": "", 
            "title": "Some Knowledge In C for Last Semester"
        }, 
        {
            "location": "/posts/old/SimpleList/#1_memory_distribution_map_for_a_runtime_program_very_important_for_your_4-year_study", 
            "text": "From Professor Wan Hai's courseWare  This is an overview for a program when it's loaded into the memory of the computer. There are totally 4 area for it, Code area, Static area, Heap and stack.\nCode area: This area is used to store program codes(instructions for cpu to execute)\nStatic area: This area is for the ralatively \u2018static\u2019 variables. Global variables, static local variables, static global variables are allocated in the static storage area.\nHeap: This area is management by the operating system and it's shared by other programs. You can get dynamic memory allocations in this area.  This is the area we need to use in list \nStack: The stack is a area of memory that allocated by the compile. All variables declared in stack. Notice that stack and heap in operating system are totally different in data structure \n(\u6ce8\u610f\uff1a\u8fd9\u91cc\u6240\u8bf4\u7684\u5806\u548c\u6808\u662f\u64cd\u4f5c\u7cfb\u7edf\u7684\u6982\u5ff5\uff0c\u8ddf\u6570\u636e\u7ed3\u6784\u4e2d\u7684\u5806\u548c\u6808\u4e0d\u540c)  For example:  #include  malloc.h \nint main() {\n   int a;  // allocated in stack\n   int * b = (int *)malloc(sizeof(int));  // allocated in heap\n   free(b);\n   return;\n}\n```  Notice that we have a operation before the program end.  free(b) . Because we use the memory in the heap which means that these memory should be managed by the programmer. Even though the memory will be free by a mordern operating system, we should prevent memory lost (memory leak).\nFor example:  ```c\nint main() {\n   int * a = (int *)malloc(sizeof(int));  // allocated in heap, memory area1\n   int * a = (int *)malloc(sizeof(int));  // allocated in heap, memory area2\n   return;\n}  The example above cause a memory leak problem because pointer point to another memory area and the previous memory area1 is lost.", 
            "title": "1. Memory distribution map for a runtime program (very important for your 4-year study)"
        }, 
        {
            "location": "/posts/old/SimpleList/#2_malloc_to_get_memory_from_the_heap", 
            "text": "The two examples above show how to get memory in heap. In fact, we it's a serial of functions.\nC language with the memory of the functions are mainly calloc, alloca, malloc, free, realloc and so on. 1  alloca is the application of the stack to the memory, so there is no need to release. 2  malloc allocates memory is located in the heap, and there is no memory of the contents of the initial memory, so after the basic malloc, call the function memset to initialize this part of the memory space. 3  calloc will initialize this part of the memory, set to 0 4  realloc is the size of the memory of the malloc application. 5  The heap needs to be released by the function free.  Notice that everytime you apply memory from heap, you should remember it and delete it(free) when your use of it is end.  int main() {\n   int * a = malloc(sizeof(int));\n\n   // code using a\n\n   free(a);\n}  Function Prototype  extern void *malloc(unsigned int num_bytes);  \u6ce8\u610f\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u51fd\u6570\uff0c\u4e00\u5b9a\u8981\u770b\u51fd\u6570\u539f\u578b\uff0c\u51fd\u6570\u539f\u578b\u91cc\u9762\u5305\u542b\u4e86\u8fd9\u4e2a\u51fd\u6570\u63a5\u53e3\u529f\u80fd\u7684\u5f88\u591a\u4fe1\u606f\u3002\n\u8fd9\u4e2a\u51fd\u6570\u7684\u540d\u79f0\u662fmalloc\uff0c\u52a8\u6001\u5206\u914d\u5185\u5b58\n\u53c2\u6570\u662funsigned int num_bytes\uff0c\u610f\u601d\u662f\u5206\u914d\u7684\u5185\u5b58\u7684\u5b57\u8282\u6570\u3002\n\u8fd4\u56de\u503c\u662fvoid \u6307\u9488\uff0c\u7406\u8bba\u662f\u5c31\u662f\u5e94\u8be5\u6307\u5411\u88ab\u5206\u914d\u7684\u5185\u5b58\u3002  \u7531\u4e8e\u8fd4\u56de\u7684\u6307\u9488\u662f\u4e00\u79cd\u6cdb\u578b\u7f16\u7a0b\u601d\u60f3\u4e2d\u7684\u65e0\u7c7b\u578b\u6307\u9488\uff0c\u6240\u4ee5\u5e94\u8be5\u5f3a\u5236\u8f6c\u6362\u4e3a\u4f60\u9700\u8981\u7684\u7c7b\u578b\u3002  \u6ce8\u610f\uff1a\u5728\u4e00\u6b21malloc\u51fd\u6570\u8c03\u7528\u4e2d\uff0c\u8fd4\u56de\u7684\u4e00\u6bb5\u5185\u5b58\u662f\u8fde\u7eed\u7684", 
            "title": "2. Malloc() to get memory from the heap"
        }, 
        {
            "location": "/posts/old/SimpleList/#3_memory_leak", 
            "text": "From Wikipedia, the free encyclopedia\nIn computer science, a memory leak is a type of resource leak that occurs when a computer program incorrectly manages memory allocations[1] in such a way that memory which is no longer needed is not released. In object-oriented programming, a memory leak may happen when an object is stored in memory but cannot be accessed by the running code.[2] A memory leak has symptoms similar to a number of other problems (see below) and generally can only be diagnosed by a programmer with access to the program's source code.  Because they can exhaust available system memory as an application runs, memory leaks are often the cause of or a contributing factor to software aging.", 
            "title": "3. Memory Leak"
        }, 
        {
            "location": "/posts/old/SimpleList/#consequences", 
            "text": "A memory leak can diminish the performance of the computer by reducing the amount of available memory. Eventually, in the worst case, too much of the available memory may become allocated and all or part of the system or device stops working correctly, the application fails, or the system slows down vastly due to thrashing.  Memory leaks may not be serious or even detectable by normal means. In modern operating systems, normal memory used by an application is released when the application terminates. This means that a memory leak in a program that only runs for a short time may not be noticed and is rarely serious.  Much more serious leaks include those:  where the program runs for an extended time and consumes additional memory over time, such as background tasks on servers, but especially in embedded devices which may be left running for many years\nwhere new memory is allocated frequently for one-time tasks, such as when rendering the frames of a computer game or animated video\nwhere the program can request memory \u2014 such as shared memory \u2014 that is not released, even when the program terminates\nwhere memory is very limited, such as in an embedded system or portable device\nwhere the leak occurs within the operating system or memory manager\nwhen a system device driver causes the leak\nrunning on an operating system that does not automatically release memory on program termination. Often on such machines if memory is lost, it can only be reclaimed by a reboot, an example of such a system being AmigaOS.[citation neede   From \u767e\u5ea6\u767e\u79d1  \u5185\u5b58\u6cc4\u6f0f\u4e5f\u79f0\u4f5c\u201c\u5b58\u50a8\u6e17\u6f0f\u201d\uff0c\u7528\u52a8\u6001\u5b58\u50a8\u5206\u914d\u51fd\u6570\u52a8\u6001\u5f00\u8f9f\u7684\u7a7a\u95f4\uff0c\u5728\u4f7f\u7528\u5b8c\u6bd5\u540e\u672a\u91ca\u653e\uff0c\u7ed3\u679c\u5bfc\u81f4\u4e00\u76f4\u5360\u636e\u8be5\u5185\u5b58\u5355\u5143\u3002\u76f4\u5230\u7a0b\u5e8f\u7ed3\u675f\u3002\uff08\u5176\u5b9e\u8bf4\u767d\u4e86\u5c31\u662f\u8be5\u5185\u5b58\u7a7a\u95f4\u4f7f\u7528\u5b8c\u6bd5\u4e4b\u540e\u672a\u56de\u6536\uff09\u5373\u6240\u8c13\u5185\u5b58\u6cc4\u6f0f\u3002  \u5185\u5b58\u6cc4\u6f0f\u5f62\u8c61\u7684\u6bd4\u55bb\u662f\u201c\u64cd\u4f5c\u7cfb\u7edf\u53ef\u63d0\u4f9b\u7ed9\u6240\u6709\u8fdb\u7a0b\u7684\u5b58\u50a8\u7a7a\u95f4\u6b63\u5728\u88ab\u67d0\u4e2a\u8fdb\u7a0b\u69a8\u5e72\u201d\uff0c\u6700\u7ec8\u7ed3\u679c\u662f\u7a0b\u5e8f\u8fd0\u884c\u65f6\u95f4\u8d8a\u957f\uff0c\u5360\u7528\u5b58\u50a8\u7a7a\u95f4\u8d8a\u6765\u8d8a\u591a\uff0c\u6700\u7ec8\u7528\u5c3d\u5168\u90e8\u5b58\u50a8\u7a7a\u95f4\uff0c\u6574\u4e2a\u7cfb\u7edf\u5d29\u6e83\u3002\u6240\u4ee5\u201c\u5185\u5b58\u6cc4\u6f0f\u201d\u662f\u4ece\u64cd\u4f5c\u7cfb\u7edf\u7684\u89d2\u5ea6\u6765\u770b\u7684\u3002\u8fd9\u91cc\u7684\u5b58\u50a8\u7a7a\u95f4\u5e76\u4e0d\u662f\u6307\u7269\u7406\u5185\u5b58\uff0c\u800c\u662f\u6307\u865a\u62df\u5185\u5b58\u5927\u5c0f\uff0c\u8fd9\u4e2a\u865a\u62df\u5185\u5b58\u5927\u5c0f\u53d6\u51b3\u4e8e\u78c1\u76d8\u4ea4\u6362\u533a\u8bbe\u5b9a\u7684\u5927\u5c0f\u3002\u7531\u7a0b\u5e8f\u7533\u8bf7\u7684\u4e00\u5757\u5185\u5b58\uff0c\u5982\u679c\u6ca1\u6709\u4efb\u4f55\u4e00\u4e2a\u6307\u9488\u6307\u5411\u5b83\uff0c\u90a3\u4e48\u8fd9\u5757\u5185\u5b58\u5c31\u6cc4\u6f0f\u4e86\u3002  \u4ece\u7528\u6237\u4f7f\u7528\u7a0b\u5e8f\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u5185\u5b58\u6cc4\u6f0f\u672c\u8eab\u4e0d\u4f1a\u4ea7\u751f\u4ec0\u4e48\u5371\u5bb3\uff0c\u4f5c\u4e3a\u4e00\u822c\u7684\u7528\u6237\uff0c\u6839\u672c\u611f\u89c9\u4e0d\u5230\u5185\u5b58\u6cc4\u6f0f\u7684\u5b58\u5728\u3002\u771f\u6b63\u6709\u5371\u5bb3\u7684\u662f\u5185\u5b58\u6cc4\u6f0f\u7684\u5806\u79ef\uff0c\u8fd9\u4f1a\u6700\u7ec8\u6d88\u8017\u5c3d\u7cfb\u7edf\u6240\u6709\u7684\u5185\u5b58\u3002\u4ece\u8fd9\u4e2a\u89d2\u5ea6\u6765\u8bf4\uff0c\u4e00\u6b21\u6027\u5185\u5b58\u6cc4\u6f0f\u5e76\u6ca1\u6709\u4ec0\u4e48\u5371\u5bb3\uff0c\u56e0\u4e3a\u5b83\u4e0d\u4f1a\u5806\u79ef\uff0c\u800c\u9690\u5f0f\u5185\u5b58\u6cc4\u6f0f\u5371\u5bb3\u6027\u5219\u975e\u5e38\u5927\uff0c\u56e0\u4e3a\u8f83\u4e4b\u4e8e\u5e38\u53d1\u6027\u548c\u5076\u53d1\u6027\u5185\u5b58\u6cc4\u6f0f\u5b83\u66f4\u96be\u88ab\u68c0\u6d4b\u5230\u3002   \u7b80\u5355\u6765\u8bb2\uff0c\u5185\u5b58\u6cc4\u9732\u5c31\u662f\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58\u6ca1\u6709\u5728\u4f7f\u7528\u5b8c\u4e4b\u540e\u8fdb\u884c\u91ca\u653e\uff0c\u5bfc\u81f4\u5185\u5b58\u5783\u573e\u5806\u79ef\u3002  \u8fd9\u6837\u7684\u5371\u5bb3\u6709\u53ef\u80fd\u76f4\u63a5\u8ba9\u4f60\u7684\u64cd\u4f5c\u7cfb\u7edf\u5d29\u6e83\u6389\uff08\u53ef\u4ee5\u81ea\u5df1\u505a\u4e0b\u5b9e\u9a8c\uff09  For example:  int main() {\n    int * c = (int *)malloc(sizeof(int) * 100);\n    c = NULL;\n    while(1);\n}  \u4e0a\u8ff0\u4ee3\u7801\u5206\u914d\u4e86100\u4e2aint\u7c7b\u578b\u5927\u5c0f\u7684 \u8fde\u7eed \u5185\u5b58\u5355\u5143\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u65b9\u5f0f\u5206\u914d\u52a8\u6001\u6570\u7ec4\u3002\u4e0a\u8ff0\u4ee3\u7801\u5206\u914d\u7684\u5c31\u662f\u53ef\u4ee5\u7406\u89e3\u6210100\u4e2aint\u7684\u6570\u7ec4\u3002  \u8fd0\u884c\u4e0a\u8ff0\u7a0b\u5e8f\uff0c\u5728\u8fd0\u884c\u5230while(1)\u65f6\u5019\u53d1\u751f\u4e86\u5185\u5b58\u6cc4\u9732\uff0c\u56e0\u4e3a\u539f\u6765\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58\u5730\u5740\u4e22\u5931\u4e86\uff01\u4f60\u7684\u7a0b\u5e8f\u65e0\u6cd5\u518d\u83b7\u5f97\u90a3100\u4e2a\u5728\u5806\u4e2d\u7533\u8bf7\u7684\u5185\u5b58\u5355\u5143\u3002\u53ef\u662f\u8fd9\u4e9b\u5185\u5b58\u5355\u5143\u4ecd\u7136\u5360\u636e\u7740\u5185\u5b58\uff0c\u4e5f\u5c31\u662f\u5185\u5b58\u5783\u573e\u3002\u5728\u7f16\u5199\u52a8\u6001\u5206\u914d\u7684\u7a0b\u5e8f\u65f6\uff0c\u5f88\u5bb9\u6613\u51fa\u73b0\u8fd9\u6837\u7684\u9519\u8bef\u3002\u6b63\u786e\u505a\u6cd5\u662f\u5728\u8fd9\u4e2a\u6307\u9488\u4e0d\u7528\u7684\u60c5\u51b5\u4e0b\uff0c\u5c06\u5176free\u3002  int main() {\n    int * c = (int *)malloc(sizeof(int) * 100);\n    free(c);\n    c = NULL;\n    while(1);\n}  \u6709\u65f6\u5019\u6709\u4e9b\u5185\u5b58\u6cc4\u9732\u662f\u81ea\u5df1\u770b\u4e0d\u51fa\u6765\u7684\uff0c\u7279\u522b\u5f53\u51fd\u6570\u53d8\u5f97\u590d\u6742\u8d77\u6765\u7684\u65f6\u5019\u3002\n\u4e0b\u5217\u7a0b\u5e8f\u4e3a \u6b7b\u4ea1\u7a0b\u5e8f \uff0c\u53ef\u4ee5\u8bd5\u8bd5\u8fd0\u884c\u770b\u770b\u81ea\u5df1\u7535\u8111\u7684\u5185\u5b58\u53d8\u5316\u3002  #include  stdio.h \n#include  malloc.h \nint main() {\n while(1) {\n    malloc(100);\n  }\n  return 0; \n}", 
            "title": "Consequences"
        }, 
        {
            "location": "/posts/old/SimpleList/#3_list", 
            "text": "", 
            "title": "3. List\uff08\u94fe\u8868\u6216\u7ebf\u6027\u8868\uff09"
        }, 
        {
            "location": "/posts/old/SimpleList/#an_introduction_to_list", 
            "text": "In computer science, a list or sequence is an abstract data type that represents an ordered sequence of values, where the same value may occur more than once. An instance of a list is a computer representation of the mathematical concept of a finite sequence; the (potentially) infinite analog of a list is a stream.[1]:\u00a73.5 Lists are a basic example of containers, as they contain other values. If the same value occurs multiple times, each occurrence is considered a distinct item.  A singly linked list structure, implementing a list with 3 integer elements.\nThe name list is also used for several concrete data structures that can be used to implement abstract lists, especially linked lists.  Many programming languages provide support for list data types, and have special syntax and semantics for lists and list operations. A list can often be constructed by writing the items in sequence, separated by commas, semicolons, or spaces, within a pair of delimiters such as parentheses '()', brackets '[]', braces '{}', or angle brackets ' '. Some languages may allow list types to be indexed or sliced like array types, in which case the data type is more accurately described as an array. In object-oriented programming languages, lists are usually provided as instances of subclasses of a generic \"list\" class, and traversed via separate iterators. List data types are often implemented using array data structures or linked lists of some sort, but other data structures may be more appropriate for some applications. In some contexts, such as in Lisp programming, the term list may refer specifically to a linked list rather than an array.  In type theory and functional programming, abstract lists are usually defined inductively by two operations: nil that yields the empty list, and cons, which adds an item at the beginning of a list.[2]   From wikipedia  The operations about list are appending, deleting, modifying, querying.  we use this simple list again:    If delete the second node:  node* save = head- next;\nhead- next = head- next- next;\nfree(save);    2.If append a node at the end of the list  node* last = head;\nwhile(last- next != NULL) {\n    last = last- next;\n}\n\nlast- next = (node*)malloc(sizeof(node));\nlast- next- data = data;\nlast- next- next = NULL;  3.Traversal  node * temp = head;\nwhile(temp != NULL) {\n    Traversal(temp);\n    temp = temp- next;\n}", 
            "title": "An introduction to List"
        }, 
        {
            "location": "/posts/old/SimpleList/#deep_thinking120pts_20_for_each", 
            "text": "1.Look at the following function:  static void myFunction() { int a; }  (1) Which area in memory does the function store? And which dose the variable  int a ? \nfunction store : Code Area\nvariable 'int a': (function) stack (2) What's the advantages of using static functions?   static says the function has internal linkage. This means it will not be linked with other uses of the same identifier in other files (translation units).\nFor example, suppose in Tree.c I have a function that operates on Tree structures, and I have some local subroutine called UpdateNode that operates on part of the Tree. Further suppose that in List.c, I have a function that operates on List structures, and it also has some local subroutine called UpdateNode that is just for List structures, not for Tree structures.\nIf I left both of these subroutines with external linkage, the linker would complain about multiple definitions. By marking them with internal linkage with static, this problem is avoided. From stack overflow   2. Look at the following program which is attempt to allocate a dynamic array.  #include  malloc.h \n\nint main() {\n    char ** strs;\n    int n ,m;\n    int i;\n\n    scanf( %d%d ,  n,  m);\n\n    strs = (char **)malloc(sizeof(char *) * n);\n\n    for(i = 0; i   n; i++) {\n    strs[i] = (char *)malloc(sizeof(char) * m);\n    }\n\n\n   // code for the 2d array\n   // free operations omited\n    return 0;\n}  Can we create an 2D array in the heap using this way? Give your explanations and give another way that can allocate a dynamic 2D array \nNo, the 2D dynamic array is discontinuous in 1D memory space which does not fit the accurate 2D array definition.  issues:\n1. When call  memset  or other memory operation on the whole block of memory, you can not get your expected result.\n2. When pass the array into a function as parameter.\nLook at the following program:  #include  malloc.h \n\nvoid test(char strs[][20], int m, int n) {\n    int i, j;\n    for(i = 0; i   m; i++) {\n    for(j = 0; j   n; j++) {\n        printf( %p  ,  strs[i][j]);\n    }\n    printf( \\n );\n    }\n}\n\nint main() {\n    char ** strs;\n    int n ,m;\n    int i, j;\n\n    scanf( %d%d ,  n,  m);\n\n    strs = (char **)malloc(sizeof(char *) * n);\n\n    printf( %p\\n , strs);\n\n    for(i = 0; i   n; i++) {\n    strs[i] = (char *)malloc(sizeof(char) * m);\n    }\n\n    for(i = 0; i   n; i++) {\n    for(j = 0; j   m; j++) {\n        printf( %p  ,  strs[i][j]);\n    }\n    printf( \\n );\n    }\n\n    printf( \\n );\n\n    test(strs, 10, 20);\n\n    printf( \\n );\n\n\n\n   // free operations omited\n    return 0;\n}  Result:  10 20\n0xe04010\n0xe04070 0xe04071 0xe04072 0xe04073 0xe04074 0xe04075 0xe04076 0xe04077 0xe04078 0xe04079 0xe0407a 0xe0407b 0xe0407c 0xe0407d 0xe0407e 0xe0407f 0xe04080 0xe04081 0xe04082 0xe04083 \n0xe04090 0xe04091 0xe04092 0xe04093 0xe04094 0xe04095 0xe04096 0xe04097 0xe04098 0xe04099 0xe0409a 0xe0409b 0xe0409c 0xe0409d 0xe0409e 0xe0409f 0xe040a0 0xe040a1 0xe040a2 0xe040a3 \n0xe040b0 0xe040b1 0xe040b2 0xe040b3 0xe040b4 0xe040b5 0xe040b6 0xe040b7 0xe040b8 0xe040b9 0xe040ba 0xe040bb 0xe040bc 0xe040bd 0xe040be 0xe040bf 0xe040c0 0xe040c1 0xe040c2 0xe040c3 \n0xe040d0 0xe040d1 0xe040d2 0xe040d3 0xe040d4 0xe040d5 0xe040d6 0xe040d7 0xe040d8 0xe040d9 0xe040da 0xe040db 0xe040dc 0xe040dd 0xe040de 0xe040df 0xe040e0 0xe040e1 0xe040e2 0xe040e3 \n0xe040f0 0xe040f1 0xe040f2 0xe040f3 0xe040f4 0xe040f5 0xe040f6 0xe040f7 0xe040f8 0xe040f9 0xe040fa 0xe040fb 0xe040fc 0xe040fd 0xe040fe 0xe040ff 0xe04100 0xe04101 0xe04102 0xe04103 \n0xe04110 0xe04111 0xe04112 0xe04113 0xe04114 0xe04115 0xe04116 0xe04117 0xe04118 0xe04119 0xe0411a 0xe0411b 0xe0411c 0xe0411d 0xe0411e 0xe0411f 0xe04120 0xe04121 0xe04122 0xe04123 \n0xe04130 0xe04131 0xe04132 0xe04133 0xe04134 0xe04135 0xe04136 0xe04137 0xe04138 0xe04139 0xe0413a 0xe0413b 0xe0413c 0xe0413d 0xe0413e 0xe0413f 0xe04140 0xe04141 0xe04142 0xe04143 \n0xe04150 0xe04151 0xe04152 0xe04153 0xe04154 0xe04155 0xe04156 0xe04157 0xe04158 0xe04159 0xe0415a 0xe0415b 0xe0415c 0xe0415d 0xe0415e 0xe0415f 0xe04160 0xe04161 0xe04162 0xe04163 \n0xe04170 0xe04171 0xe04172 0xe04173 0xe04174 0xe04175 0xe04176 0xe04177 0xe04178 0xe04179 0xe0417a 0xe0417b 0xe0417c 0xe0417d 0xe0417e 0xe0417f 0xe04180 0xe04181 0xe04182 0xe04183 \n0xe04190 0xe04191 0xe04192 0xe04193 0xe04194 0xe04195 0xe04196 0xe04197 0xe04198 0xe04199 0xe0419a 0xe0419b 0xe0419c 0xe0419d 0xe0419e 0xe0419f 0xe041a0 0xe041a1 0xe041a2 0xe041a3\n\n0xe04010 0xe04011 0xe04012 0xe04013 0xe04014 0xe04015 0xe04016 0xe04017 0xe04018 0xe04019 0xe0401a 0xe0401b 0xe0401c 0xe0401d 0xe0401e 0xe0401f 0xe04020 0xe04021 0xe04022 0xe04023 \n0xe04024 0xe04025 0xe04026 0xe04027 0xe04028 0xe04029 0xe0402a 0xe0402b 0xe0402c 0xe0402d 0xe0402e 0xe0402f 0xe04030 0xe04031 0xe04032 0xe04033 0xe04034 0xe04035 0xe04036 0xe04037 \n0xe04038 0xe04039 0xe0403a 0xe0403b 0xe0403c 0xe0403d 0xe0403e 0xe0403f 0xe04040 0xe04041 0xe04042 0xe04043 0xe04044 0xe04045 0xe04046 0xe04047 0xe04048 0xe04049 0xe0404a 0xe0404b \n0xe0404c 0xe0404d 0xe0404e 0xe0404f 0xe04050 0xe04051 0xe04052 0xe04053 0xe04054 0xe04055 0xe04056 0xe04057 0xe04058 0xe04059 0xe0405a 0xe0405b 0xe0405c 0xe0405d 0xe0405e 0xe0405f \n0xe04060 0xe04061 0xe04062 0xe04063 0xe04064 0xe04065 0xe04066 0xe04067 0xe04068 0xe04069 0xe0406a 0xe0406b 0xe0406c 0xe0406d 0xe0406e 0xe0406f 0xe04070 0xe04071 0xe04072 0xe04073 \n0xe04074 0xe04075 0xe04076 0xe04077 0xe04078 0xe04079 0xe0407a 0xe0407b 0xe0407c 0xe0407d 0xe0407e 0xe0407f 0xe04080 0xe04081 0xe04082 0xe04083 0xe04084 0xe04085 0xe04086 0xe04087 \n0xe04088 0xe04089 0xe0408a 0xe0408b 0xe0408c 0xe0408d 0xe0408e 0xe0408f 0xe04090 0xe04091 0xe04092 0xe04093 0xe04094 0xe04095 0xe04096 0xe04097 0xe04098 0xe04099 0xe0409a 0xe0409b \n0xe0409c 0xe0409d 0xe0409e 0xe0409f 0xe040a0 0xe040a1 0xe040a2 0xe040a3 0xe040a4 0xe040a5 0xe040a6 0xe040a7 0xe040a8 0xe040a9 0xe040aa 0xe040ab 0xe040ac 0xe040ad 0xe040ae 0xe040af \n0xe040b0 0xe040b1 0xe040b2 0xe040b3 0xe040b4 0xe040b5 0xe040b6 0xe040b7 0xe040b8 0xe040b9 0xe040ba 0xe040bb 0xe040bc 0xe040bd 0xe040be 0xe040bf 0xe040c0 0xe040c1 0xe040c2 0xe040c3 \n0xe040c4 0xe040c5 0xe040c6 0xe040c7 0xe040c8 0xe040c9 0xe040ca 0xe040cb 0xe040cc 0xe040cd 0xe040ce 0xe040cf 0xe040d0 0xe040d1 0xe040d2 0xe040d3 0xe040d4 0xe040d5 0xe040d6 0xe040d7  This is the Problem.  One possible way:  strs=(char (*)[10])malloc(n*10*sizeof(int)); // n rows and 10 cols  3.Why use a list instead of an array? What's the advantages and disadvantages of them respectively? \nBoth store a sequence of elements, but using different techniques.\nAn array stores elements in successive order in memory, i.e. it looks like follows:  --------------------------------------------------------------------------------------\n|  item 1  |  item 2  |  item 3  |  ...  ...  |  item x  | //here comes other stuff\n--------------------------------------------------------------------------------------  This means, elements are one after another consecutive in memory.  A ((doubly) linked) list, on the other hand, stores the items the following way: It creates an own \"list item\" for each element; this \"list item\" holds the actual element and a pointer/reference/hint/etc to the next \"list item\". If it is doubly linked, it also contains a pointer/reference/hint/etc to the previous \"list item\":                               ------------\n------------        ----------    |  item 4  |\n|  item 1  |        | item 2 |    |  next ---+----...\n|  next ---+------- | next   |    ------------\n------------        ---+------      ^\n                   |            |\n                   |            |\n                   v            |\n                   ----------   |\n                   | item 3 |   |\n                   | next --+---+\n                   ----------  Both store a sequence of elements, but using different techniques.  An array stores elements in successive order in memory, i.e. it looks like follows:  --------------------------------------------------------------------------------------\n|  item 1  |  item 2  |  item 3  |  ...  ...  |  item x  | //here comes other stuff\n--------------------------------------------------------------------------------------  This means, elements are one after another consecutive in memory.  A ((doubly) linked) list, on the other hand, stores the items the following way: It creates an own \"list item\" for each element; this \"list item\" holds the actual element and a pointer/reference/hint/etc to the next \"list item\". If it is doubly linked, it also contains a pointer/reference/hint/etc to the previous \"list item\":                                ------------\n------------        ----------    |  item 4  |\n|  item 1  |        | item 2 |    |  next ---+----...\n|  next ---+------- | next   |    ------------\n------------        ---+------      ^\n                   |            |\n                   |            |\n                   v            |\n                   ----------   |\n                   | item 3 |   |\n                   | next --+---+\n                   ----------  This means, the elements can be spread all over the memory and are not stored at specific memory locations.  Now that we know this, we can compare some usual operations on sequences of elements:    Accessing an element  at a specific index: Using an array, we simply compute the offset for this index and have the element at the index. This is very cheap. With a list on the other hand, we do not know a priori where the element at index is stored (since all elements can be anywhere in memory), so we have to walk the list item by item until we find the element at the index. This is an expensive operation.    Adding a new element  at the end of the sequence: Using an array this can lead to the following problem: Arrays are usually of fixed size, so if we have the situation that our array is already completely filled (see //here comes other stuff), we probably cant put the new element there because there might already be something else. So, maybe we have to copy the whole array. However, if the array is not filled, we can simply put the element there. Using a list, we have to generate a new \"list item\", put the element into it and set the next pointer of the currently last element to this new list item. Usually, we store a reference to the currently last element so that we don't have to search through the whole list to find it. Thus, inserting a new element is no real problem with lists.    Adding a new element  somewhere in the middle: Let's first consider arrays: here, we might get into the following situation: We have an array with elements 1 to 1000:  1 | 2 | 3 | 4 | 5 | 6 |   | 999 | 1000 | free | free    Now, we want to insert  4.5  between  4  and  5 : This means, we have to move all elements from  5  to  1000  one position right in order to make space for the  4.5 :   1 | 2 | 3 | 4 | free | 5 | 6 | ... | 999 | 1000 | free\n              ||\n              vv\n 1 | 2 | 3 | 4 | 4.5  | 5 | 6 | ... | 999 | 1000 | free  Moving all these elements, is a very expensive operation. So better don't do this too often.\nNow we consider, how a list can perform this task: Let's say we have currently the following list:   1 -  2 -  3 -  4 -  5 -  ... -  999 -  1000  Again, we want to insert  4.5  between  4  and  5 . This can be done very easily: We generate a new list item and update the pointers/references:   1 -  2 -  3 -  4        5 -  ... -  999 -  1000\n            |        ^\n            +-  4.5 -+  We have simply created a new list element and generated sort of \"bypass\" to insert it - very cheap (as long as we have a pointer/reference to the list item the new element will be inserted after).  So, let's sum up: Linked lists are really nice when it comes to inserting at random positions (as long as you have a pointer to the adequate list item). If your operation involves adding lots of elements dynamically and traversing all elements anyway, a list might be a good choice.  An array is very good when it comes to index accesses. If your application needs to access elements at specific positions very often, you should rather use an array.  Notable things:    Solving the fixed-size problem for arrays: As mentioned before, (raw) arrays are usually of fixed size. However, this problem is nowadays no real point anymore, since almost all programming languages provide mechanisms to generate arrays that grow (and possibly shrink) dynamically - just as needed. This growing and shrinking can be implemented such that we have amortized runtime of O(1) for inserting and removing elements (at the end of the array) and such that the programmer doesn't have to call grow and shrink explicitly.    Since lists provide such nice properties for insertions, they can be used as underlying data structures for search trees, etc. I.e. you construct a search tree, whose lowest level consists of the linked list.    4.  \n(1)Why is it necessary to have a heap, i.e. why not use stack only?\nThe stack is the memory set aside as scratch space for a thread of execution. When a function is called, a block is reserved on the top of the stack for local variables and some bookkeeping data. When that function returns, the block becomes unused and can be used the next time a function is called. The stack is always reserved in a LIFO (last in first out) order; the most recently reserved block is always the next block to be freed. This makes it really simple to keep track of the stack; freeing a block from the stack is nothing more than adjusting one pointer.  The heap is memory set aside for dynamic allocation. Unlike the stack, there's no enforced pattern to the allocation and deallocation of blocks from the heap; you can allocate a block at any time and free it at any time. This makes it much more complex to keep track of which parts of the heap are allocated or free at any given time; there are many custom heap allocators available to tune heap performance for different usage patterns.  Each thread gets a stack, while there's typically only one heap for the application (although it isn't uncommon to have multiple heaps for different types of allocation).  To answer your questions directly:    To what extent are they controlled by the OS or language runtime?\nThe OS allocates the stack for each system-level thread when the thread is created. Typically the OS is called by the language runtime to allocate the heap for the application.    What is their scope?\nThe stack is attached to a thread, so when the thread exits the stack is reclaimed. The heap is typically allocated at application startup by the runtime, and is reclaimed when the application (technically process) exits.    What determines the size of each of them?\nThe size of the stack is set when a thread is created. The size of the heap is set on application startup, but can grow as space is needed (the allocator requests more memory from the operating system).    What makes one faster?\nThe stack is faster because the access pattern makes it trivial to allocate and deallocate memory from it (a pointer/integer is simply incremented or decremented), while the heap has much more complex bookkeeping involved in an allocation or free. Also, each byte in the stack tends to be reused very frequently which means it tends to be mapped to the processor's cache, making it very fast. Another performance hit for the heap is that the heap, being mostly a global resource, typically has to be multi-threading safe, i.e. each allocation and deallocation needs to be - typically - synchronized with \"all\" other heap accesses in the program.    (2)What's the max size of the stack or the heap for a c program in your computer? Can you revise it?\nIn linux,  xinyuan@xinyuan-pc:~/Desktop/testAll$ ulimit -a\ncore file size          (blocks, -c) 0\ndata seg size           (kbytes, -d) unlimited\nscheduling priority             (-e) 0\nfile size               (blocks, -f) unlimited\npending signals                 (-i) 15333\nmax locked memory       (kbytes, -l) 64\nmax memory size         (kbytes, -m) unlimited\nopen files                      (-n) 1024\npipe size            (512 bytes, -p) 8\nPOSIX message queues     (bytes, -q) 819200\nreal-time priority              (-r) 0\nstack size              (kbytes, -s) 8192\ncpu time               (seconds, -t) unlimited\nmax user processes              (-u) 15333\nvirtual memory          (kbytes, -v) unlimited\nfile locks                      (-x) unlimited  revise stack example  ulimit -s 1000  max heap size is usually the virtual memory of your computer.  (3)Will deep recursive program really lead to stack overflow?Why? (The answer is no)\nNo, not really. The following program will cause stack overflow in normal mode compile.\nBut if we add compile parameter  gcc -O1 -foptimize-sibling-calls recursion.c , there will not be stack overflow.  #include  stdio.h \n\ntypedef unsigned long long int RES;\n\nRES recursion(RES a) {\n  if(a == 1000000000) {\n    return a;\n  } else {\n    return recursion(a+1);\n  }\n}\n\nint main(int argc, char const *argv[]) {\n  recursion(0);\n  return 0;\n}  Also we can calculate how large is it in one function stack, think about it.  5.(optional) How to use an array to create a list know as a static list in logic? \nFor example:  node a[100];\nhead = a[0];\na[0]- next = 2;   // an array index", 
            "title": "Deep Thinking(120pts, 20 for each)"
        }, 
        {
            "location": "/posts/old/Tencent-interview/", 
            "text": "I am very luck to have two chance for a front-end interview and a back-end interview.\n\n\nFront-end interview\n\n\nQuestion: Give you an \"a\" element, and the link is broken, how can you disable the link?\nAnswer: \n1. Write a js ajax script to test whether the link is good or not, then with a callback, you can disable it.\n2. Deal with the request in back-end, redirect the page to other place.\n3. Make another element over the a element or set its css to \"display:none\"\n4. Using event listening, disable the basic page response message.\n\n\nQuestion: How can you get elements from a document?\nAnswer:\n1. Using getElementById().\n2. Using JQuery, query string.\n......\n\n\nQuestion: Other methods?\nAnswer: Get the whole document, and then traversal it......\n\n\nQuestion:........\n\n\nQuestion: How to traversal it?\nAnswer: Using a stack, put the root node into it, and then loop until the stack is empty. For each iteration, get the top of the stack, and then push the child nodes of the node into the stack again.\n\n\nQuestion: What kind of this traversal?\nAnswer: Deep first traversal.\n\n\nQuestion: How can you implement breadth first traversal?\nAnswer: Using a queue rather than a stack.\n\n\nQuestion: What's the 5 level of TCP/IP protocol?\nAnswer: Application, Transmission, Networking, data link layer and physical layer.\n\n\nQuestion: What protocol does transmission layer have?\nAnswer: TCP and UDP\n\n\nQuestion: Tell their difference?\nAnswer: TCP is an RDT (reliable data transmission) protocol and it provides traffic control and congestion avoidance. It's a linked based protocol, peers should linked to each other before data transport. HTTP, FTP base on TCP.\nUDP is a connectionless protocol and it does not provide reliable data transmission or traffic control or  congestion avoidance. But it can get a big througoutput in practice. You should implement reliable data transmission if you need it in application layer if you use this protocol, for example QQ protocol. RDP, DHCP base on UDP.\n\n\nBack-end interview\n\n\nQuestion: What language you are most familiar with?\nAnswer: C++\n\n\nQuestion: What's the efficiency of the method push_back() in vector and list? Compare it.\nAnswer: In the condition that the storage of vector is not full, vector is faster than list. But in the condition that the storage is full, list is faster because vector need to allocate new storage and it's very slow.\n\n\nQuestion: What's the value of \"sizeof(object)\" where object is an class instance?\nAnswer: If the class is empty or only with member functions, the value is 1. Otherwise the size should be the sum of the size of it's members and also memory alignment will be applied when you are calculating the size of a class.\n\n\nQuestion: Does the order of the member variables matter the value of the sizeof(object)?\nAnswer: Nope.\n\n\nQuestion: Give you a c string, say an char array 'char s1[100]' and a char point char * s2 = \"bacse\", what's the value of sizeof() for them respectively?\nAnswer: sizeof(s1) is 100. And in 32 bits operating system s2 is 4, while s2 is 8 in 64 bits operation system.\n\n\nQuestion: We have a condition that there is a class with so many member variables, how can you solve if I want the user of this class to create instance only in the heap rather than in the stack?\n(\u6211\u73b0\u5728\u6709\u4e00\u4e2a\u7c7b\uff0c\u91cc\u9762\u6709\u975e\u5e38\u591a\u7684\u6210\u5458\u53d8\u91cf\uff0c\u6211\u73b0\u5728\u5e0c\u671b\u7528\u6237\u5728\u5b9e\u4f8b\u5316\u7684\u65f6\u5019\u4e0d\u5360\u7528\u6808\u7684\u7a7a\u95f4\uff0c\u8feb\u4f7f\u4ed6\u4f7f\u7528\u5806\u7684\u5185\u5b58\uff0c\u6211\u5e94\u8be5\u600e\u4e48\u505a\uff1f)\nAnswer: You can let the constructor of the class private as well as the assign operator like you are using a singleton and then provide a public function \"static object * getInstance()\" for the user to get instance from the heap.\nThis answer is my answer, I think it for a long time when I am on my way back. It's a trick!!!!!\nIn fact, some of thr the objects are stored in the heap, they only store pointers in the stack!!!\n\n\nQuestion: What is memory leak? How to solve it?\nAnswer: When you allocated memory from the heap using malloc or new, you forget to release it using delete or free, or you make a mistake when you have pointer operations, and a block of memory will be lost. This is memory leak.\n\n\nQuestion: How to solve this problem? Or how to avoid this problem?\nAnswer: For single thread program, you need to pay attention when you using new or malloc. You should have paired operation , new with delete, malloc with free. Also you can use some software like valgrind to check you memory. Also you can overload new and delete operator to manage the memory. In multi-threading program, you should have some contract with the functions, specified the usage of each role. Never return a block of memory in a function. \n\n\nQuestion: What's the difference of fgets() in C standard library and read() system call in linux?\nAnswer: ........\nI get it on my way back, fgets() is thread safe and read() is not (reader-writer problem in process). sad....\n\n\nQuestion: What's inter process communication methods?\nAnswer: Message queue, shared Memory and ......socket.\n\n\nQuestion: What's the disadvantage of using socket as communication methods?\nAnswer: It will pass lo(\u672c\u5730\u56de\u73af) and it will pass the TCP/IP stack. It will cause protocol overhead. And also it need to occupy some ports.\n\n\nQuestion: How can you see all the occupying ports? (He means linux)\nAnswer: Using command \"sudo nestat\"\n\n\nQuestion: Dose kernel thread allocate memory for malloc() when it uses system call?\nAnswer: ....... (MengBing)\n\n\nNope, you just need to switch to kernel mode and then allocate memory and then switch back to user \n\n\nOk, your knowledge is just OK. C++ is good but operating system is poor.", 
            "title": "\u817e\u8baf\u5b9e\u4e60\u9762\u8bd5"
        }, 
        {
            "location": "/posts/old/Tencent-interview/#front-end_interview", 
            "text": "Question: Give you an \"a\" element, and the link is broken, how can you disable the link?\nAnswer: \n1. Write a js ajax script to test whether the link is good or not, then with a callback, you can disable it.\n2. Deal with the request in back-end, redirect the page to other place.\n3. Make another element over the a element or set its css to \"display:none\"\n4. Using event listening, disable the basic page response message.  Question: How can you get elements from a document?\nAnswer:\n1. Using getElementById().\n2. Using JQuery, query string.\n......  Question: Other methods?\nAnswer: Get the whole document, and then traversal it......  Question:........  Question: How to traversal it?\nAnswer: Using a stack, put the root node into it, and then loop until the stack is empty. For each iteration, get the top of the stack, and then push the child nodes of the node into the stack again.  Question: What kind of this traversal?\nAnswer: Deep first traversal.  Question: How can you implement breadth first traversal?\nAnswer: Using a queue rather than a stack.  Question: What's the 5 level of TCP/IP protocol?\nAnswer: Application, Transmission, Networking, data link layer and physical layer.  Question: What protocol does transmission layer have?\nAnswer: TCP and UDP  Question: Tell their difference?\nAnswer: TCP is an RDT (reliable data transmission) protocol and it provides traffic control and congestion avoidance. It's a linked based protocol, peers should linked to each other before data transport. HTTP, FTP base on TCP.\nUDP is a connectionless protocol and it does not provide reliable data transmission or traffic control or  congestion avoidance. But it can get a big througoutput in practice. You should implement reliable data transmission if you need it in application layer if you use this protocol, for example QQ protocol. RDP, DHCP base on UDP.", 
            "title": "Front-end interview"
        }, 
        {
            "location": "/posts/old/Tencent-interview/#back-end_interview", 
            "text": "Question: What language you are most familiar with?\nAnswer: C++  Question: What's the efficiency of the method push_back() in vector and list? Compare it.\nAnswer: In the condition that the storage of vector is not full, vector is faster than list. But in the condition that the storage is full, list is faster because vector need to allocate new storage and it's very slow.  Question: What's the value of \"sizeof(object)\" where object is an class instance?\nAnswer: If the class is empty or only with member functions, the value is 1. Otherwise the size should be the sum of the size of it's members and also memory alignment will be applied when you are calculating the size of a class.  Question: Does the order of the member variables matter the value of the sizeof(object)?\nAnswer: Nope.  Question: Give you a c string, say an char array 'char s1[100]' and a char point char * s2 = \"bacse\", what's the value of sizeof() for them respectively?\nAnswer: sizeof(s1) is 100. And in 32 bits operating system s2 is 4, while s2 is 8 in 64 bits operation system.  Question: We have a condition that there is a class with so many member variables, how can you solve if I want the user of this class to create instance only in the heap rather than in the stack?\n(\u6211\u73b0\u5728\u6709\u4e00\u4e2a\u7c7b\uff0c\u91cc\u9762\u6709\u975e\u5e38\u591a\u7684\u6210\u5458\u53d8\u91cf\uff0c\u6211\u73b0\u5728\u5e0c\u671b\u7528\u6237\u5728\u5b9e\u4f8b\u5316\u7684\u65f6\u5019\u4e0d\u5360\u7528\u6808\u7684\u7a7a\u95f4\uff0c\u8feb\u4f7f\u4ed6\u4f7f\u7528\u5806\u7684\u5185\u5b58\uff0c\u6211\u5e94\u8be5\u600e\u4e48\u505a\uff1f)\nAnswer: You can let the constructor of the class private as well as the assign operator like you are using a singleton and then provide a public function \"static object * getInstance()\" for the user to get instance from the heap.\nThis answer is my answer, I think it for a long time when I am on my way back. It's a trick!!!!!\nIn fact, some of thr the objects are stored in the heap, they only store pointers in the stack!!!  Question: What is memory leak? How to solve it?\nAnswer: When you allocated memory from the heap using malloc or new, you forget to release it using delete or free, or you make a mistake when you have pointer operations, and a block of memory will be lost. This is memory leak.  Question: How to solve this problem? Or how to avoid this problem?\nAnswer: For single thread program, you need to pay attention when you using new or malloc. You should have paired operation , new with delete, malloc with free. Also you can use some software like valgrind to check you memory. Also you can overload new and delete operator to manage the memory. In multi-threading program, you should have some contract with the functions, specified the usage of each role. Never return a block of memory in a function.   Question: What's the difference of fgets() in C standard library and read() system call in linux?\nAnswer: ........\nI get it on my way back, fgets() is thread safe and read() is not (reader-writer problem in process). sad....  Question: What's inter process communication methods?\nAnswer: Message queue, shared Memory and ......socket.  Question: What's the disadvantage of using socket as communication methods?\nAnswer: It will pass lo(\u672c\u5730\u56de\u73af) and it will pass the TCP/IP stack. It will cause protocol overhead. And also it need to occupy some ports.  Question: How can you see all the occupying ports? (He means linux)\nAnswer: Using command \"sudo nestat\"  Question: Dose kernel thread allocate memory for malloc() when it uses system call?\nAnswer: ....... (MengBing)  Nope, you just need to switch to kernel mode and then allocate memory and then switch back to user   Ok, your knowledge is just OK. C++ is good but operating system is poor.", 
            "title": "Back-end interview"
        }, 
        {
            "location": "/posts/old/Huawei-interview/", 
            "text": "Well, I think I am very lucky to have some simple technology questions this time.\n\n\nThe first round interview\n\n\nThe interviewer is a kind man, and I think he is a c++ engineer.\n\n\n1. Tell the difference of the flowing C statement.\n\n(1) char * const p\n(2) char const * p\n(3) const char * p\n\n\nAnswer:\n(1) const pointer p indicate the pointer can't point to other char after definition.\n(2) and (3) indicates the string is a const string which means that the content is read only.\n\n\nSummary: Observe that which is nearer to p, * or const. If * is nearer, than this is the latter. Otherwise, the former.\n\n\n2. Tell the what's wrong with the following c program:\n\n\nint countAs(char s[]) {\n   int length = sizeof(s) / sizeof(char);\n   int i, result = 0;\n   for(i = 0; i \n length; i++) {\n     if(s[i] == \nA\n || s[i] == \na\n) {\n       result++;\n     }\n   }\n  return result;\n}\n\n\n\n\nAnswer: sizeof(s) does not work, because you lost the length of the array in C when you passing it as an parameter. It becomes a pointer. sizeof(s) is a unchanged value.\n\n\nQuestion: What is the value?\n\n\nAnswer: In 32 bits operation system, sizeof(s) is 4 while in 64 bits operation system, 8.\n\n\nQuestion: How can you fix it?\n\n\nAnswer: pass one more argument indicates the length of the array.\n\n\nQuestion: And other methods?\n\n\nAnswer: Using strlen() function to calculate the length of the string.\n\n\nQuestion: What should you pay attention to when you use strlen()?\n\n\nAnswer: Well, you should check NULL pointers when the parameters is passed in and also there should be a '0' char at the end of the string.\n\n\nQuestion: And other methods?\n\n\nAnswer: It's unnecessary to calculate the length of the string. You can just using the '0' char to know the end of the string when you write for loop.\n\n\nQuestion: What other problem about the function?\n\n\nAnswer: The argument does not have side effect in this case, it should be made const. Also the return type int may be overflow in the case the string is too long. And the name of the function is not good in some way, make it \"count_letter_a\".\n\n\nInterviewer: Your level of knowledge is OK. Talk about one of your project experience......\n\n\nAnd then I talk about my experience about the online judge system Matrix I am working for now.\n\n\nThe second round interview\n\n\nThe interviewer is a project manager.\n\n\nQuestion: Do you know what is Cyclomatic Complexity in code?\n\n\nAnswer: Meng Biing......\n\n\nWell I do not know what is that, but I get back and learn someting more.\n\n\n\n\nCyclomatic complexity is a software metric (measurement), used to indicate the complexity of a program. It is a quantitative measure of the number of linearly independent paths through a program's source code. It was developed by Thomas J. McCabe, Sr. in 1976.\n\n\nCyclomatic complexity is computed using the control flow graph of the program: the nodes of the graph correspond to indivisible groups of commands of a program, and a directed edge connects two nodes if the second command might be executed immediately after the first command. Cyclomatic complexity may also be applied to individual functions, modules, methods or classes within a program.\n\n\nOne testing strategy, called basis path testing by McCabe who first proposed it, is to test each linearly independent path through the program; in this case, the number of test cases will equal the cyclomatic complexity of the program.[1]\n\n\n\n\nFrom Wikipedia\n\n\nI know it now.\n\n\nThe definition is:\n\n\n\\[\nM = E \u2212 N + 2P\n\\]\nWhere:\n\n\nE = the number of edges of the graph.\n\n\nN = the number of nodes of the graph.\n\n\nP = the number of connected components.\n\n\nQuestion:\n\n\nWhat qualities should a programmer have?\n\n\nAnswer:\n\n\nThe most important is that a programmer should be familiar with a programming language, c/c++ is better. Secondly, basic knowledge of CS including operation system, database system, computer architecture, data structure and algorithm, computer network and compile theory should be acquired by him. A programmer should always be in touched withe his teammates which means communication and idea is also very important.\n\n\nOk, the interview result will sent to you in five days.", 
            "title": "\u534e\u4e3a\u5b9e\u4e60\u9762\u8bd5"
        }, 
        {
            "location": "/posts/old/Huawei-interview/#the_first_round_interview", 
            "text": "The interviewer is a kind man, and I think he is a c++ engineer.  1. Tell the difference of the flowing C statement. \n(1) char * const p\n(2) char const * p\n(3) const char * p  Answer:\n(1) const pointer p indicate the pointer can't point to other char after definition.\n(2) and (3) indicates the string is a const string which means that the content is read only.  Summary: Observe that which is nearer to p, * or const. If * is nearer, than this is the latter. Otherwise, the former.  2. Tell the what's wrong with the following c program:  int countAs(char s[]) {\n   int length = sizeof(s) / sizeof(char);\n   int i, result = 0;\n   for(i = 0; i   length; i++) {\n     if(s[i] ==  A  || s[i] ==  a ) {\n       result++;\n     }\n   }\n  return result;\n}  Answer: sizeof(s) does not work, because you lost the length of the array in C when you passing it as an parameter. It becomes a pointer. sizeof(s) is a unchanged value.  Question: What is the value?  Answer: In 32 bits operation system, sizeof(s) is 4 while in 64 bits operation system, 8.  Question: How can you fix it?  Answer: pass one more argument indicates the length of the array.  Question: And other methods?  Answer: Using strlen() function to calculate the length of the string.  Question: What should you pay attention to when you use strlen()?  Answer: Well, you should check NULL pointers when the parameters is passed in and also there should be a '0' char at the end of the string.  Question: And other methods?  Answer: It's unnecessary to calculate the length of the string. You can just using the '0' char to know the end of the string when you write for loop.  Question: What other problem about the function?  Answer: The argument does not have side effect in this case, it should be made const. Also the return type int may be overflow in the case the string is too long. And the name of the function is not good in some way, make it \"count_letter_a\".  Interviewer: Your level of knowledge is OK. Talk about one of your project experience......  And then I talk about my experience about the online judge system Matrix I am working for now.", 
            "title": "The first round interview"
        }, 
        {
            "location": "/posts/old/Huawei-interview/#the_second_round_interview", 
            "text": "The interviewer is a project manager.  Question: Do you know what is Cyclomatic Complexity in code?  Answer: Meng Biing......  Well I do not know what is that, but I get back and learn someting more.   Cyclomatic complexity is a software metric (measurement), used to indicate the complexity of a program. It is a quantitative measure of the number of linearly independent paths through a program's source code. It was developed by Thomas J. McCabe, Sr. in 1976.  Cyclomatic complexity is computed using the control flow graph of the program: the nodes of the graph correspond to indivisible groups of commands of a program, and a directed edge connects two nodes if the second command might be executed immediately after the first command. Cyclomatic complexity may also be applied to individual functions, modules, methods or classes within a program.  One testing strategy, called basis path testing by McCabe who first proposed it, is to test each linearly independent path through the program; in this case, the number of test cases will equal the cyclomatic complexity of the program.[1]   From Wikipedia  I know it now.  The definition is:  \\[\nM = E \u2212 N + 2P\n\\] Where:  E = the number of edges of the graph.  N = the number of nodes of the graph.  P = the number of connected components.  Question:  What qualities should a programmer have?  Answer:  The most important is that a programmer should be familiar with a programming language, c/c++ is better. Secondly, basic knowledge of CS including operation system, database system, computer architecture, data structure and algorithm, computer network and compile theory should be acquired by him. A programmer should always be in touched withe his teammates which means communication and idea is also very important.  Ok, the interview result will sent to you in five days.", 
            "title": "The second round interview"
        }, 
        {
            "location": "/posts/old/Netease-interview/", 
            "text": "Dalaoers, please not check the water table, this will remain empty", 
            "title": "\u7f51\u6613\u5b9e\u4e60\u9762\u8bd5"
        }, 
        {
            "location": "/posts/old/Netease-interview/#dalaoers_please_not_check_the_water_table_this_will_remain_empty", 
            "text": "", 
            "title": "Dalaoers, please not check the water table, this will remain empty"
        }
    ]
}